{
  final GridSet gridSet=layerGrid.getGridSet();
  final String gridSetId=gridSet.getName();
  final SRS srs=gridSet.getSRS();
  final CoordinateReferenceSystem gridSetCrs;
  try {
    gridSetCrs=CRS.decode("EPSG:" + srs.getNumber(),true);
  }
 catch (  Exception e) {
    throw new RuntimeException("Can't decode SRS for layer '" + layerName + "': ESPG:"+ srs.getNumber());
  }
  ReferencedEnvelope truncateBoundsInGridsetCrs;
  try {
    truncateBoundsInGridsetCrs=bounds.transform(gridSetCrs,true);
  }
 catch (  Exception e) {
    log.warning("Can't truncate layer " + layerName + ": error transforming requested bounds to layer gridset "+ gridSetId+ ": "+ e.getMessage());
    return null;
  }
  final double minx=truncateBoundsInGridsetCrs.getMinX();
  final double miny=truncateBoundsInGridsetCrs.getMinY();
  final double maxx=truncateBoundsInGridsetCrs.getMaxX();
  final double maxy=truncateBoundsInGridsetCrs.getMaxY();
  final BoundingBox reqBounds=new BoundingBox(minx,miny,maxx,maxy);
  final BoundingBox layerBounds=layerGrid.getCoverageBestFitBounds();
  if (!layerBounds.intersects(reqBounds)) {
    log.fine("Requested truncation bounds do not intersect cached layer bounds, ignoring truncate request");
    return null;
  }
  final BoundingBox intersectingBounds=BoundingBox.intersection(layerBounds,reqBounds);
  return intersectingBounds;
}
