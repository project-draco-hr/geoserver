{
  final String format=responseFormat.getFormat();
  final String mimeType=responseFormat.getMimeType();
  Response response=cachedTileEncoders.get(format);
  if (response == null) {
    final Operation operation;
{
      GetMapRequest getMap=new GetMapRequest();
      getMap.setFormat(mimeType);
      Object[] parameters={getMap};
      org.geoserver.platform.Service service=(org.geoserver.platform.Service)GeoServerExtensions.bean("wms-1_1_1-ServiceDescriptor");
      if (service == null) {
        throw new IllegalStateException("Didn't find service descriptor 'wms-1_1_1-ServiceDescriptor'");
      }
      operation=new Operation("GetMap",service,(Method)null,parameters);
    }
    final List<Response> extensions=GeoServerExtensions.extensions(Response.class);
    final Class<?> webMapClass=metaTileMap.getClass();
    for (    Response r : extensions) {
      if (r.getBinding().isAssignableFrom(webMapClass) && r.canHandle(operation)) {
synchronized (cachedTileEncoders) {
          cachedTileEncoders.put(mimeType,r);
          response=r;
          break;
        }
      }
    }
    if (response == null) {
      throw new IllegalStateException("Didn't find a " + Response.class.getName() + " to handle "+ mimeType);
    }
  }
  return response;
}
