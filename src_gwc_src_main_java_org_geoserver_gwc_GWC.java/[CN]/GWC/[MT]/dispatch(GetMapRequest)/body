{
  final String layerName=request.getRawKvp().get("LAYERS");
  if (layerName.indexOf(',') != -1) {
    return null;
  }
  final TileLayer tileLayer;
  try {
    tileLayer=this.tld.getTileLayer(layerName);
  }
 catch (  GeoWebCacheException e) {
    return null;
  }
  if (!tileLayer.isEnabled()) {
    return null;
  }
  if (!isCachingPossible(tileLayer,request)) {
    return null;
  }
  GridSubset gridSubset;
  try {
    String srs=request.getSRS();
    int epsgId=Integer.parseInt(srs.substring(srs.indexOf(':') + 1));
    SRS srs2=SRS.getSRS(epsgId);
    gridSubset=tileLayer.getGridSubsetForSRS(srs2);
    if (gridSubset == null) {
      return null;
    }
  }
 catch (  Exception e) {
    return null;
  }
  if (request.getWidth() != gridSubset.getTileWidth() || request.getHeight() != gridSubset.getTileHeight()) {
    return null;
  }
  final MimeType mimeType;
  try {
    mimeType=MimeType.createFromFormat(request.getFormat());
    List<MimeType> tileLayerFormats=tileLayer.getMimeTypes();
    if (!tileLayerFormats.contains(mimeType)) {
      return null;
    }
  }
 catch (  MimeException me) {
    return null;
  }
  ConveyorTile tileResp=null;
  try {
    HttpServletRequest servletReq=null;
    HttpServletResponse servletResp=null;
    final String gridSetId;
    long[] tileIndex;
    gridSetId=gridSubset.getName();
    Envelope bbox=request.getBbox();
    BoundingBox tileBounds=new BoundingBox(bbox.getMinX(),bbox.getMinY(),bbox.getMaxX(),bbox.getMaxY());
    try {
      tileIndex=gridSubset.closestIndex(tileBounds);
    }
 catch (    GridMismatchException e) {
      return null;
    }
    Map<String,String> fullParameters;
{
      Map<String,String> requestParameterMap=request.getRawKvp();
      fullParameters=tileLayer.getModifiableParameters(requestParameterMap,"UTF-8");
    }
    ConveyorTile tileReq;
    tileReq=new ConveyorTile(storageBroker,layerName,gridSetId,tileIndex,mimeType,fullParameters,servletReq,servletResp);
    tileResp=tileLayer.getTile(tileReq);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return tileResp;
}
