{
  GWC gwc=GWC.get();
  GWCConfig config=gwc.getConfig();
  GWCSettingsPage page=new GWCSettingsPage();
  tester.startPage(page);
  tester.assertRenderedPage(GWCSettingsPage.class);
  tester.assertComponent("form:cachingOptionsPanel:container:configs:blobstores",InMemoryBlobStorePanel.class);
  FormTester form=tester.newFormTester("form");
  form.setValue("cachingOptionsPanel:container:configs:blobstores:innerCachingEnabled",true);
  tester.assertRenderedPage(GWCSettingsPage.class);
  form.submit("submit");
  tester.assertNoErrorMessage();
  config=gwc.getConfig();
  assertTrue(config.isInnerCachingEnabled());
  tester.startPage(new GWCSettingsPage());
  tester.assertRenderedPage(GWCSettingsPage.class);
  tester.assertComponent("form:cachingOptionsPanel:container:configs:blobstores:container:caches",DropDownChoice.class);
  @SuppressWarnings("unchecked") DropDownChoice<String> choice=(DropDownChoice<String>)tester.getComponentFromLastRenderedPage("form:cachingOptionsPanel:container:configs:blobstores:container:caches");
  assertTrue(choice.getChoices().get(0).equalsIgnoreCase(GuavaCacheProvider.class.toString()));
  Component comp1=tester.getComponentFromLastRenderedPage("form:cachingOptionsPanel:container:configs:blobstores:container:cacheConfContainer:hardMemoryLimit");
  Component comp2=tester.getComponentFromLastRenderedPage("form:cachingOptionsPanel:container:configs:blobstores:container:cacheConfContainer:concurrencyLevel");
  assertTrue(comp1.isEnabled());
  assertTrue(comp2.isEnabled());
  form=tester.newFormTester("form");
  form.setValue("cachingOptionsPanel:container:configs:blobstores:container:persistenceEnabled",true);
  form.setValue("cachingOptionsPanel:container:configs:blobstores:container:cacheConfContainer:hardMemoryLimit",1 + "");
  form.setValue("cachingOptionsPanel:container:configs:blobstores:container:cacheConfContainer:concurrencyLevel",1 + "");
  tester.assertRenderedPage(GWCSettingsPage.class);
  form.submit("submit");
  tester.assertNoErrorMessage();
  config=gwc.getConfig();
  assertTrue(config.isPersistenceEnabled());
  assertEquals(config.getCacheConfigurations().get(GuavaCacheProvider.class.toString()).getConcurrencyLevel(),1);
  assertEquals(config.getCacheConfigurations().get(GuavaCacheProvider.class.toString()).getHardMemoryLimit(),1);
  tester.startPage(new GWCSettingsPage());
  tester.assertRenderedPage(GWCSettingsPage.class);
  form=tester.newFormTester("form");
  form.setValue("cachingOptionsPanel:container:configs:blobstores:innerCachingEnabled",false);
  form.submit("submit");
  tester.startPage(new GWCSettingsPage());
  tester.assertRenderedPage(GWCSettingsPage.class);
  Result res=tester.isVisible("form:cachingOptionsPanel:container:configs:blobstores:container:persistenceEnabled");
  assertTrue(res.wasFailed());
  config=gwc.getConfig();
  assertFalse(config.isInnerCachingEnabled());
}
