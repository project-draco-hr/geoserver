{
  super(id,file);
  this.file=file;
  this.hideFileSystem=hideFileSystem;
  ArrayList<File> roots=new ArrayList<File>();
  if (!hideFileSystem) {
    roots.addAll(Arrays.asList(File.listRoots()));
  }
  Collections.sort(roots);
  GeoServerResourceLoader loader=GeoServerExtensions.bean(GeoServerResourceLoader.class);
  File dataDirectory=loader.getBaseDirectory();
  roots.add(0,dataDirectory);
  if (!hideFileSystem && USER_HOME != null) {
    roots.add(1,USER_HOME);
  }
  File selection=(File)file.getObject();
  if (selection != null) {
    File relativeToDataDir=loader.url(selection.getPath());
    if (relativeToDataDir != null) {
      selection=relativeToDataDir;
    }
  }
  File selectionRoot=null;
  if (selection != null && selection.exists()) {
    for (    File root : roots) {
      if (isSubfile(root,selection.getAbsoluteFile())) {
        selectionRoot=root;
        break;
      }
    }
    if (selectionRoot == null) {
      selectionRoot=dataDirectory;
      file=new Model<File>(selectionRoot);
    }
 else {
      if (!selection.isDirectory()) {
        file=new Model<File>(selection.getParentFile());
      }
 else {
        file=new Model<File>(selection);
      }
    }
  }
 else {
    selectionRoot=dataDirectory;
    file=new Model<File>(selectionRoot);
  }
  this.file=file;
  setDefaultModel(file);
  final DropDownChoice<File> choice=new DropDownChoice<File>("roots",new Model<File>(selectionRoot),new Model<ArrayList<File>>(roots),new FileRootsRenderer());
  choice.add(new AjaxFormComponentUpdatingBehavior("change"){
    private static final long serialVersionUID=-1527567847101388940L;
    @Override protected void onUpdate(    AjaxRequestTarget target){
      File selection=(File)choice.getModelObject();
      breadcrumbs.setRootFile(selection);
      updateFileBrowser(selection,target);
    }
  }
);
  choice.setOutputMarkupId(true);
  add(choice);
  breadcrumbs=new FileBreadcrumbs("breadcrumbs",new Model<File>(selectionRoot),file){
    private static final long serialVersionUID=-6995769189316700797L;
    @Override protected void pathItemClicked(    File file,    AjaxRequestTarget target){
      updateFileBrowser(file,target);
    }
  }
;
  breadcrumbs.setOutputMarkupId(true);
  add(breadcrumbs);
  fileTable=new FileDataView("fileTable",new FileProvider(file)){
    private static final long serialVersionUID=-5481794219862786117L;
    @Override protected void linkNameClicked(    File file,    AjaxRequestTarget target){
      updateFileBrowser(file,target);
    }
  }
;
  fileTable.setOutputMarkupId(true);
  add(fileTable);
}
