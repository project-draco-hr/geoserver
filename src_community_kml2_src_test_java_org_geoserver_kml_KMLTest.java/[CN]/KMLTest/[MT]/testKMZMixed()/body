{
  MockHttpServletResponse response=getAsServletResponse("wms?request=getmap&service=wms&version=1.1.1" + "&format=" + KMZMapOutputFormat.MIME_TYPE + "&layers="+ getLayerId(MockData.BASIC_POLYGONS)+ ","+ getLayerId(MockData.WORLD)+ "&styles="+ MockData.BASIC_POLYGONS.getLocalPart()+ ","+ "&height=1024&width=1024&bbox=-180,-90,180,90&srs=EPSG:4326&format_options=kmscore:100");
  assertEquals(KMZMapOutputFormat.MIME_TYPE,response.getContentType());
  ByteArrayInputStream bis=getBinaryInputStream(response);
  ZipInputStream zis=new ZipInputStream(bis);
  ZipEntry entry=zis.getNextEntry();
  assertEquals("wms.kml",entry.getName());
  byte[] data=IOUtils.toByteArray(zis);
  Document dom=dom(new ByteArrayInputStream(data));
  print(dom);
  assertXpathEvaluatesTo("3","count(//kml:Folder[1]/kml:Placemark)",dom);
  assertXpathEvaluatesTo("0","count(//kml:Folder[1]/kml:GroundOverlay)",dom);
  assertXpathEvaluatesTo("0","count(//kml:Folder[2]/kml:Placemark)",dom);
  assertXpathEvaluatesTo("1","count(//kml:Folder[2]/kml:GroundOverlay)",dom);
  assertXpathEvaluatesTo("images/layers_1.png","//kml:Folder[2]/kml:GroundOverlay/kml:Icon/kml:href",dom);
  zis.closeEntry();
  entry=zis.getNextEntry();
  assertEquals("images/",entry.getName());
  zis.closeEntry();
  entry=zis.getNextEntry();
  assertEquals("images/layers_1.png",entry.getName());
  zis.closeEntry();
  assertNull(zis.getNextEntry());
}
