{
  RenderedImageMapOutputFormat of=new RenderedImageMapOutputFormat(wms){
    @Override protected StreamingRenderer buildRenderer(){
      return new PureVectorRenderer();
    }
    @Override protected RenderedImage prepareImage(    int width,    int height,    IndexColorModel palette,    boolean transparent){
      return new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);
    }
    @Override protected void onBeforeRender(    StreamingRenderer renderer){
      renderer.getJava2DHints().put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_OFF);
      Map hints=renderer.getRendererHints();
      double dpi=RendererUtilities.getDpi(hints);
      dpi=dpi / DEFAULT_UTFRESOLUTION;
      hints.put(StreamingRenderer.DPI_KEY,dpi);
    }
  }
;
  UTFGridEntries entries=new UTFGridEntries();
  UTFGridMapContent utfGridMapContent=buildUTFGridMapContent(mapContent,entries);
  RenderedImageMap map=of.produceMap(utfGridMapContent);
  return new UTFGridMap(utfGridMapContent,map.getImage());
}
