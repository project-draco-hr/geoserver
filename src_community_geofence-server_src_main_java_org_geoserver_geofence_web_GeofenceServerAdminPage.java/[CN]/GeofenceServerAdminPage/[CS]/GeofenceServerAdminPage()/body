{
  add(new AjaxLink<Object>("addNew"){
    private static final long serialVersionUID=-4136656891019857299L;
    @Override public void onClick(    AjaxRequestTarget target){
      setResponsePage(new GeofenceAdminRulePage(rulesModel.newRule(),rulesModel));
    }
  }
);
  add(remove=new AjaxLink<Object>("removeSelected"){
    private static final long serialVersionUID=2421854498051377608L;
    @Override public void onClick(    AjaxRequestTarget target){
      rulesModel.remove(rulesPanel.getSelection());
      target.add(rulesPanel);
    }
  }
);
  remove.setOutputMarkupId(true);
  remove.setEnabled(false);
  add(rulesPanel=new GeoServerTablePanel<ShortAdminRule>("rulesPanel",rulesModel=new GeofenceAdminRulesModel(),true){
    private static final long serialVersionUID=-9041215145551707243L;
    @Override protected Component getComponentForProperty(    String id,    IModel<ShortAdminRule> itemModel,    Property<ShortAdminRule> property){
      if (property == GeofenceAdminRulesModel.BUTTONS) {
        return new ButtonPanel(id,(ShortAdminRule)itemModel.getObject());
      }
      return null;
    }
    @Override protected void onSelectionUpdate(    AjaxRequestTarget target){
      remove.setEnabled(rulesPanel.getSelection().size() > 0);
      target.add(remove);
    }
  }
);
  rulesPanel.add(new WebTheme());
  rulesPanel.add(new DragSource(Operation.MOVE).drag("tr"));
  rulesPanel.add(new DropTarget(Operation.MOVE){
    private static final long serialVersionUID=-2153630274380471165L;
    public void onDrop(    AjaxRequestTarget target,    Transfer transfer,    Location location){
      if (location == null || !(location.getComponent().getDefaultModel().getObject() instanceof ShortAdminRule)) {
        return;
      }
      ShortAdminRule movedRule=transfer.getData();
      ShortAdminRule targetRule=(ShortAdminRule)location.getComponent().getDefaultModel().getObject();
      if (movedRule.getId().equals(targetRule.getId())) {
        return;
      }
      if (movedRule.getPriority() < targetRule.getPriority()) {
        movedRule.setPriority(targetRule.getPriority() + 1);
      }
 else {
        movedRule.setPriority(targetRule.getPriority());
      }
      rulesModel.save(movedRule);
      doReturn(GeofenceServerAdminPage.class);
    }
  }
.dropCenter("tr"));
  rulesPanel.setOutputMarkupId(true);
}
