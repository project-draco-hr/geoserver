{
  super(id,new Model());
  add(palette=new Palette<T>("palette",model,choicesModel,renderer,10,false){
    @Override protected Recorder<T> newRecorderComponent(){
      Recorder<T> rec=super.newRecorderComponent();
      rec.add(toAdd.toArray(new Behavior[toAdd.size()]));
      toAdd.clear();
      return rec;
    }
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newSelectedHeader(    final String componentId){
      return new Label(componentId,new ResourceModel(getSelectedHeaderPropertyKey()));
    }
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newAvailableHeader(    final String componentId){
      return new Label(componentId,new ResourceModel(getAvaliableHeaderPropertyKey()));
    }
  }
);
  palette.setOutputMarkupId(true);
}
