{
  Catalog catalog=getCatalog();
  File root=getTestData().getDataDirectoryRoot();
  String mosaicName="emptyMosaic";
  File mosaicRoot=new File(root,mosaicName);
  if (mosaicRoot.exists()) {
    FileUtils.deleteDirectory(mosaicRoot);
  }
  mosaicRoot.mkdirs();
  Properties props=new Properties();
  props.put("SPI","org.geotools.data.h2.H2DataStoreFactory");
  props.put("database","empty");
  try (FileOutputStream fos=new FileOutputStream(new File(mosaicRoot,"datastore.properties"))){
    props.store(fos,null);
  }
   CatalogBuilder cb=new CatalogBuilder(catalog);
  WorkspaceInfo ws=catalog.getDefaultWorkspace();
  cb.setWorkspace(ws);
  CoverageStoreInfo store=cb.buildCoverageStore(mosaicName);
  store.setURL("./" + mosaicName);
  store.setType("ImageMosaic");
  catalog.save(store);
  unpack("geotiff/EmissiveCampania.tif.bz2",mosaicRoot);
  File granule=new File(mosaicRoot,"EmissiveCampania.tif");
  store=catalog.getCoverageStoreByName(mosaicName);
  String contextDefinition="{\n" + "   \"import\": {\n" + "      \"targetWorkspace\": {\n"+ "         \"workspace\": {\n"+ "            \"name\": \"" + ws.getName() + "\"\n"+ "         }\n"+ "      },\n"+ "      \"data\": {\n"+ "        \"type\": \"file\",\n"+ "        \"file\": \""+ jsonSafePath(granule.getAbsoluteFile())+ "\"\n"+ "      },"+ "      targetStore: {\n"+ "        dataStore: {\n"+ "        name: \""+ store.getName()+ "\",\n"+ "        }\n"+ "      }\n"+ "   }\n"+ "}";
  JSONObject json=(JSONObject)json(postAsServletResponse("/rest/imports?exec=true",contextDefinition,"application/json"));
  print(json);
  String state=json.getJSONObject("import").getString("state");
  assertEquals("COMPLETE",state);
  StructuredGridCoverage2DReader reader=(StructuredGridCoverage2DReader)store.getGridCoverageReader(null,null);
  GranuleSource granules=reader.getGranules(mosaicName,true);
  assertEquals(1,granules.getCount(Query.ALL));
  LayerInfo layer=catalog.getLayerByName(mosaicName);
  assertNotNull(layer);
}
