{
  CoverageInfo info=null;
  if (isEOEnabled()) {
    if (codec.getGranuleCoverage(coverageId) != null && codec.isValidDataset(ci)) {
      SimpleFeatureIterator it=null;
      try {
        StructuredGridCoverage2DReader reader=(StructuredGridCoverage2DReader)ci.getGridCoverageReader(null,GeoTools.getDefaultHints());
        String name;
        name=codec.getCoverageName(ci);
        GranuleSource source=reader.getGranules(name,true);
        Query q=new Query();
        SimpleFeatureCollection collection=source.getGranules(q);
        if (!collection.isEmpty()) {
          List<DimensionDescriptor> descriptors=getActiveDimensionDescriptor(ci,reader,name);
          it=collection.features();
          if (it.hasNext()) {
            SimpleFeature feature=it.next();
            info=new GranuleCoverageInfo(ci,feature,descriptors);
          }
        }
        if (info == null) {
          if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.log(Level.FINE,"No granule found for the granuleId: " + getGranuleId(coverageId));
          }
        }
      }
 catch (      IOException e) {
        if (LOGGER.isLoggable(Level.SEVERE)) {
          LOGGER.log(Level.SEVERE,e.getMessage(),e);
        }
        throw new WCS20Exception(e);
      }
 finally {
        if (it != null) {
          try {
            it.close();
          }
 catch (          Exception e) {
            if (LOGGER.isLoggable(Level.SEVERE)) {
              LOGGER.log(Level.SEVERE,e.getMessage(),e);
            }
          }
        }
      }
    }
  }
  if (info == null) {
    info=ci;
  }
  return info;
}
