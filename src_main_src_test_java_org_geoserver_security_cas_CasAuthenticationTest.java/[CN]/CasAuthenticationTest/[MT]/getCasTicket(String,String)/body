{
  MockHttpServletRequest request=createRequest("/foo/bar");
  MockHttpServletResponse response=new MockHttpServletResponse();
  MockFilterChain chain=new MockFilterChain();
  getProxy().doFilter(request,response,chain);
  assertEquals(HttpServletResponse.SC_OK,response.getErrorCode());
  assertTrue(response.wasRedirectSent());
  String casLogin=response.getHeader("Location");
  assertNotNull(casLogin);
  assertTrue(casLogin.startsWith(loginUrl.toString()));
  URL casLoginURL=new URL(casLogin);
  assertTrue(casLoginURL.getQuery().startsWith("service="));
  SecurityContext ctx=(SecurityContext)request.getSession(true).getAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY);
  assertNull(ctx);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  HttpURLConnection conn=(HttpURLConnection)casLoginURL.openConnection();
  BufferedReader in=new BufferedReader(new InputStreamReader(conn.getInputStream()));
  String line="";
  StringBuffer buff=new StringBuffer();
  while ((line=in.readLine()) != null) {
    buff.append(line);
  }
  in.close();
  assertTrue(buff.toString().contains("username"));
  assertTrue(buff.toString().contains("password"));
  String actionValue=extractValue("action=\"",buff.toString());
  URL url=new URL(casLoginURL.getProtocol(),casLoginURL.getHost(),casLoginURL.getPort(),actionValue);
  String cookieValue=getResponseHeaderValue(conn,"Set-Cookie");
  assertNotNull(cookieValue);
  Map<String,String> paramMap=new HashMap<String,String>();
  paramMap.put("username",username);
  paramMap.put("password",password);
  paramMap.put("_eventId","submit");
  paramMap.put("submit","LOGIN");
  String lt=extractValue("name=\"lt\" value=\"",buff.toString());
  assertNotNull(lt);
  String execution=extractValue("name=\"execution\" value=\"",buff.toString());
  assertNotNull(execution);
  paramMap.put("lt",lt);
  paramMap.put("execution",execution);
  String redirectAfterLogin=doLogin(url,paramMap,cookieValue);
  if (redirectAfterLogin == null)   return null;
  assertTrue(redirectAfterLogin.startsWith(serviceUrl.toString()));
  int index=redirectAfterLogin.indexOf("ticket=");
  String ticket=redirectAfterLogin.substring(index + "ticket=".length());
  return ticket;
}
