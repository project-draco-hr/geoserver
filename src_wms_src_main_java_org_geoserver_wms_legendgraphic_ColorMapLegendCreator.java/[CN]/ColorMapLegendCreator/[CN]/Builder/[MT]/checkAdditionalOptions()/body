{
  fontAntiAliasing=false;
  if (additionalOptions.get("fontAntiAliasing") instanceof String) {
    String aaVal=(String)additionalOptions.get("fontAntiAliasing");
    if (aaVal.equalsIgnoreCase("on") || aaVal.equalsIgnoreCase("true") || aaVal.equalsIgnoreCase("yes")|| aaVal.equalsIgnoreCase("1")) {
      fontAntiAliasing=true;
    }
  }
  if (additionalOptions.get("dx") instanceof String) {
    columnMarginPercentage=Double.parseDouble((String)additionalOptions.get("dx"));
  }
  if (additionalOptions.get("bandInfo") instanceof String) {
    bandInformation=Boolean.parseBoolean((String)additionalOptions.get("bandInfo"));
  }
  if (additionalOptions.get("dy") instanceof String) {
    rowMarginPercentage=Double.parseDouble((String)additionalOptions.get("dy"));
  }
  if (additionalOptions.get("mx") instanceof String) {
    hMarginPercentage=Double.parseDouble((String)additionalOptions.get("mx"));
  }
  if (additionalOptions.get("my") instanceof String) {
    vMarginPercentage=Double.parseDouble((String)additionalOptions.get("my"));
  }
  if (additionalOptions.get("borderColor") instanceof String) {
    borderColor=LegendUtils.color((String)additionalOptions.get("borderColor"));
  }
  if (additionalOptions.get("border") instanceof String) {
    border=Boolean.valueOf((String)additionalOptions.get("border"));
  }
  if (additionalOptions.get("forceRule") instanceof String) {
    forceRule=Boolean.parseBoolean((String)additionalOptions.get("forceRule"));
  }
  if (!forceRule)   for (  ColorMapEntryLegendBuilder row : bodyRows) {
    final Cell labelM=row.getLabelManager();
    if (labelM == null)     forceRule=true;
 else {
      forceRule=false;
      break;
    }
  }
}
