{
  BufferedImage image=ImageUtils.createImage(1,1,(IndexColorModel)null,transparent);
  final Map<Key,Object> hintsMap=new HashMap<Key,Object>();
  Graphics2D graphics=ImageUtils.prepareTransparency(transparent,backgroundColor,image,hintsMap);
  rowH=0;
  colorW=0;
  ruleW=0;
  labelW=0;
  cycleBodyRows(graphics);
  if (bandInformation) {
    final String bandNameString="Band selection is " + this.grayChannelName;
    footerRows.add(new TextManager(bandNameString,vAlign,hAlign,backgroundColor,requestedDimension,labelFont,labelFontColor,fontAntiAliasing,borderColor));
    final String colorMapTypeString="ColorMap type is " + this.colorMapType.toString();
    footerRows.add(new TextManager(colorMapTypeString,vAlign,hAlign,backgroundColor,requestedDimension,labelFont,labelFontColor,fontAntiAliasing,borderColor));
    final String extendedCMapString="ColorMap is " + (this.extended ? "" : "not") + " extended";
    footerRows.add(new TextManager(extendedCMapString,vAlign,hAlign,backgroundColor,requestedDimension,labelFont,labelFontColor,fontAntiAliasing,borderColor));
    cycleFooterRows(graphics);
  }
  final double maxW=Math.max(colorW + ruleW + labelW,footerW);
  dx=maxW * columnMarginPercentage;
  dy=colorMapType == ColorMapType.RAMP ? 0 : rowH * rowMarginPercentage;
  final double mx=maxW * hMarginPercentage;
  final double my=rowH * vMarginPercentage;
  margin=Math.max(mx,my);
}
