{
  MockHttpServletResponse resp=getAsServletResponse("wfs?request=GetFeature&version=1.0.0&typeName=sf:PrimitiveGeoFeature&outputFormat=excel");
  InputStream in=getBinaryInputStream(resp);
  assertEquals("application/msexcel",resp.getContentType());
  assertEquals("attachment; filename=PrimitiveGeoFeature.xls",resp.getHeader("Content-Disposition"));
  HSSFWorkbook wb=new HSSFWorkbook(in);
  HSSFSheet sheet=wb.getSheet("PrimitiveGeoFeature");
  assertNotNull(sheet);
  FeatureSource fs=getFeatureSource(MockData.PRIMITIVEGEOFEATURE);
  final int feautureRows=fs.getCount(Query.ALL);
  assertEquals(feautureRows + 1,sheet.getPhysicalNumberOfRows());
  final SimpleFeatureType schema=(SimpleFeatureType)fs.getSchema();
  final HSSFRow header=sheet.getRow(0);
  assertEquals("FID",header.getCell(0).getRichStringCellValue().toString());
  for (int i=0; i < schema.getAttributeCount(); i++) {
    assertEquals(schema.getDescriptor(i).getLocalName(),header.getCell(i + 1).getRichStringCellValue().toString());
  }
  FeatureIterator fi=fs.getFeatures().features();
  SimpleFeature sf=(SimpleFeature)fi.next();
  fi.close();
  HSSFCell cell=sheet.getRow(1).getCell(1);
  assertEquals(HSSFCell.CELL_TYPE_STRING,cell.getCellType());
  assertEquals(sf.getAttribute(0),cell.getRichStringCellValue().toString());
  cell=sheet.getRow(1).getCell(4);
  assertEquals(HSSFCell.CELL_TYPE_STRING,cell.getCellType());
  assertEquals(sf.getAttribute(3).toString(),cell.getRichStringCellValue().toString());
  cell=sheet.getRow(1).getCell(6);
  assertEquals(HSSFCell.CELL_TYPE_NUMERIC,cell.getCellType());
  assertEquals(((Number)sf.getAttribute(5)).doubleValue(),cell.getNumericCellValue());
  cell=sheet.getRow(1).getCell(10);
  assertEquals(HSSFCell.CELL_TYPE_NUMERIC,cell.getCellType());
  assertEquals(sf.getAttribute(9),cell.getDateCellValue());
  cell=sheet.getRow(1).getCell(12);
  assertEquals(HSSFCell.CELL_TYPE_BOOLEAN,cell.getCellType());
  assertEquals(sf.getAttribute(11),cell.getBooleanCellValue());
  cell=sheet.getRow(1).getCell(3);
  assertNull(cell);
}
