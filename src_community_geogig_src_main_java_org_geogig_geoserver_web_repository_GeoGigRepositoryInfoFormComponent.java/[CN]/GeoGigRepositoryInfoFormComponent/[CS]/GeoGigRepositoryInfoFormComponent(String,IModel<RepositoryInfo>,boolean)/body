{
  super(id,model);
  dropdownPanel=new DropDownChoiceParamPanel("configChoicePanel",new DropDownModel(model),new ResourceModel("GeoGigRepositoryInfoFormComponent.repositoryType","Repository Type"),DropDownModel.CONFIG_LIST,true);
  final DropDownChoice<Serializable> dropDownChoice=dropdownPanel.getFormComponent();
  dropDownChoice.add(new AjaxFormComponentUpdatingBehavior("change"){
    private static final long serialVersionUID=1L;
    @Override protected void onUpdate(    AjaxRequestTarget target){
      final String value=dropDownChoice.getModelObject().toString();
      directoryComponent.setVisible(DropDownModel.DIRECTORY_CONFIG.equals(value));
      pgPanel.setVisible(DropDownModel.PG_CONFIG.equals(value));
      target.add(settingsContainer);
    }
  }
);
  dropdownPanel.setEnabled(isNew);
  add(dropdownPanel);
  settingsContainer=new WebMarkupContainer("settingsContainer");
  settingsContainer.setOutputMarkupId(true);
  add(settingsContainer);
  IModel<String> nameModel=new RepoNameModel(model);
  repoNamePanel=new TextParamPanel("repositoryNamePanel",nameModel,new ResourceModel("GeoGigRepositoryInfoFormComponent.repositoryName","Repository Name"),true);
  settingsContainer.add(repoNamePanel);
  pgPanel=new PostgresConfigFormPanel("pgPanel",new PGBeanModel(model));
  pgPanel.setVisible(DropDownModel.PG_CONFIG.equals(dropDownChoice.getModelObject().toString()));
  settingsContainer.add(pgPanel);
  directoryComponent=new GeoGigDirectoryFormComponent("parentDirectory",new RepoDirModel(model));
  directoryComponent.setOutputMarkupId(true);
  directoryComponent.setVisible(DropDownModel.DIRECTORY_CONFIG.equals(dropDownChoice.getModelObject().toString()));
  directoryComponent.setEnabled(isNew);
  settingsContainer.add(directoryComponent);
}
