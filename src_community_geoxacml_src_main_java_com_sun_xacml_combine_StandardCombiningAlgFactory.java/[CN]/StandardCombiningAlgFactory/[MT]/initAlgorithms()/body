{
  logger.config("Initializing standard combining algorithms");
  supportedAlgorithms=new HashSet<CombiningAlgorithm>();
  supportedAlgIds=new HashSet<String>();
  supportedAlgorithms.add(new DenyOverridesRuleAlg());
  supportedAlgIds.add(DenyOverridesRuleAlg.algId);
  supportedAlgorithms.add(new DenyOverridesPolicyAlg());
  supportedAlgIds.add(DenyOverridesPolicyAlg.algId);
  supportedAlgorithms.add(new OrderedDenyOverridesRuleAlg());
  supportedAlgIds.add(OrderedDenyOverridesRuleAlg.algId);
  supportedAlgorithms.add(new OrderedDenyOverridesPolicyAlg());
  supportedAlgIds.add(OrderedDenyOverridesPolicyAlg.algId);
  supportedAlgorithms.add(new PermitOverridesRuleAlg());
  supportedAlgIds.add(PermitOverridesRuleAlg.algId);
  supportedAlgorithms.add(new PermitOverridesPolicyAlg());
  supportedAlgIds.add(PermitOverridesPolicyAlg.algId);
  supportedAlgorithms.add(new OrderedPermitOverridesRuleAlg());
  supportedAlgIds.add(OrderedPermitOverridesRuleAlg.algId);
  supportedAlgorithms.add(new OrderedPermitOverridesPolicyAlg());
  supportedAlgIds.add(OrderedPermitOverridesPolicyAlg.algId);
  supportedAlgorithms.add(new FirstApplicableRuleAlg());
  supportedAlgIds.add(FirstApplicableRuleAlg.algId);
  supportedAlgorithms.add(new FirstApplicablePolicyAlg());
  supportedAlgIds.add(FirstApplicablePolicyAlg.algId);
  supportedAlgorithms.add(new OnlyOneApplicablePolicyAlg());
  supportedAlgIds.add(OnlyOneApplicablePolicyAlg.algId);
  supportedAlgIds=Collections.unmodifiableSet(supportedAlgIds);
}
