{
  Python python=getGeoServerApplication().getBeanOfType(Python.class);
  python.interpreter();
  model=new PythonInterpreterDetachableModel();
  Form form=new Form("form");
  add(form);
  final AjaxButton execute=new AjaxButton("execute"){
    @Override protected void onSubmit(    AjaxRequestTarget target,    Form form){
      String[] lines=output.split("\n");
      String line=lines[lines.length - 1];
      if (line.startsWith(">>> ")) {
        line=line.substring(4);
      }
      PythonInterpreter pi=(PythonInterpreter)model.getObject();
      ByteArrayOutputStream out=new ByteArrayOutputStream();
      pi.setOut(out);
      try {
        pi.exec(line);
      }
 catch (      PyException pe) {
        pe.printStackTrace(new PrintWriter(out,true));
      }
      output+="\n";
      output+=new String(out.toByteArray());
      output+=">>> ";
      target.addComponent(outputTextArea);
      target.appendJavascript("var ta = document.getElementById('" + outputTextArea.getMarkupId() + "');"+ "ta.scrollTop = ta.scrollHeight;");
    }
  }
;
  form.add(execute);
  AjaxButton clear=new AjaxButton("clear"){
    @Override protected void onSubmit(    AjaxRequestTarget target,    Form form){
      output=">>> ";
      target.addComponent(outputTextArea);
    }
  }
;
  form.add(clear);
  outputTextArea=new TextArea("output",new PropertyModel(this,"output")){
    @Override protected void onComponentTag(    ComponentTag tag){
      super.onComponentTag(tag);
      tag.put("onkeypress","if (event.keyCode == 13) { " + "document.getElementById('" + execute.getMarkupId() + "').click();"+ "return true;"+ "}");
    }
  }
;
  outputTextArea.setOutputMarkupId(true);
  form.add(outputTextArea);
}
