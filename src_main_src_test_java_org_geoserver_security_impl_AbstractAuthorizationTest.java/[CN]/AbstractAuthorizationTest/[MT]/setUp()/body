{
  rwUser=new TestingAuthenticationToken("rw","supersecret",Arrays.asList(new GrantedAuthority[]{new GeoServerRole("READER"),new GeoServerRole("WRITER")}));
  roUser=new TestingAuthenticationToken("ro","supersecret",Arrays.asList(new GrantedAuthority[]{new GeoServerRole("READER")}));
  anonymous=new TestingAuthenticationToken("anonymous",null);
  milUser=new TestingAuthenticationToken("military","supersecret",Arrays.asList(new GrantedAuthority[]{new GeoServerRole("MILITARY")}));
  root=new TestingAuthenticationToken("admin","geoserver",Arrays.asList(new GrantedAuthority[]{new GeoServerRole(SecureTreeNode.ROOT_ROLE)}));
  catalog=createNiceMock(Catalog.class);
  expect(catalog.getWorkspace((String)anyObject())).andReturn(createNiceMock(WorkspaceInfo.class)).anyTimes();
  replay(catalog);
  toppWs=createNiceMock(WorkspaceInfo.class);
  expect(toppWs.getName()).andReturn("topp").anyTimes();
  replay(toppWs);
  nurcWs=createNiceMock(WorkspaceInfo.class);
  expect(nurcWs.getName()).andReturn("nurc").anyTimes();
  replay(nurcWs);
  statesLayer=buildLayer("states",toppWs,FeatureTypeInfo.class,false);
  roadsLayer=buildLayer("roads",toppWs,FeatureTypeInfo.class,false);
  landmarksLayer=buildLayer("landmarks",toppWs,FeatureTypeInfo.class);
  basesLayer=buildLayer("bases",toppWs,FeatureTypeInfo.class);
  arcGridLayer=buildLayer("arc.grid",nurcWs,CoverageInfo.class);
  states=(FeatureTypeInfo)statesLayer.getResource();
  statesStore=states.getStore();
  arcGrid=(CoverageInfo)arcGridLayer.getResource();
  arcGridStore=arcGrid.getStore();
  roads=(FeatureTypeInfo)roadsLayer.getResource();
  roadsStore=roads.getStore();
  landmarks=(FeatureTypeInfo)landmarksLayer.getResource();
  bases=(FeatureTypeInfo)basesLayer.getResource();
  pointStyle=buildStyle("point",null);
  lineStyle=buildStyle("line",toppWs);
  layerGroupGlobal=buildLayerGroup("layerGroup",pointStyle,null,arcGridLayer);
  layerGroupTopp=buildLayerGroup("layerGroupTopp",lineStyle,toppWs,statesLayer);
  layerGroupWithSomeLockedLayer=buildLayerGroup("layerGroupWithSomeLockedLayer",lineStyle,toppWs,statesLayer,roadsLayer);
  cascadedLayer=buildLayer("cascaded",toppWs,WMSLayerInfo.class);
  cascaded=(WMSLayerInfo)cascadedLayer.getResource();
}
