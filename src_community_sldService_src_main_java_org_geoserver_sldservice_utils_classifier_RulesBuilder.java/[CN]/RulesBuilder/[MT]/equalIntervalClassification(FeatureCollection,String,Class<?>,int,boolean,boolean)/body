{
  Classifier groups=null;
  try {
    final Function classify=ff.function("EqualInterval",ff.property(property),ff.literal(classNumber));
    groups=(Classifier)classify.evaluate(features);
    if (groups instanceof RangedClassifier)     if (open)     return openRangedRules((RangedClassifier)groups,property,propertyType,normalize);
 else     return closedRangedRules((RangedClassifier)groups,property,propertyType,normalize);
 else     if (groups instanceof ExplicitClassifier)     return this.explicitRules((ExplicitClassifier)groups,property,propertyType);
  }
 catch (  Exception e) {
    if (LOGGER.isLoggable(Level.INFO))     LOGGER.log(Level.INFO,"Failed to build EqualInterval Classification" + e.getLocalizedMessage(),e);
  }
  return null;
}
