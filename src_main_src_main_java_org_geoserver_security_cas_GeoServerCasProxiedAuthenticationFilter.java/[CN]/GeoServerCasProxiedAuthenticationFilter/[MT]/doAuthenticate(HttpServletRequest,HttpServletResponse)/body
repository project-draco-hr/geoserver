{
  Assertion assertion=getCASAssertion(request);
  if (assertion == null) {
    return;
  }
  UserDetails details=null;
  ;
  String principal=assertion.getPrincipal().getName();
  if (RoleSource.UserGroupService.equals(getRoleSource())) {
    try {
      details=getSecurityManager().loadUserGroupService(getUserGroupServiceName()).getUserByUsername(principal);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    if (details != null && details.isEnabled() == false)     return;
  }
  LOGGER.log(Level.FINE,"preAuthenticatedPrincipal = " + assertion.getPrincipal().getName());
  CasAuthenticationToken result=null;
  if (GeoServerUser.ROOT_USERNAME.equals(principal)) {
    if (details == null)     details=GeoServerUser.createRoot();
    result=new CasAuthenticationToken(getName(),details,request.getParameter(GeoServerCasConstants.ARTIFACT_PARAMETER),Collections.singleton(GeoServerRole.ADMIN_ROLE),details,assertion);
  }
 else {
    Collection<GeoServerRole> roles=null;
    if (details == null)     details=new GeoServerUser(principal);
    try {
      roles=getRoles(request,principal);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    if (roles.contains(GeoServerRole.AUTHENTICATED_ROLE) == false)     roles.add(GeoServerRole.AUTHENTICATED_ROLE);
    result=new CasAuthenticationToken(getName(),details,request.getParameter(GeoServerCasConstants.ARTIFACT_PARAMETER),roles,details,assertion);
  }
  result.setDetails(casAuthenticationDetailsSource.buildDetails(request));
  SecurityContextHolder.getContext().setAuthentication(result);
}
