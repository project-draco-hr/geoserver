{
  ExceptionTranslationFilterConfig config=new ExceptionTranslationFilterConfig();
  config.setClassName(GeoServerExceptionTranslationFilter.class.getName());
  config.setName("testEx");
  boolean failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.ACCESS_DENIED_PAGE_NEEDED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setAccessDeniedErrorPage("blabla");
  config.setAuthenticationFilterName("unknown");
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.ACCESS_DENIED_PAGE_PREFIX,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setAccessDeniedErrorPage("/denied.jsp");
  config.setAuthenticationFilterName("unknown");
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.INVALID_ENTRY_POINT,ex.getId());
    assertEquals(1,ex.getArgs().length);
    assertEquals("unknown",ex.getArgs()[0]);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setAuthenticationFilterName(GeoServerSecurityFilterChain.FILTER_SECURITY_INTERCEPTOR);
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.NO_AUTH_ENTRY_POINT,ex.getId());
    assertEquals(1,ex.getArgs().length);
    assertEquals(GeoServerSecurityFilterChain.FILTER_SECURITY_INTERCEPTOR,ex.getArgs()[0]);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setAuthenticationFilterName(null);
  getSecurityManager().saveFilter(config);
}
