{
  CasAuthenticationFilterConfig config=new CasAuthenticationFilterConfig();
  config.setClassName(GeoServerCasAuthenticationFilter.class.getName());
  config.setName("testCAS");
  boolean failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.CAS_SERVICE_URL_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setService("blabla");
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.CAS_SERVICE_URL_MALFORMED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setService("http://localhost/geoserver");
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.CAS_SERVICE_URL_SUFFIX,ex.getId());
    assertEquals(1,ex.getArgs().length);
    assertEquals(CasAuthenticationFilterConfig.CAS_CHAIN_PATTERN,ex.getArgs()[0]);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setService("http://localhost/geoserver" + CasAuthenticationFilterConfig.CAS_CHAIN_PATTERN);
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.CAS_SERVER_URL_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  failed=false;
  config.setLoginUrl("blabla");
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.CAS_SERVER_URL_MALFORMED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  failed=false;
  config.setLoginUrl("http://localhost/cas/login");
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.CAS_TICKETVALIDATOR_URL_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  failed=false;
  config.setTicketValidatorUrl("blabla");
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.CAS_TICKETVALIDATOR_URL_MALFORMED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setTicketValidatorUrl("http://localhost/cas");
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.USER_GROUP_SERVICE_NEEDED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setUserGroupServiceName("blabla");
  failed=false;
  try {
    getSecurityManager().saveFilter(config);
  }
 catch (  FilterConfigException ex) {
    assertEquals(FilterConfigException.UNKNOWN_USER_GROUP_SERVICE,ex.getId());
    assertEquals(1,ex.getArgs().length);
    assertEquals("blabla",ex.getArgs()[0]);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setUserGroupServiceName(XMLUserGroupService.DEFAULT_NAME);
  getSecurityManager().saveFilter(config);
}
