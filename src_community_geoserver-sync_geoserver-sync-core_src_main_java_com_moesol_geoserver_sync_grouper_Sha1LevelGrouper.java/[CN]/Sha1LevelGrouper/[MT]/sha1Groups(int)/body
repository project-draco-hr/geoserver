{
  GroupPosition prefix=new GroupPosition(level);
  long maxCurrentGroup=0;
  if (m_sortedFeatureSha1s.size() > 0) {
    IdAndValueSha1s zero=m_sortedFeatureSha1s.get(0);
    prefix.setFromSha1(versionFeatures.getBucketPrefixSha1(zero));
    hashOne(zero.getValueSha1());
    maxCurrentGroup++;
  }
  for (int i=1; i < m_sortedFeatureSha1s.size(); i++) {
    IdAndValueSha1s sha1=m_sortedFeatureSha1s.get(i);
    if (versionFeatures.getBucketPrefixSha1(sha1).isPrefixMatch(prefix)) {
      hashOne(sha1.getValueSha1());
      maxCurrentGroup++;
      continue;
    }
    if (i < m_sortedFeatureSha1s.size()) {
      doGroupCompleted(prefix,new Sha1Value(m_sha1.digest()),maxCurrentGroup);
      updateMaxInGroup(maxCurrentGroup);
      maxCurrentGroup=0;
      hashOne(sha1.getValueSha1());
      maxCurrentGroup++;
      prefix.setFromSha1(versionFeatures.getBucketPrefixSha1(sha1));
    }
  }
  if (m_sortedFeatureSha1s.size() > 0) {
    doGroupCompleted(prefix,new Sha1Value(m_sha1.digest()),maxCurrentGroup);
    updateMaxInGroup(maxCurrentGroup);
    maxCurrentGroup=0;
  }
}
