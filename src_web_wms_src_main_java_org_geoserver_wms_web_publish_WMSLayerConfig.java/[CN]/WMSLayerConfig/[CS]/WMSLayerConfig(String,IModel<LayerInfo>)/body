{
  super(id,layerModel);
  add(new CheckBox("queryableEnabled",new PropertyModel<Boolean>(layerModel,"queryable")));
  add(new CheckBox("opaqueEnabled",new PropertyModel<Boolean>(layerModel,"opaque")));
  WebMarkupContainer styleContainer=new WebMarkupContainer("styles");
  add(styleContainer);
  ResourceInfo resource=layerModel.getObject().getResource();
  styleContainer.setVisible(resource instanceof CoverageInfo || resource instanceof FeatureTypeInfo);
  StylesModel styles=new StylesModel();
  final PropertyModel<StyleInfo> defaultStyleModel=new PropertyModel<StyleInfo>(layerModel,"defaultStyle");
  final DropDownChoice<StyleInfo> defaultStyle=new DropDownChoice<StyleInfo>("defaultStyle",defaultStyleModel,styles,new StyleChoiceRenderer());
  defaultStyle.setRequired(true);
  styleContainer.add(defaultStyle);
  final Image defStyleImg=new Image("defaultStyleLegendGraphic");
  defStyleImg.setOutputMarkupId(true);
  styleContainer.add(defStyleImg);
  String wmsURL=getRequest().getRelativePathPrefixToContextRoot();
  wmsURL+=wmsURL.endsWith("/") ? "wms?" : "/wms?";
  final LegendGraphicAjaxUpdater defaultStyleUpdater;
  defaultStyleUpdater=new LegendGraphicAjaxUpdater(wmsURL,defStyleImg,defaultStyleModel);
  defaultStyle.add(new OnChangeAjaxBehavior(){
    private static final long serialVersionUID=-4098934889965471248L;
    @Override protected void onUpdate(    AjaxRequestTarget target){
      defaultStyleUpdater.updateStyleImage(target);
    }
  }
);
  LiveCollectionModel stylesModel=LiveCollectionModel.set(new PropertyModel<Set<StyleInfo>>(layerModel,"styles"));
  Palette<StyleInfo> extraStyles=new Palette<StyleInfo>("extraStyles",stylesModel,styles,new StyleNameRenderer(),10,false){
    private static final long serialVersionUID=-3494299396410932090L;
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newSelectedHeader(    final String componentId){
      return new Label(componentId,new ResourceModel("ExtraStylesPalette.selectedHeader"));
    }
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newAvailableHeader(    final String componentId){
      return new Label(componentId,new ResourceModel("ExtraStylesPalette.availableHeader"));
    }
  }
;
  styleContainer.add(extraStyles);
  TextField<Integer> renderingBuffer=new TextField<Integer>("renderingBuffer",new MapModel(new PropertyModel(layerModel,"metadata"),LayerInfo.BUFFER),Integer.class);
  renderingBuffer.add(RangeValidator.minimum(0));
  styleContainer.add(renderingBuffer);
  add(new TextField<String>("wmsPath",new PropertyModel<String>(layerModel,"path")));
}
