{
  QuickTileCache.MetaTileKey key=tileCache.getMetaTileKey(request);
synchronized (key) {
    RenderedImage tile=tileCache.getTile(key,request);
    List<GridCoverage2D> renderedCoverages=null;
    if (LOGGER.isLoggable(Level.FINER)) {
      LOGGER.finer("Looked for meta tile " + key.metaTileCoords.x + ", "+ key.metaTileCoords.y+ "in cache: "+ ((tile != null) ? "hit!" : "miss"));
    }
    if (tile == null) {
      if (LOGGER.isLoggable(Level.FINER)) {
        LOGGER.finer("Building meta tile " + key.metaTileCoords.x + ", "+ key.metaTileCoords.y);
      }
      ReferencedEnvelope origEnv=mapContent.getRenderingArea();
      mapContent.getViewport().setBounds(new ReferencedEnvelope(key.getMetaTileEnvelope(),origEnv.getCoordinateReferenceSystem()));
      mapContent.setMapWidth(key.getTileSize() * key.getMetaFactor());
      mapContent.setMapHeight(key.getTileSize() * key.getMetaFactor());
      mapContent.setTileSize(key.getTileSize());
      RenderedImageMap metaTileMap=delegate.produceMap(mapContent);
      RenderedImage metaTile=metaTileMap.getImage();
      RenderedImage[] tiles=split(key,metaTile,mapContent);
      tileCache.storeTiles(key,tiles);
      tile=tileCache.getTile(key,request,tiles);
      renderedCoverages=metaTileMap.getRenderedCoverages();
    }
    RenderedImageMap tileMap=new RenderedImageMap(mapContent,tile,getMimeType());
    tileMap.setRenderedCoverages(renderedCoverages);
    return tileMap;
  }
}
