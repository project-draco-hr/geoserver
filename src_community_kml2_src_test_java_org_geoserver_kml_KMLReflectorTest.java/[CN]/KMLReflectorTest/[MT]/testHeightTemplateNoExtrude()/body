{
  File template=null;
  try {
    String layerId=getLayerId(MockData.LAKES);
    FeatureTypeInfo resource=getCatalog().getResourceByName(layerId,FeatureTypeInfo.class);
    File parent=getDataDirectory().findOrCreateResourceDir(resource);
    template=new File(parent,"height.ftl");
    FileUtils.write(template,"${FID.value}");
    final String requestUrl="wms/kml?layers=" + layerId + "&mode=download&extrude=false";
    Document doc=getAsDOM(requestUrl);
    String base="//kml:Placemark[@id='Lakes.1107531835962']/kml:MultiGeometry";
    XMLAssert.assertXpathEvaluatesTo("1","count(" + base + ")",doc);
    XMLAssert.assertXpathEvaluatesTo("0",base + "/kml:Point/kml:extrude",doc);
    XMLAssert.assertXpathEvaluatesTo("relativeToGround",base + "/kml:Point/kml:altitudeMode",doc);
    XMLAssert.assertXpathEvaluatesTo("0.0017851936218678816,-0.0010838268792710709,101.0",base + "/kml:Point/kml:coordinates",doc);
    XMLAssert.assertXpathEvaluatesTo("0",base + "/kml:Polygon/kml:extrude",doc);
    XMLAssert.assertXpathEvaluatesTo("relativeToGround",base + "/kml:Polygon/kml:altitudeMode",doc);
    XMLAssert.assertXpathEvaluatesTo("6.0E-4,-0.0018,101.0 0.0010,-6.0E-4,101.0 0.0024,-1.0E-4,101.0 0.0031,-0.0015,101.0 6.0E-4,-0.0018,101.0",base + "/kml:Polygon/kml:outerBoundaryIs/kml:LinearRing/kml:coordinates",doc);
  }
  finally {
    if (template != null) {
      template.delete();
    }
  }
}
