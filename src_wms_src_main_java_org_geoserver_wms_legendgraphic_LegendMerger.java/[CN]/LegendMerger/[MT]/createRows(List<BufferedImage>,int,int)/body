{
  Row[] legendMatrix=new Row[0];
  if (maxWidth > 0) {
    int rnLimit=maxRows > 0 ? maxRows : nodes.size();
    legendMatrix=new Row[rnLimit];
    legendMatrix[0]=new Row();
    int rn=0;
    int rowWidth=0;
    for (int i=0; i < nodes.size(); i++) {
      BufferedImage node=nodes.get(i);
      if (rowWidth <= maxWidth) {
        legendMatrix[rn].addNode(node);
        rowWidth=rowWidth + node.getWidth();
      }
 else {
        i--;
        rn++;
        if (rn == rnLimit) {
          break;
        }
        rowWidth=0;
        legendMatrix[rn]=new Row();
      }
    }
  }
 else {
    int rowNumber=maxRows > 0 ? maxRows : 1;
    legendMatrix=new Row[rowNumber];
    legendMatrix[0]=new Row();
    int colNumber=(int)Math.ceil((float)nodes.size() / rowNumber);
    int rn=0;
    int cc=0;
    for (int i=0; i < nodes.size(); i++) {
      if (cc < colNumber) {
        legendMatrix[rn].addNode(nodes.get(i));
        cc++;
      }
 else {
        i--;
        rn++;
        cc=0;
        legendMatrix[rn]=new Row();
      }
    }
  }
  return legendMatrix;
}
