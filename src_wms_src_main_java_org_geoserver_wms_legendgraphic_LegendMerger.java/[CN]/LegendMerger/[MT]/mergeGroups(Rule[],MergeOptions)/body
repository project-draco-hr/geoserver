{
  List<RenderedImage> imageStack=mergeOptions.getImageStack();
  final int imgCount=imageStack.size();
  if (imgCount == 1 && (!mergeOptions.isForceLabelsOn() || rules == null)) {
    return (BufferedImage)imageStack.get(0);
  }
  List<BufferedImage> nodes=new ArrayList<BufferedImage>(imgCount / 2);
  for (int i=0; i < imgCount; i=i + 2) {
    BufferedImage lbl=(BufferedImage)imageStack.get(i);
    BufferedImage img=(BufferedImage)imageStack.get(i + 1);
    img=joinBufferedImageVertically(lbl,img,mergeOptions.getLabelFont(),mergeOptions.isAntialias(),mergeOptions.isTransparent(),mergeOptions.getBackgroundColor());
    nodes.add(img);
  }
  LegendLayout layout=mergeOptions.getLayout();
  BufferedImage finalLegend=null;
  if (layout == LegendLayout.HORIZONTAL) {
    Row[] rows=createRows(nodes,0,0);
    finalLegend=buildFinalHLegend(rows,mergeOptions);
  }
  if (layout == LegendLayout.VERTICAL) {
    Column[] columns=createColumns(nodes,0,0);
    finalLegend=buildFinalVLegend(columns,mergeOptions);
  }
  return finalLegend;
}
