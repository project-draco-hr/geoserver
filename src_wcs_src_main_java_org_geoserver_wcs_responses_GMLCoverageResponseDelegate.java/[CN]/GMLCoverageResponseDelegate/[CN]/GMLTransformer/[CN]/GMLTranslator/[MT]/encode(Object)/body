{
  if (!(o instanceof GridCoverage2D)) {
    throw new IllegalArgumentException("Provided object is not a GridCoverage2D:" + (o != null ? o.getClass().toString() : "null"));
  }
  final GridCoverage2D gc2d=(GridCoverage2D)o;
  final String gcName=gc2d.getName().toString(Locale.getDefault());
  final CoordinateReferenceSystem crs=gc2d.getCoordinateReferenceSystem2D();
  Integer EPSGCode=null;
  try {
    EPSGCode=CRS.lookupEpsgCode(crs,false);
  }
 catch (  FactoryException e) {
    throw new IllegalStateException("Unable to lookup epsg code for this CRS:" + crs,e);
  }
  if (EPSGCode == null) {
    throw new IllegalStateException("Unable to lookup epsg code for this CRS:" + crs);
  }
  final String srsName=GMLCoverageResponseDelegate.SRS_STARTER + EPSGCode;
  final boolean axisSwap=crs instanceof GeographicCRS;
  final AttributesImpl attributes=new AttributesImpl();
  attributes.addAttribute("","xmlns:gml","xmlns:gml","","http://www.opengis.net/gml/3.2");
  attributes.addAttribute("","xmlns:gmlcov","xmlns:gmlcov","","http://www.opengis.net/gmlcov/1.0");
  attributes.addAttribute("","xmlns:swe","xmlns:swe","","http://www.opengis.net/swe/2.0");
  attributes.addAttribute("","xmlns:xlink","xmlns:xlink","","http://www.w3.org/1999/xlink");
  attributes.addAttribute("","xmlns:xsi","xmlns:xsi","","http://www.w3.org/2001/XMLSchema-instance");
  attributes.addAttribute("","gml:id","gml:id","",gc2d.getName().toString(Locale.getDefault()));
  start("gml:RectifiedGridCoverage",attributes);
  handleBoundedBy(gc2d,axisSwap,srsName);
  handleDomainSet(gc2d,gcName,srsName,axisSwap);
  handleRangeType(gc2d);
  handleCoverageFunction(gc2d);
  handleRange(gc2d);
  handleMetadata(gc2d);
  end("gml:RectifiedGridCoverage");
}
