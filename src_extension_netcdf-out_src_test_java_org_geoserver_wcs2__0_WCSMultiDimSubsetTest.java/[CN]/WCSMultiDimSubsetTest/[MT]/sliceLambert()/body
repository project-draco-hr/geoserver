{
  GridCoverage2D targetCoverage=null, sourceCoverage=null;
  GridCoverageReader coverageReader=null;
  try {
    CoverageInfo coverageInfo=this.getCatalog().getCoverageByName(LAMBERTMOSAIC.getLocalPart());
    coverageReader=coverageInfo.getGridCoverageReader(null,null);
    final ParameterValue<Boolean> useJAI=ImageMosaicFormat.USE_JAI_IMAGEREAD.createValue();
    useJAI.setValue(false);
    sourceCoverage=(GridCoverage2D)coverageReader.read(new GeneralParameterValue[]{useJAI});
    final Envelope2D sourceEnvelope=sourceCoverage.getEnvelope2D();
    MockHttpServletResponse response=getAsServletResponse("wcs?request=GetCoverage&service=WCS&version=2.0.1" + "&coverageId=wcs__lambert&&Format=application/custom" + "&subset=E,http://www.opengis.net/def/crs/EPSG/0/31300(" + sourceEnvelope.x + ","+ (sourceEnvelope.x + 25)+ ")"+ "&subset=N,http://www.opengis.net/def/crs/EPSG/0/31300("+ sourceEnvelope.y+ ","+ (sourceEnvelope.y + 25)+ ")");
    assertNotNull(response);
    targetCoverage=applicationContext.getBean(WCSResponseInterceptor.class).getLastResult();
    assertEquals((Object)sourceCoverage.getCoordinateReferenceSystem(),(Object)targetCoverage.getCoordinateReferenceSystem());
    assertTrue(targetCoverage instanceof GranuleStack);
    GridCoverage2D firstResult=((GranuleStack)targetCoverage).getGranules().get(0);
    assertEquals(1,firstResult.getGridGeometry().getGridRange().getSpan(0));
    assertEquals(1,firstResult.getGridGeometry().getGridRange().getSpan(1));
    assertEquals(0,firstResult.getGridGeometry().getGridRange().getLow(0));
    assertEquals(326,firstResult.getGridGeometry().getGridRange().getLow(1));
  }
  finally {
    if (coverageReader != null) {
      try {
        coverageReader.dispose();
      }
 catch (      Exception e) {
      }
    }
    if (targetCoverage != null) {
      try {
        CoverageCleanerCallback.disposeCoverage(targetCoverage);
      }
 catch (      Exception e) {
      }
    }
    if (sourceCoverage != null) {
      try {
        CoverageCleanerCallback.disposeCoverage(sourceCoverage);
      }
 catch (      Exception e) {
      }
    }
  }
}
