{
  VariableFilterChainWrapper wrapper=new VariableFilterChainWrapper(chain);
  Form<VariableFilterChainWrapper> theForm=new Form<VariableFilterChainWrapper>("form",new CompoundPropertyModel<VariableFilterChainWrapper>(wrapper));
  super.initialize(chain,secMgrConfig,isNew,theForm,wrapper);
  List<String> filterNames=new ArrayList<String>();
  try {
    filterNames.addAll(getSecurityManager().listFilters(GeoServerExceptionTranslationFilter.class));
    for (    GeoServerExceptionTranslationFilter filter : GeoServerExtensions.extensions(GeoServerExceptionTranslationFilter.class)) {
      filterNames.add(filter.getName());
    }
    form.add(new DropDownChoice<String>("exceptionTranslationName",new PropertyModel<String>(chainWrapper.getChain(),"exceptionTranslationName"),filterNames));
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  filterNames=new ArrayList<String>();
  try {
    filterNames.addAll(getSecurityManager().listFilters(GeoServerSecurityInterceptorFilter.class));
    for (    GeoServerSecurityInterceptorFilter filter : GeoServerExtensions.extensions(GeoServerSecurityInterceptorFilter.class)) {
      filterNames.add(filter.getName());
    }
    form.add(new DropDownChoice<String>("interceptorName",new PropertyModel<String>(chainWrapper.getChain(),"interceptorName"),filterNames));
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  form.add(palette=new AuthFilterChainPalette("authFilterChain",new AuthFilterNamesModel(getVariableFilterChainWrapper())));
  palette.setOutputMarkupId(true);
  palette.setChain(getVariableFilterChainWrapper().getVariableFilterChain());
  form.add(new HelpLink("chainConfigFilterHelp").setDialog(dialog));
}
