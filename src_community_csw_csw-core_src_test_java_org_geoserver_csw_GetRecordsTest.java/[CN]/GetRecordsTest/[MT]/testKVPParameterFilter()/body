{
  Map<String,Object> raw=new HashMap<String,Object>();
  raw.put("service","CSW");
  raw.put("version","2.0.2");
  raw.put("request","GetRecords");
  raw.put("namespace","xmlns(csw=http://www.opengis.net/cat/csw/2.0.2))");
  raw.put("typenames","csw:Record");
  raw.put("elementSetName","brief");
  raw.put("constraintLanguage","FILTER");
  raw.put("constraint","<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\"><ogc:Not><ogc:PropertyIsEqualTo><ogc:PropertyName>prop1</ogc:PropertyName><ogc:Literal>10</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Not></ogc:Filter>");
  GetRecordsKvpRequestReader reader=new GetRecordsKvpRequestReader();
  Object request=reader.createRequest();
  GetRecordsType gr=(GetRecordsType)reader.read(request,parseKvp(raw),raw);
  assertEquals("CSW",gr.getService());
  assertEquals("2.0.2",gr.getVersion());
  QueryType query=(QueryType)gr.getQuery();
  assertEquals(CQL.toFilter("!(prop1 = 10)"),query.getConstraint().getFilter());
  assertEquals("1.1.0",query.getConstraint().getVersion());
  assertEquals(1,query.getTypeNames().size());
  assertEquals(new QName("http://www.opengis.net/cat/csw/2.0.2","Record"),query.getTypeNames().get(0));
  assertEquals(ElementSetType.BRIEF,query.getElementSetName().getValue());
}
