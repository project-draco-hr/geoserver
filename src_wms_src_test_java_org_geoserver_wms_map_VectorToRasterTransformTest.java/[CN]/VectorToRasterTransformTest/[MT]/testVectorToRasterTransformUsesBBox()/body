{
  final GetMapRequest request=new GetMapRequest();
  final WMSMapContent map=new WMSMapContent();
  map.setMapWidth(100);
  map.setMapHeight(100);
  map.setRequest(request);
  final ReferencedEnvelope bounds=new ReferencedEnvelope(0,45,0,45,DefaultGeographicCRS.WGS84);
  map.getViewport().setBounds(bounds);
  final FeatureTypeInfo ftInfo=getCatalog().getFeatureTypeByName(STREAMS.getNamespaceURI(),STREAMS.getLocalPart());
  final SimpleFeatureSource featureSource=(SimpleFeatureSource)ftInfo.getFeatureSource(null,null);
  final MutableBoolean containsBBox=new MutableBoolean(false);
  final DecoratingFeatureSource source=new DecoratingFeatureSource(featureSource){
    @Override public SimpleFeatureCollection getFeatures(    final Query query) throws IOException {
      query.getFilter().accept(new NullFilterVisitor(){
        @Override public Object visit(        final BBOX filter,        final Object data){
          containsBBox.setValue(true);
          return data;
        }
      }
,null);
      return featureSource.getFeatures(query);
    }
  }
;
  final Style style=parseStyle("HeatmapTransform.sld");
  map.addLayer(new FeatureLayer(source,style));
  request.setFormat("image/gif");
  RenderingVariables.setupEnvironmentVariables(map);
  final RenderedImageMap imageMap=new RenderedImageMapOutputFormat(getWMS()).produceMap(map);
  imageMap.dispose();
  assertTrue("The query filter should have a BBOX",containsBBox.booleanValue());
}
