{
  this.name=param.key;
  this.title=param.title != null && !param.title.toString().equals(param.key) ? param.title.toString() : param.getDescription().toString();
  this.password=param.isPassword();
  this.largeText=param.metadata != null && Boolean.TRUE.equals(param.metadata.get(Param.IS_LARGE_TEXT));
  if (Serializable.class.isAssignableFrom(param.type)) {
    this.binding=param.type;
    this.value=(Serializable)param.sample;
  }
 else   if (Repository.class.equals(param.type)) {
    this.binding=param.type;
    this.value=null;
  }
 else {
    this.binding=String.class;
    this.value=param.sample == null ? null : String.valueOf(param.sample);
  }
  this.required=param.required;
  if (param.metadata != null) {
    List<Serializable> options=(List<Serializable>)param.metadata.get(Param.OPTIONS);
    if (options != null && options.size() > 0) {
      this.options=new ArrayList<Serializable>(options);
      if (Comparable.class.isAssignableFrom(this.binding)) {
        Collections.sort((List)options);
      }
      if (this.value == null) {
        this.value=options.get(0);
      }
    }
  }
}
