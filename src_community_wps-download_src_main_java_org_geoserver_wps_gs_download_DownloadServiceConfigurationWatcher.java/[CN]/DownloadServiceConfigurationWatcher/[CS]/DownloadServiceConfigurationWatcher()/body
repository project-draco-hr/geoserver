{
  GeoServerResourceLoader loader=GeoServerExtensions.bean(GeoServerResourceLoader.class);
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.log(Level.FINE,"Checking properties file");
  }
  Resource properties=loader.get(PROPERTYFILENAME);
  if (properties == null || !Resources.exists(properties)) {
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.log(Level.FINE,"Properties file not found");
    }
    try {
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.log(Level.FINE,"Copying the default properties file inside the data directory");
      }
      InputStream is=DownloadServiceConfigurationWatcher.class.getResourceAsStream(DEFAULT_PROPERTY_PATH);
      if (is != null) {
        IOUtils.copy(is,properties.out());
      }
    }
 catch (    IOException e) {
      if (LOGGER.isLoggable(Level.WARNING)) {
        LOGGER.log(Level.WARNING,e.getMessage(),e);
      }
    }
  }
 else {
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.log(Level.FINE,"Properties file found");
    }
  }
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.log(Level.FINE,"Loading configuration");
  }
  Resource downloadProperties=loader.get(PROPERTYFILENAME);
  init(new PropertyFileWatcher(downloadProperties));
}
