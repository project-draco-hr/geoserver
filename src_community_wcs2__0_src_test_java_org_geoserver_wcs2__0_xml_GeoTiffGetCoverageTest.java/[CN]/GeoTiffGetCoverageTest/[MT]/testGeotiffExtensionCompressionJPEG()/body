{
  final File xml=new File("./src/test/resources/geotiff/geotiffExtensionCompressionJPEG.xml");
  final String request=FileUtils.readFileToString(xml);
  MockHttpServletResponse response=postAsServletResponse("wcs",request);
  assertEquals("image/tiff",response.getContentType());
  byte[] tiffContents=getBinary(response);
  File file=File.createTempFile("bm_gtiff","bm_gtiff.tiff",new File("./target"));
  FileUtils.writeByteArrayToFile(file,tiffContents);
  final TIFFImageReader reader=(TIFFImageReader)new TIFFImageReaderSpi().createReaderInstance();
  reader.setInput(new FileImageInputStream(file));
  final TIFFImageMetadata metadata=(TIFFImageMetadata)reader.getImageMetadata(0);
  assertNotNull(metadata);
  IIOMetadataNode root=(IIOMetadataNode)reader.getImageMetadata(0).getAsTree(TIFFImageMetadata.nativeMetadataFormatName);
  IIOMetadataNode field=getTiffField(root,BaselineTIFFTagSet.TAG_COMPRESSION);
  assertNotNull(field);
  assertEquals("JPEG",field.getFirstChild().getFirstChild().getAttributes().item(1).getNodeValue());
  assertEquals("7",field.getFirstChild().getFirstChild().getAttributes().item(0).getNodeValue());
  IIOMetadataNode node=metadata.getStandardDataNode();
  assertNotNull(node);
  assertEquals("PlanarConfiguration",node.getFirstChild().getNodeName());
  assertEquals("PixelInterleaved",node.getFirstChild().getAttributes().item(0).getNodeValue());
  reader.dispose();
}
