{
  final Query readQuery=getReadQuery();
  final Query mixed=mixQueries(query,readQuery);
  int limitedAttributeSize=mixed.getProperties() != null ? mixed.getProperties().size() : 0;
  final FeatureCollection<T,F> fc=delegate.getFeatures(mixed);
  if (fc == null) {
    return null;
  }
 else {
    if (limitedAttributeSize > 0 && fc.getSchema().getDescriptors().size() > limitedAttributeSize) {
      if (fc instanceof SimpleFeatureCollection) {
        SimpleFeatureCollection sfc=(SimpleFeatureCollection)fc;
        SimpleFeatureType target=SimpleFeatureTypeBuilder.retype(sfc.getSchema(),mixed.getPropertyNames());
        ReTypingFeatureCollection retyped=new ReTypingFeatureCollection(sfc,target);
        return (FeatureCollection)SecuredObjects.secure(retyped,policy);
      }
 else {
        throw new RuntimeException("The store did not honor the query attribute list and " + "we cannot cast it in memory because it returned a complex feature collection");
      }
    }
 else {
      return (FeatureCollection)SecuredObjects.secure(fc,policy);
    }
  }
}
