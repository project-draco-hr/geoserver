{
  Map<String,Object> map=getGeometryType((Geometry)f.getDefaultGeometry());
  Class<?> target=(Class<?>)map.get("target");
  String geometryType=(String)map.get("geometryType");
  StoreWriter storeWriter=writers.get(target);
  if (storeWriter == null) {
    SimpleFeatureType original=f.getFeatureType();
    SimpleFeatureTypeBuilder builder=new SimpleFeatureTypeBuilder();
    for (    AttributeDescriptor d : original.getAttributeDescriptors()) {
      if (Geometry.class.isAssignableFrom(d.getType().getBinding())) {
        GeometryDescriptor gd=(GeometryDescriptor)d;
        builder.add(gd.getLocalName(),target,gd.getCoordinateReferenceSystem());
        builder.setDefaultGeometry(gd.getLocalName());
      }
 else {
        builder.add(d);
      }
    }
    builder.setNamespaceURI(original.getName().getURI());
    String fileName=new FileNameSource(getClass()).getShapeName(ftInfo,geometryType);
    builder.setName(fileName);
    SimpleFeatureType retyped=builder.buildFeatureType();
    DataStore dstore=buildStore(tempDir,charset,retyped);
    storeWriter=new StoreWriter();
    storeWriter.dstore=dstore;
    storeWriter.writer=dstore.getFeatureWriter(retyped.getTypeName(),Transaction.AUTO_COMMIT);
    writers.put(target,storeWriter);
  }
  return storeWriter.writer;
}
