{
  super.testRoleConfig();
  JDBCRoleServiceConfig config=(JDBCRoleServiceConfig)getRoleConfig("jdbc",JDBCRoleService.class,AbstractRoleService.DEFAULT_LOCAL_ADMIN_ROLE);
  config.setDriverClassName("a.b.c");
  config.setUserName("user");
  config.setConnectURL("jdbc:connect");
  config.setPropertyFileNameDDL(JDBCRoleService.DEFAULT_DDL_FILE);
  config.setPropertyFileNameDML(JDBCRoleService.DEFAULT_DML_FILE);
  JDBCRoleServiceConfig configJNDI=(JDBCRoleServiceConfig)getRoleConfig("jndi",JDBCRoleService.class,AbstractRoleService.DEFAULT_LOCAL_ADMIN_ROLE);
  configJNDI.setJndi(true);
  configJNDI.setJndiName("jndi:connect");
  configJNDI.setPropertyFileNameDDL(JDBCRoleService.DEFAULT_DDL_FILE);
  configJNDI.setPropertyFileNameDML(JDBCRoleService.DEFAULT_DML_FILE);
  boolean fail;
  fail=false;
  try {
    configJNDI.setJndiName("");
    getSecurityManager().saveRoleService(configJNDI);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(JNDINAME_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
  fail=false;
  try {
    config.setDriverClassName("");
    getSecurityManager().saveRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(DRIVER_CLASSNAME_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
  config.setDriverClassName("a.b.c");
  fail=false;
  try {
    config.setUserName("");
    getSecurityManager().saveRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(USERNAME_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
  config.setUserName("user");
  fail=false;
  try {
    config.setConnectURL(null);
    getSecurityManager().saveRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(JDBCURL_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
  config.setConnectURL("jdbc:connect");
  try {
    getSecurityManager().saveRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(DRIVER_CLASS_NOT_FOUND_$1,ex.getId());
    assertEquals("a.b.c",ex.getArgs()[0]);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
  config.setDriverClassName("java.lang.String");
  config.setPropertyFileNameDDL(null);
  try {
    getSecurityManager().saveRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    throw new IOException(ex);
  }
  config.setPropertyFileNameDML(null);
  try {
    getSecurityManager().saveRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(DML_FILE_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
  config.setPropertyFileNameDDL(JDBCRoleService.DEFAULT_DDL_FILE);
  config.setPropertyFileNameDML(JDBCRoleService.DEFAULT_DML_FILE);
  if (new JdbcSecurityConfigValidator(getSecurityManager()).getTempDir() != null) {
    String invalidPath="abc" + File.separator + "def.properties";
    config.setPropertyFileNameDDL(invalidPath);
    fail=false;
    try {
      getSecurityManager().saveRoleService(config);
    }
 catch (    SecurityConfigException ex) {
      assertEquals(DDL_FILE_INVALID,ex.getId());
      assertEquals(invalidPath,ex.getArgs()[0]);
      fail=true;
    }
    assertTrue(fail);
  }
  config.setPropertyFileNameDDL(JDBCRoleService.DEFAULT_DDL_FILE);
  config.setPropertyFileNameDML(JDBCRoleService.DEFAULT_DML_FILE);
  if (new JdbcSecurityConfigValidator(getSecurityManager()).getTempDir() != null) {
    String invalidPath="abc" + File.separator + "def.properties";
    config.setPropertyFileNameDML(invalidPath);
    fail=false;
    try {
      getSecurityManager().saveRoleService(config);
    }
 catch (    SecurityConfigException ex) {
      assertEquals(DML_FILE_INVALID,ex.getId());
      assertEquals(invalidPath,ex.getArgs()[0]);
      fail=true;
    }
    assertTrue(fail);
  }
  config.setPropertyFileNameDDL(null);
  config.setCreatingTables(true);
  config.setPropertyFileNameDML(JDBCRoleService.DEFAULT_DML_FILE);
  try {
    getSecurityManager().saveRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(DDL_FILE_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    fail=true;
  }
  assertTrue(fail);
}
