{
  try {
    final CoordinateReferenceSystem coverageCRS=reader.getCoordinateReferenceSystem();
    final CoordinateReferenceSystem requestCRS=envelope.getCoordinateReferenceSystem();
    final ReferencedEnvelope coverageEnvelope=new ReferencedEnvelope(reader.getOriginalEnvelope());
    if (CRS.equalsIgnoreMetadata(coverageCRS,requestCRS)) {
      if (!coverageEnvelope.intersects((BoundingBox)envelope))       return null;
    }
 else {
      ReferencedEnvelope dataEnvelopeWGS84=coverageEnvelope.transform(DefaultGeographicCRS.WGS84,true);
      ReferencedEnvelope requestEnvelopeWGS84=envelope.transform(DefaultGeographicCRS.WGS84,true);
      if (!dataEnvelopeWGS84.intersects((BoundingBox)requestEnvelopeWGS84))       return null;
    }
  }
 catch (  Exception e) {
    LOGGER.log(Level.WARNING,"Failed to compare data and request envelopes, proceeding with rendering anyways",e);
  }
  GridCoverage2D coverage;
  GeneralParameterValue[] readParams=getReadParameters(params,envelope,requestedRasterArea,interpolation,bgColor);
  coverage=reader.read(readParams);
  return coverage;
}
