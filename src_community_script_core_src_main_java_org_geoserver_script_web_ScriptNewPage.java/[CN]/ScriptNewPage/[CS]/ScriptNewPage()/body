{
  super();
  Script script=new Script();
  form=new Form("form",new CompoundPropertyModel(script)){
    @Override protected void onSubmit(){
      save();
      doReturn(ScriptPage.class);
    }
  }
;
  add(form);
  final List<String> extensions=getExtensions();
  String mode=extensions.size() > 0 ? getModeFromExtension(extensions.get(0)) : "py";
  final CodeMirrorEditor content=new CodeMirrorEditor("contents",mode,new PropertyModel(script,"contents"));
  content.setRequired(true);
  form.add(content);
  TextField name=new TextField("name",new PropertyModel(script,"name"));
  name.setRequired(true);
  form.add(name);
  DropDownChoice<String> typeDropDownChoice=new DropDownChoice<String>("type",new PropertyModel(script,"type"),new LoadableDetachableModel<List<String>>(){
    @Override protected List<String> load(){
      List<String> values=Lists.newArrayList();
      for (      ScriptType type : ScriptType.values()) {
        values.add(type.getLabel());
      }
      return values;
    }
  }
);
  typeDropDownChoice.setRequired(true);
  form.add(typeDropDownChoice);
  final DropDownChoice<String> extensionDropDownChoice=new DropDownChoice<String>("extension",new PropertyModel(script,"extension"),new LoadableDetachableModel<List<String>>(){
    @Override protected List<String> load(){
      return extensions;
    }
  }
);
  extensionDropDownChoice.setRequired(true);
  extensionDropDownChoice.add(new AjaxFormComponentUpdatingBehavior("onchange"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      int i=Integer.parseInt(extensionDropDownChoice.getValue());
      String ext=extensions.get(i);
      String mode=getModeFromExtension(ext);
      content.setMode(mode);
    }
  }
);
  form.add(extensionDropDownChoice);
  SubmitLink submitLink=new SubmitLink("submit",form);
  form.add(submitLink);
  form.setDefaultButton(submitLink);
  AjaxLink cancelLink=new AjaxLink("cancel"){
    @Override public void onClick(    AjaxRequestTarget target){
      doReturn(ScriptPage.class);
    }
  }
;
  form.add(cancelLink);
}
