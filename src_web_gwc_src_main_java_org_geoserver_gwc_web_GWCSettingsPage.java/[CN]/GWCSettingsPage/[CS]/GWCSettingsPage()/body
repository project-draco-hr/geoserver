{
  setHeaderPanel(headerPanel());
  GWC gwc=GWC.get();
  final GWCConfig gwcConfig=gwc.getConfig().clone();
  Map<String,Serializable> formData=new HashMap<String,Serializable>();
  formData.put("gwcConfig",gwcConfig);
  formModel=new MapModel<String,Serializable>(formData);
  final Form<Map<String,Serializable>> form;
  form=new Form<Map<String,Serializable>>("form",formModel);
  add(form);
  final IModel<GWCConfig> gwcConfigModel=new PropertyModel<GWCConfig>(formModel,"gwcConfig");
  final GWCServicesPanel gwcServicesPanel=new GWCServicesPanel("gwcServicesPanel",gwcConfigModel);
  final CachingOptionsPanel defaultCachingOptionsPanel=new CachingOptionsPanel("cachingOptionsPanel",gwcConfigModel);
  form.add(gwcServicesPanel);
  form.add(defaultCachingOptionsPanel);
  form.add(new Button("submit"){
    private static final long serialVersionUID=1L;
    @Override public void onSubmit(){
      GWC gwc=GWC.get();
      final IModel formModel=form.getModel();
      final IModel<GWCConfig> gwcConfigModel=new PropertyModel<GWCConfig>(formModel,"gwcConfig");
      GWCConfig gwcConfig=gwcConfigModel.getObject();
      try {
        gwc.saveConfig(gwcConfig);
      }
 catch (      IOException e) {
        LOGGER.log(Level.WARNING,"Error saving GWC config",e);
        form.error("Error saving GWC config: " + e.getMessage());
        return;
      }
      doReturn();
    }
  }
);
  form.add(new GeoServerAjaxFormLink("cancel"){
    private static final long serialVersionUID=1L;
    @Override protected void onClick(    AjaxRequestTarget target,    Form form){
      doReturn();
    }
  }
);
  checkWarnings();
}
