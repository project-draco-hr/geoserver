{
  checkService(request.getService());
  checkVersion(request.getVersion());
  if (request.getCoverageId() == null || request.getCoverageId().isEmpty()) {
    throw new OWS20Exception("Required parameter coverageId missing",WCS20Exception.WCS20ExceptionCode.EmptyCoverageIdList,"coverageId");
  }
  List<String> badCoverageIds=new ArrayList<String>();
  for (  String encodedCoverageId : (List<String>)request.getCoverageId()) {
    String newCoverageID=encodedCoverageId;
    if (availableDescribeCovExtensions) {
      for (      WCS20DescribeCoverageExtension ext : wcsDescribeCoverageExtensions) {
        newCoverageID=ext.handleCoverageId(newCoverageID);
      }
    }
    LayerInfo layer=NCNameResourceCodec.getCoverage(catalog,newCoverageID);
    if (layer == null) {
      badCoverageIds.add(encodedCoverageId);
    }
  }
  if (!badCoverageIds.isEmpty()) {
    String mergedIds=StringUtils.merge(badCoverageIds);
    throw new WCS20Exception("Could not find the requested coverage(s): " + mergedIds,WCS20Exception.WCS20ExceptionCode.NoSuchCoverage,"coverageId");
  }
  WCSInfo wcs=getServiceInfo();
  WCS20DescribeCoverageTransformer describeTransformer=new WCS20DescribeCoverageTransformer(wcs,catalog,responseFactory,envelopeAxesMapper,mimeMapper);
  describeTransformer.setEncoding(Charset.forName(wcs.getGeoServer().getSettings().getCharset()));
  return describeTransformer;
}
