{
  FeatureTypeInfo featureType=catalog.getFeatureTypeByName("sf","PrimitiveGeoFeature");
  String featureTypeId=featureType.getId();
  String dataStoreId=featureType.getStore().getId();
  Name name=featureType.getFeatureType().getName();
  assertNotNull("PrmitiveGeoFeature available",featureType);
  for (  LayerInfo l : catalog.getLayers(featureType)) {
    catalog.remove(l);
  }
  assertEquals(200,deleteAsServletResponse("/rest/workspaces/sf/datastores/sf/featuretypes/PrimitiveGeoFeature").getStatus());
  assertNull(catalog.getFeatureTypeByName("sf","PrimitiveGeoFeature"));
  if (catalog.getResourcePool().getFeatureTypeAttributeCache().containsKey(featureTypeId)) {
    List<AttributeTypeInfo> attributesList=catalog.getResourcePool().getFeatureTypeAttributeCache().get(featureTypeId);
    assertNull("attributes cleared",attributesList);
  }
  if (catalog.getResourcePool().getDataStoreCache().containsKey(dataStoreId)) {
    DataAccess dataStore=catalog.getResourcePool().getDataStoreCache().get(dataStoreId);
    List<Name> names=dataStore.getNames();
    assertTrue(names.contains(name));
  }
}
