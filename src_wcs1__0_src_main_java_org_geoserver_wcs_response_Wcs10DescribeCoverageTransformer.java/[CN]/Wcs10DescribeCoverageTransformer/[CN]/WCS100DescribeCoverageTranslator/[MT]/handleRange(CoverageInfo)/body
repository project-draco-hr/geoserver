{
  start("wcs:rangeSet");
  start("wcs:RangeSet");
  element("wcs:name",ci.getName());
  element("wcs:label",ci.getTitle());
  start("wcs:axisDescription");
  start("wcs:AxisDescription");
  int numSampleDimensions=ci.getDimensions().size();
  element("wcs:name","Band");
  element("wcs:label","Band");
  start("wcs:values");
  if (numSampleDimensions > 1) {
    start("wcs:interval");
    element("wcs:min","1");
    element("wcs:max",String.valueOf(numSampleDimensions));
    end("wcs:interval");
  }
 else {
    element("wcs:singleValue","1");
  }
  end("wcs:values");
  end("wcs:AxisDescription");
  end("wcs:axisDescription");
  DimensionInfo elevationInfo=ci.getMetadata().get(ResourceInfo.ELEVATION,DimensionInfo.class);
  if (elevationInfo != null && elevationInfo.isEnabled()) {
    AbstractGridCoverage2DReader reader=null;
    try {
      reader=(AbstractGridCoverage2DReader)ci.getGridCoverageReader(null,GeoTools.getDefaultHints());
    }
 catch (    IOException e) {
      LOGGER.severe("Unable to acquire a reader for this coverage with format: " + ci.getStore().getFormat().getName());
    }
    if (reader == null) {
      throw new WcsException("Unable to acquire a reader for this coverage with format: " + ci.getStore().getFormat().getName());
    }
    ReaderDimensionsAccessor dimensions=new ReaderDimensionsAccessor(reader);
    if (dimensions.hasElevation()) {
      start("wcs:axisDescription");
      start("wcs:AxisDescription");
      element("wcs:name","ELEVATION");
      element("wcs:label","ELEVATION");
      start("wcs:values");
      TreeSet<Double> elevations=dimensions.getElevationDomain();
      for (      Double elevation : elevations) {
        element("wcs:singleValue",Double.toString(elevation));
      }
      element("wcs:default",Double.toString(elevations.first()));
      end("wcs:values");
      end("wcs:AxisDescription");
      end("wcs:axisDescription");
    }
  }
  end("wcs:RangeSet");
  end("wcs:rangeSet");
}
