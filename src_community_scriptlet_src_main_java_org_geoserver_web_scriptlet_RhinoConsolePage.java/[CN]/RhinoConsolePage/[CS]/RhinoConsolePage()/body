{
  Context cx=Context.enter();
  scope=cx.initStandardObjects();
  Object wrappedCatalog=Context.javaToJS(getCatalog(),scope);
  ScriptableObject.putProperty(scope,"catalog",wrappedCatalog);
  Context.exit();
  final WebMarkupContainer container=new WebMarkupContainer("results-wrapper");
  final ListView resultsDisplay=new ListView("results",new PropertyModel(this,"results")){
    protected void populateItem(    ListItem item){
      item.add(new Label("javascript",new PropertyModel(item.getModel(),"input")));
      item.add(new Label("result",new PropertyModel(item.getModel(),"response")));
    }
  }
;
  container.setOutputMarkupId(true);
  add(container);
  container.add(resultsDisplay);
  Form f=new Form("prompt-wrapper",new Model(this));
  f.setOutputMarkupId(true);
  add(f);
  f.add(new TextField("prompt",new PropertyModel(this,"prompt")));
  f.add(new AjaxButton("run",f){
    protected void onSubmit(    AjaxRequestTarget target,    Form f){
      results.add(eval(prompt));
      target.addComponent(container);
    }
  }
);
}
