{
  List unparsed=KvpUtils.readFlat(value,KvpUtils.OUTER_DELIMETER);
  List filters=new ArrayList();
  Iterator i=unparsed.listIterator();
  while (i.hasNext()) {
    String string=(String)i.next();
    if ("".equals(string.trim())) {
      filters.add(Filter.INCLUDE);
    }
 else {
      Filter filter;
      final byte[] rawContent=string.getBytes();
      InputStream input=new ByteArrayInputStream(rawContent);
      try {
        Configuration configuration=new OGCConfiguration();
        Parser parser_1_0_0=new Parser(configuration);
        filter=(Filter)parser_1_0_0.parse(input);
      }
 catch (      Exception e) {
        try {
          input=new ByteArrayInputStream(rawContent);
          Configuration configuration=new org.geotools.filter.v1_1.OGCConfiguration();
          Parser parser_1_1_0=new Parser(configuration);
          filter=(Filter)parser_1_1_0.parse(input);
          filters.add(filter);
        }
 catch (        Exception e2) {
          String msg="Unable to parse filter: " + string;
          LOGGER.log(Level.WARNING,msg,e);
          filter=parseXMLFilterWithOldParser(new StringReader(string));
        }
      }
      if (filter == null) {
        throw new NullPointerException();
      }
      filters.add(filter);
    }
  }
  return filters;
}
