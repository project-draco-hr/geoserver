{
  Object retval=null;
  try {
    GridCoverage2DReader reader=(GridCoverage2DReader)((CoverageInfo)resource).getGridCoverageReader(null,null);
    ReaderDimensionsAccessor dimAccessor=new ReaderDimensionsAccessor(reader);
    if (dimensionName.equals(ResourceInfo.TIME)) {
      Date dateToMatch=null;
      if (this.toMatch instanceof Date) {
        dateToMatch=(Date)this.toMatch;
      }
 else       if (this.toMatch instanceof Long) {
        dateToMatch=new Date(((Long)this.toMatch).longValue());
      }
 else {
        try {
          dateToMatch=new Date(DateUtil.parseDateTime(this.toMatch.toString()));
        }
 catch (        IllegalArgumentException e) {
          throw new ServiceException("Error parsing value to match against while trying to find the default time value for the layer " + resource.getName(),e);
        }
      }
      retval=findNearestTime(dimAccessor,dateToMatch);
    }
 else     if (dimensionName.equals(ResourceInfo.ELEVATION)) {
      if (this.toMatch instanceof Number) {
        Double doubleToMatch=((Number)this.toMatch).doubleValue();
        retval=findNearestElevation(dimAccessor,doubleToMatch);
      }
 else {
        throw new ServiceException("The default value for elevation dimension is not a number. Cannot find a default elevation value for the layer " + resource.getName());
      }
    }
 else     if (dimensionName.startsWith(ResourceInfo.CUSTOM_DIMENSION_PREFIX)) {
      retval=findNearestCustomDimensionValue(dimensionName.substring(ResourceInfo.CUSTOM_DIMENSION_PREFIX.length()),dimAccessor,this.toMatch.toString());
    }
  }
 catch (  IOException e) {
    LOGGER.log(Level.FINER,e.getMessage(),e);
  }
  return Converters.convert(retval,clz);
}
