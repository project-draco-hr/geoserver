{
  super(id,netcdfModel);
  standardName=new TextField<String>("standardName",new PropertyModel(netcdfModel,"layerName"));
  uom=new AutoCompleteTextField<String>("uom",new PropertyModel(netcdfModel,"layerUOM")){
    @Override protected Iterator<String> getChoices(    String input){
      if (Strings.isEmpty(input)) {
        List<String> emptyList=Collections.emptyList();
        return emptyList.iterator();
      }
      List<String> unitNames=new ArrayList<String>();
      UnitFormat format=UnitFormat.getInstance(Locale.ENGLISH);
      for (      Unit<?> unit : UNITS) {
        unitNames.add(format.format(unit));
      }
      List<String> choices=new ArrayList<String>();
      for (      String name : unitNames) {
        if (name.toLowerCase().startsWith(input.toLowerCase())) {
          choices.add(name);
        }
      }
      return choices.iterator();
    }
  }
;
  String startUOM=uom.getModelObject();
  if ((startUOM == null || startUOM.isEmpty()) && cinfo != null) {
    List<CoverageDimensionInfo> infos=cinfo.getObject().getDimensions();
    if (infos != null && infos.size() > 0) {
      CoverageDimensionInfo info=infos.get(0);
      uom.setModelObject(info.getUnit());
    }
  }
  container.add(standardName);
  container.add(uom);
  NetCDFParserBean bean=GeoServerExtensions.bean(NetCDFParserBean.class);
  Set<String> names=new TreeSet<String>();
  if (bean != null && bean.getParser() != null) {
    NetCDFCFParser parser=bean.getParser();
    names.addAll(parser.getEntryIds());
  }
  final RepeatingView availableNames=new RepeatingView("availableNames");
  for (  String key : names) {
    availableNames.add(new Label(availableNames.newChildId(),key));
  }
  container.add(availableNames);
  standardName.add(new AjaxFormComponentUpdatingBehavior("onChange"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      String name=standardName.getModelObject();
      if (name != null && !name.isEmpty()) {
        NetCDFParserBean bean=GeoServerExtensions.bean(NetCDFParserBean.class);
        if (bean != null && bean.getParser() != null) {
          NetCDFCFParser parser=bean.getParser();
          Entry e=null;
          if (parser.hasEntryId(name)) {
            e=parser.getEntry(name);
          }
 else           if (parser.hasAliasId(name)) {
            e=parser.getEntryFromAlias(name);
          }
          if (e != null) {
            uom.setModelObject(e.getCanonicalUnits());
            target.addComponent(container);
          }
        }
      }
    }
  }
);
}
