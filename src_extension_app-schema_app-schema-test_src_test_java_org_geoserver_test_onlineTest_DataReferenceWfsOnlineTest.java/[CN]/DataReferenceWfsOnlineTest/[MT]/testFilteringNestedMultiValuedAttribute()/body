{
  String xml="<wfs:GetFeature " + "service=\"WFS\" " + "version=\"1.1.0\" "+ "xmlns:cdf=\"http://www.opengis.net/cite/data\" "+ "xmlns:ogc=\"http://www.opengis.net/ogc\" "+ "xmlns:wfs=\"http://www.opengis.net/wfs\" "+ "xmlns:gml=\"http://www.opengis.net/gml\" "+ "xmlns:gsml=\"" + AbstractAppSchemaMockData.GSML_URI + "\" "+ ">"+ "    <wfs:Query typeName=\"gsml:GeologicUnit\">"+ "        <ogc:Filter>"+ "            <ogc:PropertyIsEqualTo>"+ "                <ogc:Literal>Akuna Mudstone (Oba)</ogc:Literal>"+ "                <ogc:PropertyName>gml:name</ogc:PropertyName>"+ "            </ogc:PropertyIsEqualTo>"+ "        </ogc:Filter>"+ "    </wfs:Query> "+ "</wfs:GetFeature>";
  Document doc=postAsDOM("wfs",xml);
  LOGGER.info("WFS filter GetFeature response:\n" + prettyString(doc));
  assertEquals("wfs:FeatureCollection",doc.getDocumentElement().getNodeName());
  assertXpathCount(1,"//gsml:GeologicUnit",doc);
  assertXpathEvaluatesTo("gsml.geologicunit.167775491107848330","//gsml:GeologicUnit/@gml:id",doc);
  xml="<wfs:GetFeature " + "service=\"WFS\" " + "version=\"1.1.0\" "+ "xmlns:cdf=\"http://www.opengis.net/cite/data\" "+ "xmlns:ogc=\"http://www.opengis.net/ogc\" "+ "xmlns:wfs=\"http://www.opengis.net/wfs\" "+ "xmlns:gml=\"http://www.opengis.net/gml\" "+ "xmlns:gsml=\"" + AbstractAppSchemaMockData.GSML_URI + "\" "+ ">"+ "    <wfs:Query typeName=\"gsml:GeologicUnit\">"+ "        <ogc:Filter>"+ "            <ogc:PropertyIsLike wildCard=\"*\" singleChar=\"#\" escapeChar=\"!\">>"+ "                <ogc:PropertyName>gml:name</ogc:PropertyName>"+ "                <ogc:Literal>*Creek Granite*</ogc:Literal>"+ "            </ogc:PropertyIsLike>"+ "        </ogc:Filter>"+ "    </wfs:Query> "+ "</wfs:GetFeature>";
  doc=postAsDOM("wfs",xml);
  LOGGER.info("WFS filter GetFeature response:\n" + prettyString(doc));
  assertEquals("wfs:FeatureCollection",doc.getDocumentElement().getNodeName());
  assertXpathEvaluatesTo("9","/wfs:FeatureCollection/@numberOfFeatures",doc);
  assertXpathCount(9,"//gsml:GeologicUnit",doc);
  ArrayList<String> ids=new ArrayList<String>();
  for (int i=1; i <= 9; i++) {
    ids.add(evaluate("(//gsml:GeologicUnit)[" + i + "]/@gml:id",doc));
  }
  assertTrue(ids.contains("gsml.geologicunit.1677754911513315832"));
  assertTrue(ids.contains("gsml.geologicunit.1677754911513318069"));
  assertTrue(ids.contains("gsml.geologicunit.1677754911513318192"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126941084"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126941436"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126942189"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126942227"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126942588"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126942855"));
  xml="<wfs:GetFeature service=\"WFS\" version=\"1.1.0\" xmlns:cdf=\"http://www.opengis.net/cite/data\" " + "xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wfs=\"http://www.opengis.net/wfs\" " + "xmlns:gml=\"http://www.opengis.net/gml\" xmlns:gsml=\"" + AbstractAppSchemaMockData.GSML_URI + "\">"+ "<wfs:Query typeName=\"gsml:GeologicUnit\">"+ "    <ogc:Filter>"+ "        <ogc:And>"+ "            <ogc:PropertyIsLike wildCard=\"*\" singleChar=\"#\" escapeChar=\"!\">>"+ "                <ogc:Literal>*Creek Granite*</ogc:Literal>"+ "                <ogc:PropertyName>gml:name</ogc:PropertyName>"+ "            </ogc:PropertyIsLike>"+ "                <ogc:Not>"+ "                    <ogc:PropertyIsEqualTo>"+ "                        <ogc:Literal>mid-crustal</ogc:Literal>"+ "                        <ogc:PropertyName>gsml:geologicHistory/gsml:GeologicEvent/gsml:eventEnvironment/gsml:CGI_TermValue/gsml:value</ogc:PropertyName>"+ "                    </ogc:PropertyIsEqualTo>"+ "                </ogc:Not>"+ "        </ogc:And>"+ "    </ogc:Filter>"+ "</wfs:Query> "+ "</wfs:GetFeature>";
  doc=postAsDOM("wfs",xml);
  LOGGER.info("WFS filter GetFeature response:\n" + prettyString(doc));
  assertEquals("wfs:FeatureCollection",doc.getDocumentElement().getNodeName());
  assertXpathEvaluatesTo("6","/wfs:FeatureCollection/@numberOfFeatures",doc);
  assertXpathCount(6,"//gsml:GeologicUnit",doc);
  ids.clear();
  for (int i=1; i <= 6; i++) {
    ids.add(evaluate("(//gsml:GeologicUnit)[" + i + "]/@gml:id",doc));
  }
  assertTrue(ids.contains("gsml.geologicunit.1677754911513318069"));
  assertTrue(ids.contains("gsml.geologicunit.1677754911513318192"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126941436"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126942189"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126942227"));
  assertTrue(ids.contains("gsml.geologicunit.16777549126942855"));
}
