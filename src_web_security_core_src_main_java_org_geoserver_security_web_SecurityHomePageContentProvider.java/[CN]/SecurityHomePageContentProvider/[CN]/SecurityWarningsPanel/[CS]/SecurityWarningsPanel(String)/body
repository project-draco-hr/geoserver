{
  super(id);
  GeoServerSecurityManager manager=GeoServerApplication.get().getSecurityManager();
  Resource mpInfo=null;
  Label mpInfoLabel=null;
  try {
    mpInfo=manager.get("security").get(GeoServerSecurityManager.MASTER_PASSWD_INFO_FILENAME);
    mpInfoLabel=new Label("mpfile",new StringResourceModel("masterPasswordFile",(Component)this,null,new Object[]{mpInfo.path()}));
    mpInfoLabel.setEscapeModelStrings(false);
    add(mpInfoLabel);
    mpInfoLabel.setVisible(Resources.exists(mpInfo));
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
  Resource userprops=null;
  Label userpropsLabel=null;
  try {
    userprops=manager.get("security").get("users.properties.old");
    userpropsLabel=new Label("userpropsold",new StringResourceModel("userPropertiesOldFile",(Component)this,null,new Object[]{userprops.path()}));
    userpropsLabel.setEscapeModelStrings(false);
    add(userpropsLabel);
    userpropsLabel.setVisible(Resources.exists(userprops));
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
  boolean visibility=manager.checkMasterPassword(DEFAULT_ADMIN_PASSWD);
  Label label=new Label("mpmessage",new StringResourceModel("changeMasterPassword",(Component)this,null));
  label.setEscapeModelStrings(false);
  add(label);
  Link link=null;
  ;
  add(link=new Link("mplink"){
    @Override public void onClick(){
      setResponsePage(new MasterPasswordChangePage());
    }
  }
);
  label.setVisible(visibility);
  link.setVisible(visibility);
  visibility=manager.checkForDefaultAdminPassword();
  Page changeItPage=null;
  String passwordEncoderName=null;
  try {
    GeoServerUserGroupService ugService=manager.loadUserGroupService(XMLUserGroupService.DEFAULT_NAME);
    if (ugService != null) {
      passwordEncoderName=ugService.getPasswordEncoderName();
      GeoServerUser user=ugService.getUserByUsername(ADMIN_USERNAME);
      if (user != null) {
        changeItPage=new EditUserPage(ugService.getName(),user);
      }
    }
  }
 catch (  IOException e) {
    LOGGER.log(Level.WARNING,"Error looking up admin user",e);
  }
  if (changeItPage == null) {
    changeItPage=new UserGroupRoleServicesPage();
  }
  final Page linkPage=changeItPage;
  label=new Label("adminmessage",new StringResourceModel("changeAdminPassword",(Component)this,null));
  label.setEscapeModelStrings(false);
  add(label);
  add(link=new Link("adminlink"){
    @Override public void onClick(){
      setResponsePage(linkPage);
    }
  }
);
  label.setVisible(visibility);
  link.setVisible(visibility);
  if (manager.isStrongEncryptionAvailable()) {
    add(new Label("strongEncryptionMsg",new StringResourceModel("strongEncryption",new SecuritySettingsPage(),null)).add(new AttributeAppender("class",new Model("info-link")," ")));
  }
 else {
    add(new Label("strongEncryptionMsg",new StringResourceModel("noStrongEncryption",new SecuritySettingsPage(),null)).add(new AttributeAppender("class",new Model("warning-link")," ")));
  }
  visibility=false;
  if (passwordEncoderName != null) {
    GeoServerPasswordEncoder encoder=manager.loadPasswordEncoder(passwordEncoderName);
    if (encoder != null) {
      visibility=encoder.isReversible();
    }
  }
  label=new Label("digestEncoding",new StringResourceModel("digestEncoding",(Component)this,null));
  add(label);
  label.setVisible(visibility);
}
