{
  final SimpleFeatureType fType=feature.getFeatureType();
  final GeometryDescriptor defaultGeomType=fType.getGeometryDescriptor();
  Preconditions.checkNotNull(defaultGeomType);
  Geometry aGeom=(Geometry)feature.getDefaultGeometry();
  if (aGeom == null) {
    return;
  }
  if (aGeom instanceof GeometryCollection && aGeom.getNumGeometries() == 1) {
    aGeom=aGeom.getGeometryN(0);
  }
  if (precisionReducerFilter != null) {
    aGeom.apply(precisionReducerFilter);
  }
  jsonWriter.object();
  jsonWriter.key("type").value("Feature");
  List<AttributeDescriptor> types=fType.getAttributeDescriptors();
  jsonWriter.key("id").value(feature.getID());
  jsonWriter.key("geometry");
  jsonWriter.writeGeom(aGeom);
  jsonWriter.key("geometry_name").value(defaultGeomType.getLocalName());
  jsonWriter.key("properties");
  jsonWriter.object();
  for (int j=0; j < types.size(); j++) {
    Object value=feature.getAttribute(j);
    AttributeDescriptor attributeDescriptor=types.get(j);
    if (value != null) {
      if (value instanceof Geometry) {
        if (attributeDescriptor.equals(defaultGeomType)) {
        }
 else {
          jsonWriter.key(attributeDescriptor.getLocalName());
          jsonWriter.writeGeom((Geometry)value);
        }
      }
 else {
        jsonWriter.key(attributeDescriptor.getLocalName());
        jsonWriter.value(value);
      }
    }
 else {
      jsonWriter.key(attributeDescriptor.getLocalName());
      jsonWriter.value(null);
    }
  }
  jsonWriter.endObject();
  jsonWriter.endObject();
}
