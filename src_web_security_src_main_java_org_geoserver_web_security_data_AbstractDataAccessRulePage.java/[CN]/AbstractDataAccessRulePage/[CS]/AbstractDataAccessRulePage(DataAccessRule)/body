{
  setDefaultModel(new CompoundPropertyModel(new DataAccessRule(rule)));
  form=new Form("ruleForm");
  add(form);
  form.add(workspace=new DropDownChoice("workspace",getWorkspaceNames()));
  workspace.add(new AjaxFormComponentUpdatingBehavior("onchange"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      layer.setChoices(new Model(getLayerNames((String)workspace.getConvertedInput())));
      layer.modelChanged();
      target.addComponent(layer);
    }
  }
);
  setOutputMarkupId(true);
  form.add(layer=new DropDownChoice("layer",getLayerNames(rule.getWorkspace())));
  layer.setOutputMarkupId(true);
  form.add(accessMode=new DropDownChoice("accessMode",MODES,new AccessModeRenderer()));
  form.add(rolesForComponent=new RolesFormComponent("roles",new RolesModel(rule),form,true));
  form.add(new BookmarkablePageLink("cancel",DataAccessRulePage.class));
  form.add(saveLink());
  workspace.setRequired(true);
  layer.setRequired(true);
  accessMode.setRequired(true);
}
