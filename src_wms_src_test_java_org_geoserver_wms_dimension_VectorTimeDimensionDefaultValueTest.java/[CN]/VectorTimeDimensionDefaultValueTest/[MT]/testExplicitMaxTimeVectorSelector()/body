{
  int fid=1000;
  DimensionDefaultValueSetting defaultValueSetting=new DimensionDefaultValueSetting();
  defaultValueSetting.setStrategyType(Strategy.MAXIMUM);
  setupFeatureTimeDimension(defaultValueSetting);
  FeatureTypeInfo timeWithStartEnd=getCatalog().getFeatureTypeByName(TIME_WITH_START_END.getLocalPart());
  Date twoDaysAgo=addFeatureWithTimeTwoDaysAgo(fid++);
  this.addFeature(fid++,twoDaysAgo,Double.valueOf(0d));
  java.util.Date d=(java.util.Date)wms.getDefaultTime(timeWithStartEnd);
  assertTrue("Default time is null",d != null);
  assertTrue("Default time should be the biggest one",d.getTime() == twoDaysAgo.getTime());
  addFeatureWithTimeDayAfterTomorrow(fid++);
  Date oneYearFromNow=addFeatureWithTimeOneYearFromNow(fid++);
  d=(java.util.Date)wms.getDefaultTime(timeWithStartEnd);
  assertTrue("Default time is null",d != null);
  assertTrue("Default time should be the biggest one",d.getTime() == oneYearFromNow.getTime());
  addFeatureWithTimeTodayMidnight(fid++);
  d=(java.util.Date)wms.getDefaultTime(timeWithStartEnd);
  assertTrue("Default time is null",d != null);
  assertTrue("Default time should be the biggest one",d.getTime() == oneYearFromNow.getTime());
}
