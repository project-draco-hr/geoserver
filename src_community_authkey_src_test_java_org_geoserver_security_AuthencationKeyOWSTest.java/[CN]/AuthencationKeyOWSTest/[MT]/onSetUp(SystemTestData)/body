{
  super.onSetUp(testData);
  Map<String,String> namespaces=new HashMap<String,String>();
  namespaces.put("wms","http://www.opengis.net/wms");
  namespaces.put("ows","http://www.opengis.net/ows");
  namespaces.put("xlink","http://www.w3.org/1999/xlink");
  namespaces.put("ogc","http://www.opengis.net/ogc");
  namespaces.put("","http://www.opengis.net/ogc");
  namespaces.put("wfs","http://www.opengis.net/wfs");
  namespaces.put("xsi","http://www.w3.org/2001/XMLSchema-instance");
  CiteTestData.registerNamespaces(namespaces);
  XMLUnit.setXpathNamespaceContext(new SimpleNamespaceContext(namespaces));
  GeoServer gs=getGeoServer();
  WMSInfo wms=gs.getService(WMSInfo.class);
  wms.getSRS().add("EPSG:4326");
  gs.save(wms);
  GeoServerUserGroupService service=getSecurityManager().loadUserGroupService("default");
  GeoServerUserGroupStore store=service.createStore();
  store.load();
  store.addUser(store.createUserObject("cite","cite",true));
  store.store();
  GeoServerRoleService rservice=getSecurityManager().loadRoleService("default");
  GeoServerRoleStore rstore=rservice.createStore();
  rstore.load();
  GeoServerRole no_one=rstore.createRoleObject("NO_ONE");
  rstore.addRole(no_one);
  GeoServerRole rcite=rstore.createRoleObject("cite");
  rstore.addRole(rcite);
  rstore.associateRoleToUser(rstore.createRoleObject("cite"),"cite");
  rstore.store();
  String authKeyUrlParam="authkey";
  String filterName="testAuthKeyFilter1";
  AuthenticationKeyFilterConfig config=new AuthenticationKeyFilterConfig();
  config.setClassName(GeoServerAuthenticationKeyFilter.class.getName());
  config.setName(filterName);
  config.setUserGroupServiceName("default");
  config.setAuthKeyParamName(authKeyUrlParam);
  config.setAuthKeyMapperName("propertyMapper");
  getSecurityManager().saveFilter(config);
  SecurityManagerConfig mconfig=getSecurityManager().getSecurityConfig();
  GeoServerSecurityFilterChain filterChain=mconfig.getFilterChain();
  VariableFilterChain chain=(VariableFilterChain)filterChain.getRequestChainByName("default");
  chain.getFilterNames().add(0,filterName);
  getSecurityManager().saveSecurityConfig(mconfig);
  GeoServerAuthenticationKeyFilter authKeyFilter=(GeoServerAuthenticationKeyFilter)getSecurityManager().loadFilter(filterName);
  PropertyAuthenticationKeyMapper mapper=(PropertyAuthenticationKeyMapper)authKeyFilter.getMapper();
  mapper.synchronize();
  for (  Entry<Object,Object> entry : mapper.authKeyProps.entrySet()) {
    if ("admin".equals(entry.getValue()))     adminKey=(String)entry.getKey();
    if ("cite".equals(entry.getValue()))     citeKey=(String)entry.getKey();
  }
  if (adminKey == null)   throw new RuntimeException("Missing admin key");
  if (citeKey == null)   throw new RuntimeException("Missing cite key");
}
