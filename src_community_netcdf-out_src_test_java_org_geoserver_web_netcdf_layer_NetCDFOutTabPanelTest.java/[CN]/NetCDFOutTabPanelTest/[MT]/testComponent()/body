{
  login();
  tester.startPage(new FormTestPage(new ComponentBuilder(){
    private static final long serialVersionUID=-6705646666953650890L;
    public Component buildComponent(    final String id){
      return new NetCDFOutTabPanel(id,layerModel,resourceModel);
    }
  }
));
  tester.assertComponent("form:panel",NetCDFOutTabPanel.class);
  tester.assertComponent("form:panel:netcdfeditor",NetCDFOutSettingsEditor.class);
  NetCDFOutSettingsEditor editor=(NetCDFOutSettingsEditor)tester.getComponentFromLastRenderedPage("form:panel:netcdfeditor");
  NetCDFLayerSettingsContainer container=editor.getModelObject();
  assertNotNull(container);
  NetCDFLayerSettingsContainer actualContainer=resourceModel.getObject().getMetadata().get(NetCDFSettingsContainer.NETCDFOUT_KEY,NetCDFLayerSettingsContainer.class);
  assertEquals(container,actualContainer);
  tester.assertComponent("form:panel:netcdfeditor:container:shuffle",CheckBox.class);
  CheckBox shuffle=(CheckBox)tester.getComponentFromLastRenderedPage("form:panel:netcdfeditor:container:shuffle");
  assertEquals(shuffle.getModelObject(),container.isShuffle());
  tester.assertComponent("form:panel:netcdfeditor:container:compressionLevel",TextField.class);
  TextField<Integer> compressionLevel=(TextField<Integer>)tester.getComponentFromLastRenderedPage("form:panel:netcdfeditor:container:compressionLevel");
  assertEquals(compressionLevel.getModelObject().intValue(),container.getCompressionLevel());
  tester.assertComponent("form:panel:netcdfeditor:container:dataPacking",DropDownChoice.class);
  DropDownChoice<DataPacking> dataPacking=(DropDownChoice<DataPacking>)tester.getComponentFromLastRenderedPage("form:panel:netcdfeditor:container:dataPacking");
  assertEquals(dataPacking.getModelObject(),container.getDataPacking());
  FormTester formTester=tester.newFormTester("form");
  formTester.setValue("panel:netcdfeditor:container:standardName","test");
  formTester.setValue("panel:netcdfeditor:container:uom","test");
  formTester.submit();
  tester.assertNoErrorMessage();
  assertEquals(actualContainer.getLayerName(),"test");
  assertEquals(actualContainer.getLayerUOM(),"test");
}
