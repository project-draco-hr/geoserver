{
  addDataStore();
  addNamespace();
  FeatureTypeInfo ft1, ft2, ft3;
  catalog.add(ft1=newFeatureType("ft1",ds));
  catalog.add(ft2=newFeatureType("ft2",ds));
  catalog.add(ft3=newFeatureType("ft3",ds));
  ft1=catalog.getFeatureType(ft1.getId());
  ft2=catalog.getFeatureType(ft2.getId());
  ft3=catalog.getFeatureType(ft3.getId());
  Filter filter=acceptAll();
  Set<? extends CatalogInfo> expected;
  Set<? extends CatalogInfo> actual;
  expected=Sets.newHashSet(ft1,ft2,ft3);
  actual=Sets.newHashSet(catalog.list(FeatureTypeInfo.class,filter));
  assertEquals(3,actual.size());
  assertEquals(expected,actual);
  filter=contains("name","t");
  actual=Sets.newHashSet(catalog.list(FeatureTypeInfo.class,filter));
  assertTrue(expected.equals(actual));
  assertEquals(expected,actual);
  filter=or(contains("name","t2"),contains("name","t1"));
  expected=Sets.newHashSet(ft1,ft2);
  actual=Sets.newHashSet(catalog.list(FeatureTypeInfo.class,filter));
  assertEquals(expected,actual);
  StyleInfo s1, s2, s3, s4, s5, s6;
  catalog.add(s1=newStyle("s1","s1Filename"));
  catalog.add(s2=newStyle("s2","s2Filename"));
  catalog.add(s3=newStyle("s3","s3Filename"));
  catalog.add(s4=newStyle("s4","s4Filename"));
  catalog.add(s5=newStyle("s5","s5Filename"));
  catalog.add(s6=newStyle("s6","s6Filename"));
  LayerInfo l1, l2, l3;
  catalog.add(l1=newLayer(ft1,s1));
  catalog.add(l2=newLayer(ft2,s2,s3,s4));
  catalog.add(l3=newLayer(ft3,s3,s5,s6));
  filter=contains("styles.name","s6");
  expected=Sets.newHashSet(l3);
  actual=Sets.newHashSet(catalog.list(LayerInfo.class,filter));
  assertEquals(expected,actual);
  filter=equal("defaultStyle.name","s1");
  expected=Sets.newHashSet(l1);
  actual=Sets.newHashSet(catalog.list(LayerInfo.class,filter));
  assertEquals(expected,actual);
  filter=or(contains("styles.name","s6"),equal("defaultStyle.name","s1"));
  expected=Sets.newHashSet(l1,l3);
  actual=Sets.newHashSet(catalog.list(LayerInfo.class,filter));
  assertEquals(expected,actual);
  filter=acceptAll();
  ArrayList<LayerInfo> naturalOrder=Lists.newArrayList(catalog.list(LayerInfo.class,filter));
  assertEquals(3,naturalOrder.size());
  int offset=0, limit=2;
  assertEquals(naturalOrder.subList(0,2),Lists.newArrayList(catalog.list(LayerInfo.class,filter,offset,limit,null)));
  offset=1;
  assertEquals(naturalOrder.subList(1,3),Lists.newArrayList(catalog.list(LayerInfo.class,filter,offset,limit,null)));
  limit=1;
  assertEquals(naturalOrder.subList(1,2),Lists.newArrayList(catalog.list(LayerInfo.class,filter,offset,limit,null)));
}
