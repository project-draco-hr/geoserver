{
  addDataStore();
  addNamespace();
  FeatureTypeInfo ft1=newFeatureType("ft1",ds);
  FeatureTypeInfo ft2=newFeatureType("ft2",ds);
  FeatureTypeInfo ft3=newFeatureType("ft3",ds);
  ft2.getKeywords().add(new Keyword("keyword1"));
  ft2.getKeywords().add(new Keyword("keyword2"));
  catalog.add(ft1);
  catalog.add(ft2);
  catalog.add(ft3);
  StyleInfo s1, s2, s3, s4, s5, s6;
  catalog.add(s1=newStyle("s1","s1Filename"));
  catalog.add(s2=newStyle("s2","s2Filename"));
  catalog.add(s3=newStyle("s3","s3Filename"));
  catalog.add(s4=newStyle("s4","s4Filename"));
  catalog.add(s5=newStyle("s5","s5Filename"));
  catalog.add(s6=newStyle("s6","s6Filename"));
  LayerInfo l1=newLayer(ft1,s1);
  LayerInfo l2=newLayer(ft2,s1,s3,s4);
  LayerInfo l3=newLayer(ft3,s2,s5,s6);
  catalog.add(l1);
  catalog.add(l2);
  catalog.add(l3);
  assertEquals(3,catalog.getLayers().size());
  Filter filter;
  SortBy sortOrder;
  List<LayerInfo> expected;
  filter=acceptAll();
  sortOrder=asc("resource.name");
  expected=Lists.newArrayList(l1,l2,l3);
  testOrderBy(LayerInfo.class,filter,null,null,sortOrder,expected);
  sortOrder=desc("resource.name");
  expected=Lists.newArrayList(l3,l2,l1);
  testOrderBy(LayerInfo.class,filter,null,null,sortOrder,expected);
  sortOrder=asc("defaultStyle.name");
  expected=Lists.newArrayList(l1,l2,l3);
  testOrderBy(LayerInfo.class,filter,null,null,sortOrder,expected);
  sortOrder=desc("defaultStyle.name");
  expected=Lists.newArrayList(l3,l2,l1);
  testOrderBy(LayerInfo.class,filter,null,null,sortOrder,expected);
  expected=Lists.newArrayList(l2,l1);
  testOrderBy(LayerInfo.class,filter,1,null,sortOrder,expected);
  expected=Lists.newArrayList(l2);
  testOrderBy(LayerInfo.class,filter,1,1,sortOrder,expected);
  sortOrder=asc("defaultStyle.name");
  expected=Lists.newArrayList(l2,l3);
  testOrderBy(LayerInfo.class,filter,1,10,sortOrder,expected);
  filter=equal("styles.name",s3.getName());
  expected=Lists.newArrayList(l2);
  testOrderBy(LayerInfo.class,filter,0,10,sortOrder,expected);
}
