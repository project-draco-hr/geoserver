{
  final KMLLookAt lookAt=(KMLLookAt)o;
  Envelope lookAtEnvelope=targetBounds;
  if (lookAt.getLookAt() != null) {
    Geometry geometry=lookAt.getLookAt();
    lookAtEnvelope=geometry.getEnvelopeInternal();
  }
  if (lookAtEnvelope.isNull()) {
    return;
  }
  double lon1=lookAtEnvelope.getMinX();
  double lat1=lookAtEnvelope.getMinY();
  double lon2=lookAtEnvelope.getMaxX();
  double lat2=lookAtEnvelope.getMaxY();
  double R_EARTH=6.371 * 1000000;
  double VIEWER_WIDTH=22 * Math.PI / 180;
  double[] p1=getRect(lon1,lat1,R_EARTH);
  double[] p2=getRect(lon2,lat2,R_EARTH);
  double[] midpoint=new double[]{(p1[0] + p2[0]) / 2,(p1[1] + p2[1]) / 2,(p1[2] + p2[2]) / 2};
  midpoint=getGeographic(midpoint[0],midpoint[1],midpoint[2]);
  Double distance=lookAt.getRange();
  if (null == distance) {
    distance=distance(p1,p2);
  }
  double height=distance / (2 * Math.tan(VIEWER_WIDTH));
  LOGGER.fine("lat1: " + lat1 + "; lon1: "+ lon1);
  LOGGER.fine("lat2: " + lat2 + "; lon2: "+ lon2);
  LOGGER.fine("latmid: " + midpoint[1] + "; lonmid: "+ midpoint[0]);
  final Double tilt=lookAt.getTilt() == null ? Double.valueOf(0) : lookAt.getTilt();
  final Double heading=lookAt.getHeading() == null ? Double.valueOf(0) : lookAt.getHeading();
  final Double altitude=lookAt.getAltitude() == null ? Double.valueOf(height) : lookAt.getAltitude();
  final KMLLookAt.AltitudeMode altMode=lookAt.getAltitudeMode() == null ? AltitudeMode.clampToGround : lookAt.getAltitudeMode();
  start("LookAt");
  element("longitude",String.valueOf(midpoint[0]));
  element("latitude",String.valueOf(midpoint[1]));
  element("altitude",String.valueOf(altitude));
  element("range",String.valueOf(distance));
  element("tilt",String.valueOf(tilt));
  element("heading",String.valueOf(heading));
  element("altitudeMode",String.valueOf(altMode));
  end("LookAt");
}
