{
  ObjectStreamClass resultClassDescriptor=super.readClassDescriptor();
  Class localClass=Class.forName(resultClassDescriptor.getName());
  if (localClass == null) {
    return resultClassDescriptor;
  }
  ObjectStreamClass localClassDescriptor=ObjectStreamClass.lookup(localClass);
  if (localClassDescriptor != null) {
    final long localSUID=localClassDescriptor.getSerialVersionUID();
    final long streamSUID=resultClassDescriptor.getSerialVersionUID();
    if (streamSUID != localSUID) {
      final StringBuffer s=new StringBuffer("Overriding serialized class version mismatch: ");
      s.append("local serialVersionUID = ").append(localSUID);
      s.append(" stream serialVersionUID = ").append(streamSUID);
      Exception e=new InvalidClassException(s.toString());
      e.printStackTrace();
      resultClassDescriptor=localClassDescriptor;
    }
  }
  return resultClassDescriptor;
}
