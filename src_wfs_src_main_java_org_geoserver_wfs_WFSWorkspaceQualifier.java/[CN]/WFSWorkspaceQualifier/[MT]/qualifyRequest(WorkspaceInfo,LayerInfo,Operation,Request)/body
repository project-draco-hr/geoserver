{
  NamespaceInfo ns=catalog.getNamespaceByPrefix(workspace.getName());
  GetCapabilitiesRequest caps=GetCapabilitiesRequest.adapt(OwsUtils.parameter(operation.getParameters(),EObject.class));
  if (caps != null) {
    caps.setNamespace(workspace.getName());
    return;
  }
  DescribeFeatureTypeRequest dft=DescribeFeatureTypeRequest.adapt(OwsUtils.parameter(operation.getParameters(),EObject.class));
  if (dft != null) {
    qualifyTypeNames(dft.getTypeNames(),workspace,ns);
    return;
  }
  GetFeatureRequest gf=GetFeatureRequest.adapt(OwsUtils.parameter(operation.getParameters(),EObject.class));
  if (gf != null) {
    for (    Query q : gf.getQueries()) {
      qualifyTypeNames(q.getTypeNames(),workspace,ns);
    }
    return;
  }
  LockFeatureRequest lf=LockFeatureRequest.adapt(OwsUtils.parameter(operation.getParameters(),EObject.class));
  if (lf != null) {
    for (    Lock lock : lf.getLocks()) {
      lock.setTypeName(qualifyTypeName(lock.getTypeName(),workspace,ns));
    }
    return;
  }
  TransactionRequest t=TransactionRequest.adapt(OwsUtils.parameter(operation.getParameters(),EObject.class));
  if (t != null) {
    for (    TransactionElement el : t.getElements()) {
      if (el instanceof Insert) {
        Insert in=(Insert)el;
        List features=in.getFeatures();
        ensureFeatureNamespaceUriMatches(features,ns,t);
      }
 else       if (el instanceof Replace) {
        Replace rep=(Replace)el;
        List features=rep.getFeatures();
        ensureFeatureNamespaceUriMatches(features,ns,t);
      }
 else {
        el.setTypeName(qualifyTypeName(el.getTypeName(),workspace,ns));
      }
    }
  }
}
