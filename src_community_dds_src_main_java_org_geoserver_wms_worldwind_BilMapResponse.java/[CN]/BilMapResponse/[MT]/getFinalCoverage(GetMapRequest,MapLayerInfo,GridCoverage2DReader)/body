{
  final String responseCRS=request.getSRS();
  final CoordinateReferenceSystem targetCRS=CRS.decode(responseCRS);
  final String requestCRS=request.getSRS();
  final CoordinateReferenceSystem sourceCRS=CRS.decode(requestCRS);
  final CoordinateReferenceSystem cvCRS=((GeneralEnvelope)coverageReader.getOriginalEnvelope()).getCoordinateReferenceSystem();
  final MathTransform GCCRSTodeviceCRSTransformdeviceCRSToGCCRSTransform=CRS.findMathTransform(cvCRS,sourceCRS,true);
  final MathTransform GCCRSTodeviceCRSTransform=CRS.findMathTransform(cvCRS,targetCRS,true);
  final MathTransform deviceCRSToGCCRSTransform=GCCRSTodeviceCRSTransformdeviceCRSToGCCRSTransform.inverse();
  com.vividsolutions.jts.geom.Envelope envelope=request.getBbox();
  GeneralEnvelope destinationEnvelope;
  final boolean lonFirst=sourceCRS.getCoordinateSystem().getAxis(0).getDirection().absolute().equals(AxisDirection.EAST);
  if (!lonFirst) {
    destinationEnvelope=new GeneralEnvelope(new double[]{envelope.getMinY(),envelope.getMinX()},new double[]{envelope.getMaxY(),envelope.getMaxX()});
  }
 else {
    destinationEnvelope=new GeneralEnvelope(new double[]{envelope.getMinX(),envelope.getMinY()},new double[]{envelope.getMaxX(),envelope.getMaxY()});
  }
  destinationEnvelope.setCoordinateReferenceSystem(sourceCRS);
  final GeneralEnvelope destinationEnvelopeInSourceCRS=(!deviceCRSToGCCRSTransform.isIdentity()) ? CRS.transform(deviceCRSToGCCRSTransform,destinationEnvelope) : new GeneralEnvelope(destinationEnvelope);
  destinationEnvelopeInSourceCRS.setCoordinateReferenceSystem(cvCRS);
  Rectangle destinationSize=null;
  destinationSize=new Rectangle(0,0,request.getHeight(),request.getWidth());
  Interpolation interpolation=Interpolation.getInstance(Interpolation.INTERP_BILINEAR);
  Map<Object,Object> parameters=new HashMap<Object,Object>();
  parameters.put(AbstractGridFormat.READ_GRIDGEOMETRY2D.getName().toString(),new GridGeometry2D(new GeneralGridEnvelope(destinationSize),destinationEnvelopeInSourceCRS));
  final GridCoverage coverage=coverageReader.read(CoverageUtils.getParameters(coverageReader.getFormat().getReadParameters(),parameters,true));
  if ((coverage == null) || !(coverage instanceof GridCoverage2D)) {
    throw new IOException("The requested coverage could not be found.");
  }
  final GridCoverage2D croppedGridCoverage=BilWCSUtils.crop(coverage,(GeneralEnvelope)coverage.getEnvelope(),cvCRS,destinationEnvelopeInSourceCRS,Boolean.TRUE);
  GridCoverage2D subCoverage=croppedGridCoverage;
  final GeneralGridEnvelope newGridrange=new GeneralGridEnvelope(destinationSize);
  subCoverage=BilWCSUtils.scale(croppedGridCoverage,newGridrange,croppedGridCoverage,cvCRS,destinationEnvelopeInSourceCRS);
  subCoverage=BilWCSUtils.reproject(subCoverage,sourceCRS,targetCRS,interpolation);
  return subCoverage;
}
