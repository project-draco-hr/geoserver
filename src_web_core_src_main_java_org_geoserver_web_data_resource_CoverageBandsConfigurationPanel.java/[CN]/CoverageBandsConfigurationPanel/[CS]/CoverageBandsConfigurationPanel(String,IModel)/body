{
  super(id,model);
  bands=new GeoServerTablePanel<CoverageDimensionInfo>("bands",new CoverageDimensionsProvider(),true){
    @Override protected Component getComponentForProperty(    String id,    IModel itemModel,    Property<CoverageDimensionInfo> property){
      if ("unit".equals(property.getName())) {
        Fragment f=new Fragment(id,"text",CoverageBandsConfigurationPanel.this);
        Component text=buildUnitField("text",property.getModel(itemModel));
        f.add(text);
        return f;
      }
      return null;
    }
  }
;
  bands.setFilterVisible(false);
  bands.setSortable(false);
  bands.getTopPager().setVisible(false);
  bands.getBottomPager().setVisible(false);
  bands.setOutputMarkupId(true);
  bands.setItemReuseStrategy(ReuseIfModelsEqualStrategy.getInstance());
  bands.setFilterable(false);
  bands.setSelectable(false);
  add(bands);
  GeoServerAjaxFormLink reload=new GeoServerAjaxFormLink("reload"){
    @Override protected void onClick(    AjaxRequestTarget target,    Form form){
      GeoServerApplication app=(GeoServerApplication)getApplication();
      try {
        CoverageInfo ci=(CoverageInfo)getResourceInfo();
        Catalog catalog=app.getCatalog();
        CatalogBuilder cb=new CatalogBuilder(catalog);
        cb.setStore(ci.getStore());
        CoverageInfo rebuilt=cb.buildCoverage();
        ci.getDimensions().clear();
        ci.getDimensions().addAll(rebuilt.getDimensions());
        target.addComponent(bands);
      }
 catch (      Exception e) {
        LOGGER.log(Level.SEVERE,"Failure updating the bands list",e);
        error(e.toString());
      }
    }
  }
;
  add(reload);
}
