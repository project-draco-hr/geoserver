{
  assertXpathEvaluatesTo("42.58 31.29","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:location",doc);
  assertXpathEvaluatesTo("epsg:27700","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:location/@srsName",doc);
  assertXpathEvaluatesTo("metre metre","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:location/@uomLabels",doc);
  assertXpathEvaluatesTo("Easting Northing","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:location/@axisLabels",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage",doc);
  assertXpathEvaluatesTo("ID2.1","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/@gml:id",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/csml:pointSeriesDomain",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/csml:pointSeriesDomain/csml:TimeSeries",doc);
  assertXpathEvaluatesTo("ID2.2","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/csml:pointSeriesDomain/csml:TimeSeries/@gml:id",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/csml:pointSeriesDomain/csml:TimeSeries/csml:timePositionList",doc);
  String[] expectedList=StringUtils.delimitedListToStringArray("1949-05 1949-06 1949-07 1949-08 1949-09 1949-10 1949-11 1949-12 1950-01 1950-02 1950-03 1950-04 1950-05 1950-06 1950-07 1950-08 1950-09 1950-10 1950-11 1950-12"," ");
  String[] encodedList=StringUtils.delimitedListToStringArray(evaluate("//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/csml:pointSeriesDomain/csml:TimeSeries/csml:timePositionList",doc)," ");
  assertEquals(expectedList.length,encodedList.length);
  assertTrue(Arrays.asList(expectedList).containsAll(Arrays.asList(encodedList)));
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/gml:rangeSet",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/gml:rangeSet/gml:ValueArray",doc);
  assertXpathEvaluatesTo("ID2.3","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/gml:rangeSet/gml:ValueArray/@gml:id",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/gml:rangeSet/gml:ValueArray/gml:valueComponent",doc);
  assertXpathCount(1,"//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/gml:rangeSet/gml:ValueArray/gml:valueComponent/gml:QuantityList",doc);
  expectedList=StringUtils.delimitedListToStringArray("16.2 17.1 22.0 25.1 23.9 22.8 17.0 10.2 9.2 7.1 12.3 12.9 17.2 23.6 21.6 21.9 17.6 14.0 9.3 3.8"," ");
  encodedList=StringUtils.delimitedListToStringArray(evaluate("//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:value/csml:PointSeriesCoverage/gml:rangeSet/gml:ValueArray/gml:valueComponent/gml:QuantityList",doc)," ");
  assertEquals(expectedList.length,encodedList.length);
  assertTrue(Arrays.asList(expectedList).containsAll(Arrays.asList(encodedList)));
  assertXpathEvaluatesTo("http://cf-pcmdi.llnl.gov/documents/cf-standard-names/standard-name-table/current/cf-standard-name-table.html#surface_temperature","//csml:PointSeriesFeature[@gml:id='" + id + "']/csml:parameter/@xlink:href",doc);
}
