{
  if (object instanceof JSONObject && !((JSONObject)object).isArray()) {
    for (    Object key : ((JSONObject)object).keySet()) {
      Object obj=((JSONObject)object).get(key);
      if (obj instanceof JSONArray) {
        for (int i=0; i < ((JSONArray)obj).size(); i++) {
          JSONObject child=(JSONObject)((JSONArray)obj).get(i);
          writer.startNode((String)key);
          for (          Object cKey : child.keySet()) {
            if (!((String)cKey).startsWith("@")) {
              writer.startNode((String)cKey);
              writeChild(writer,child.get(cKey));
              writer.endNode();
            }
 else {
              writer.addAttribute(((String)cKey).substring(1),(String)child.get(cKey));
            }
          }
          writer.endNode();
        }
      }
 else {
        writer.startNode((String)key);
        writeChild(writer,obj);
        writer.endNode();
      }
    }
  }
 else   if (object instanceof JSONArray) {
    for (int i=0; i < ((JSONArray)object).size(); i++) {
      Object child=((JSONArray)object).get(i);
      if (child instanceof JSONObject) {
        for (        Object key : ((JSONObject)child).keySet()) {
          if (((JSONObject)child).get(key) instanceof String)           writer.addAttribute((String)key,(String)((JSONObject)child).get(key));
 else           writeChild(writer,((JSONObject)child).get(key));
        }
      }
 else {
        writeChild(writer,child);
      }
    }
  }
 else {
    writer.setValue(object.toString());
  }
}
