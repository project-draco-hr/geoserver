{
  String xml="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n" + "  <ows:Identifier>gs:RasterAsPointCollection</ows:Identifier>\n"+ "  <wps:DataInputs>\n"+ "    <wps:Input>\n"+ "      <ows:Identifier>data</ows:Identifier>\n"+ "      <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wcs\" method=\"POST\">\n"+ "        <wps:Body>\n"+ "          <wcs:GetCoverage service=\"WCS\" version=\"1.1.1\">\n"+ "            <ows:Identifier>" + getLayerId(MockData.TASMANIA_DEM) + "</ows:Identifier>\n"+ "            <wcs:DomainSubset>\n"+ "              <gml:BoundingBox crs=\"http://www.opengis.net/gml/srs/epsg.xml#4326\">\n"+ "                <ows:LowerCorner>145 -41.05</ows:LowerCorner>\n"+ "                <ows:UpperCorner>145.05 -41</ows:UpperCorner>\n"+ "              </gml:BoundingBox>\n"+ "            </wcs:DomainSubset>\n"+ "            <wcs:Output format=\"image/tiff\"/>\n"+ "          </wcs:GetCoverage>\n"+ "        </wps:Body>\n"+ "      </wps:Reference>\n"+ "    </wps:Input>\n"+ "  </wps:DataInputs>\n"+ "  <wps:ResponseForm>\n"+ "    <wps:RawDataOutput mimeType=\"text/xml; subtype=wfs-collection/1.0\">\n"+ "      <ows:Identifier>result</ows:Identifier>\n"+ "    </wps:RawDataOutput>\n"+ "  </wps:ResponseForm>\n"+ "</wps:Execute>";
  MockHttpServletResponse response=postAsServletResponse(root(),xml);
  Parser p=new Parser(new WFSConfiguration());
  FeatureCollectionType fct=(FeatureCollectionType)p.parse(new ByteArrayInputStream(response.getContentAsString().getBytes()));
  FeatureCollection fc=(FeatureCollection)fct.getFeature().get(0);
  assertEquals(36,fc.size());
  SimpleFeature sf=(SimpleFeature)fc.features().next();
  Geometry simplified=((Geometry)sf.getDefaultGeometry());
  assertTrue(simplified instanceof Point);
  assertEquals(sf.getID(),"0");
  assertEquals(sf.getAttributeCount(),5);
  assertEquals("75",sf.getProperty("GRAY_INDEX").getValue());
}
