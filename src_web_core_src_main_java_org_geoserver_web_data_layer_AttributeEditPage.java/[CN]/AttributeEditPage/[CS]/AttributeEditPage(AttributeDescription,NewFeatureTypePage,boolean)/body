{
  this.previousPage=previousPage;
  this.newAttribute=newAttribute;
  this.attribute=attribute;
  this.size=String.valueOf(attribute.getSize());
  final Form form=new Form("form",new CompoundPropertyModel(attribute));
  form.setOutputMarkupId(true);
  add(form);
  form.add(nameField=new TextField("name"));
  DropDownChoice binding=new DropDownChoice("binding",AttributeDescription.BINDINGS,new BindingChoiceRenderer());
  binding.add(new AjaxFormSubmitBehavior("onchange"){
    @Override protected void onError(    AjaxRequestTarget target){
      updateVisibility(target);
    }
    private void updateVisibility(    AjaxRequestTarget target){
      sizeContainer.setVisible(String.class.equals(attribute.getBinding()));
      crsContainer.setVisible(attribute.getBinding() != null && Geometry.class.isAssignableFrom(attribute.getBinding()));
      target.add(getFeedbackPanel());
      target.add(form);
    }
    @Override protected void onSubmit(    AjaxRequestTarget target){
      updateVisibility(target);
    }
  }
);
  form.add(binding);
  form.add(new CheckBox("nullable"));
  sizeContainer=new WebMarkupContainer("sizeContainer");
  sizeContainer.setOutputMarkupId(true);
  form.add(sizeContainer);
  sizeContainer.add(sizeField=new TextField("size",new PropertyModel(this,"size")));
  sizeContainer.setVisible(String.class.equals(attribute.getBinding()));
  crsContainer=new WebMarkupContainer("crsContainer");
  crsContainer.setOutputMarkupId(true);
  form.add(crsContainer);
  crsContainer.add(crsField=new CRSPanel("crs"));
  crsContainer.setVisible(attribute.getBinding() != null && Geometry.class.isAssignableFrom(attribute.getBinding()));
  SubmitLink submit=new SubmitLink("save"){
    @Override public void onSubmit(){
      if (validate()) {
        if (newAttribute) {
          previousPage.attributesProvider.addNewAttribute(attribute);
        }
        setResponsePage(previousPage);
      }
    }
  }
;
  form.setDefaultButton(submit);
  form.add(submit);
  form.add(new Link("cancel"){
    @Override public void onClick(){
      setResponsePage(previousPage);
    }
  }
);
}
