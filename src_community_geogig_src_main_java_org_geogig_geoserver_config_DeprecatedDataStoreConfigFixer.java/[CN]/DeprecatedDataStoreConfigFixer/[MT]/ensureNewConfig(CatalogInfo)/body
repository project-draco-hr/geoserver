{
  if (!(source instanceof DataStoreInfo)) {
    return;
  }
  DataStoreInfo ds=(DataStoreInfo)source;
  Map<String,Serializable> params=ds.getConnectionParameters();
  if (null == params.get(REPOSITORY.key)) {
    return;
  }
  final String repositoryParam=String.valueOf(params.get(REPOSITORY.key));
  final String resolverParam=(String)params.get(RESOLVER_CLASS_NAME.key);
  RepositoryManager manager=RepositoryManager.get();
  if (GeoGigInitializer.REPO_RESOLVER_CLASSNAME.equals(resolverParam)) {
    try {
      manager.get(repositoryParam);
    }
 catch (    IOException e) {
      if (RepositoryManager.isGeogigDirectory(new File(repositoryParam))) {
        fixConfig(ds,new File(repositoryParam).getAbsoluteFile().toURI());
      }
 else {
        String msg=String.format("GeoGig DataStore config has repository %s but it couldn't be resolverd to an actual repository",repositoryParam);
        LOGGER.log(Level.WARNING,msg,e);
      }
    }
  }
 else {
    final File repoDirectory=new File(repositoryParam);
    if (!RepositoryManager.isGeogigDirectory(repoDirectory)) {
      try {
        if (Boolean.TRUE.equals(CREATE.lookUp(params))) {
          DataAccess<? extends FeatureType,? extends Feature> dataStore;
          dataStore=new GeoGigDataStoreFactory().createDataStore(params);
          dataStore.dispose();
        }
      }
 catch (      IOException e) {
        throw new RuntimeException("Unable to create repository at " + repoDirectory.getAbsolutePath(),e);
      }
    }
    if (RepositoryManager.isGeogigDirectory(repoDirectory)) {
      fixConfig(ds,new File(repositoryParam).getAbsoluteFile().toURI());
    }
 else {
      String msg=String.format("GeoGig DataStore config has repository %s but it couldn't be resolverd to an actual repository",repositoryParam);
      LOGGER.log(Level.WARNING,msg);
    }
  }
}
