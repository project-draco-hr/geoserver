{
  CatalogFactory factory=catalog.getFactory();
  LayerGroupInfo globalGroup=factory.createLayerGroup();
  globalGroup.setName(GLOBAL_GROUP);
  globalGroup.getLayers().add(getBuildingsLayer());
  globalGroup.getLayers().add(getAggregateGeoFeatureLayer());
  catalog.add(globalGroup);
  LayerGroupInfo globalGroup2=factory.createLayerGroup();
  globalGroup2.setName(GLOBAL_GROUP2);
  globalGroup2.getLayers().add(getBridgesLayer());
  catalog.add(globalGroup2);
  LocalPublished.set(catalog.getLayerGroupByName(GLOBAL_GROUP));
  assertNull(catalog.getLayerByName(getLayerId(SystemTestData.BASIC_POLYGONS)));
  assertNull(getBridgesLayer());
  assertNull(catalog.getLayerGroupByName(GLOBAL_GROUP2));
  assertNotNull(getBuildingsLayer());
  assertNotNull(getAggregateGeoFeatureLayer());
  assertNotNull(catalog.getLayerGroupByName(GLOBAL_GROUP));
  List<LayerInfo> layers=catalog.getLayers();
  assertEquals(2,layers.size());
  assertThat(layers,containsInAnyOrder(getBuildingsLayer(),getAggregateGeoFeatureLayer()));
  Request request=new Request();
  request.setService("WMS");
  request.setRequest("GetCapabilities");
  Dispatcher.REQUEST.set(request);
  assertNull(catalog.getLayerByName(getLayerId(SystemTestData.BASIC_POLYGONS)));
  assertNull(getBridgesLayer());
  assertNull(catalog.getLayerGroupByName(GLOBAL_GROUP2));
  assertNull(getBuildingsLayer());
  assertNull(getAggregateGeoFeatureLayer());
  assertNotNull(catalog.getLayerGroupByName(GLOBAL_GROUP));
  assertEquals(0,catalog.getLayers().size());
  LocalPublished.remove();
}
