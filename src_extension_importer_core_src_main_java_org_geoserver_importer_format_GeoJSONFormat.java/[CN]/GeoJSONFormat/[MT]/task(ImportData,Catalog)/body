{
  File file=maybeFile(data).get();
  CatalogFactory factory=catalog.getFactory();
  CatalogBuilder catalogBuilder=new CatalogBuilder(catalog);
  SimpleFeatureType featureType=new FeatureJSON().readFeatureCollectionSchema(file,false);
  System.out.println(featureType);
  SimpleFeatureTypeBuilder tb=new SimpleFeatureTypeBuilder();
  tb.init(featureType);
  tb.setName(FilenameUtils.getBaseName(file.getName()));
  featureType=tb.buildFeatureType();
  FeatureTypeInfo ft=catalog.getFactory().createFeatureType();
  ft.setName(FilenameUtils.getBaseName(file.getName()));
  ft.setNativeName(ft.getName());
  List<AttributeTypeInfo> attributes=ft.getAttributes();
  for (  AttributeDescriptor ad : featureType.getAttributeDescriptors()) {
    AttributeTypeInfo att=factory.createAttribute();
    att.setName(ad.getLocalName());
    att.setBinding(ad.getType().getBinding());
    attributes.add(att);
  }
  CoordinateReferenceSystem crs=null;
  if (featureType != null && featureType.getCoordinateReferenceSystem() != null) {
    crs=featureType.getCoordinateReferenceSystem();
  }
  try {
    crs=crs != null ? crs : CRS.decode("EPSG:4326");
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
  ft.setNativeCRS(crs);
  String srs=srs(crs);
  if (srs != null) {
    ft.setSRS(srs);
  }
  ft.setNativeBoundingBox(EMPTY_BOUNDS);
  ft.setLatLonBoundingBox(EMPTY_BOUNDS);
  ft.getMetadata().put("recalculate-bounds",Boolean.TRUE);
  LayerInfo layer=catalogBuilder.buildLayer((ResourceInfo)ft);
  ImportTask task=new ImportTask(data);
  task.setLayer(layer);
  task.getMetadata().put(FeatureType.class,featureType);
  return task;
}
