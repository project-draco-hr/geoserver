{
  tester.assertRenderedPage(StyleEditPage.class);
  tester.assertNoErrorMessage();
  tester.debugComponentTrees();
  tester.assertComponent("styleForm:context:panel:name",TextField.class);
  tester.assertComponent("styleForm:styleEditor:editorContainer:editorParent:editor",TextArea.class);
  tester.executeAjaxEvent("styleForm:context:panel:legendPanel:externalGraphicContainer:showhide:show","click");
  tester.assertComponent("styleForm:context:panel:legendPanel",ExternalGraphicPanel.class);
  tester.assertComponent("styleForm:context:panel:legendPanel:externalGraphicContainer:list:onlineResource",TextField.class);
  tester.assertComponent("styleForm:context:panel:legendPanel:externalGraphicContainer:list:width",TextField.class);
  tester.assertComponent("styleForm:context:panel:legendPanel:externalGraphicContainer:list:height",TextField.class);
  tester.assertComponent("styleForm:context:panel:legendPanel:externalGraphicContainer:list:format",TextField.class);
  tester.assertModelValue("styleForm:context:panel:name","Buildings");
  GeoServerResourceLoader loader=GeoServerExtensions.bean(GeoServerResourceLoader.class);
  assertNotNull(loader);
  String path=Paths.path("styles",Paths.convert(buildingsStyle.getFilename()));
  Resource styleFile=loader.get(path);
  DocumentBuilder db=DocumentBuilderFactory.newInstance().newDocumentBuilder();
  Document d1=db.parse(styleFile.in());
  String xml=tester.getComponentFromLastRenderedPage("styleForm:styleEditor").getDefaultModelObjectAsString();
  xml=xml.replaceAll("&lt;","<").replaceAll("&gt;",">").replaceAll("&quot;","\"");
  Document d2=db.parse(new ByteArrayInputStream(xml.getBytes()));
  assertXMLEqual(d1,d2);
}
