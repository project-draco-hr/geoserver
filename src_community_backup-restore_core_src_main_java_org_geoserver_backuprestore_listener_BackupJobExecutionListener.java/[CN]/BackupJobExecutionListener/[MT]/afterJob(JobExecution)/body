{
  boolean dryRun=Boolean.parseBoolean(jobExecution.getJobParameters().getString(Backup.PARAM_DRY_RUN_MODE,"false"));
  boolean bestEffort=Boolean.parseBoolean(jobExecution.getJobParameters().getString(Backup.PARAM_BEST_EFFORT_MODE,"false"));
  try {
    final Long executionId=jobExecution.getId();
    LOGGER.fine("Running Executions IDs : " + executionId);
    if (jobExecution.getStatus() != BatchStatus.STOPPED) {
      LOGGER.fine("Executions Step Summaries : " + backupFacade.getJobOperator().getStepExecutionSummaries(executionId));
      LOGGER.fine("Executions Parameters : " + backupFacade.getJobOperator().getParameters(executionId));
      LOGGER.fine("Executions Summary : " + backupFacade.getJobOperator().getSummary(executionId));
      if (jobExecution.getStatus() == BatchStatus.COMPLETED) {
        JobParameters jobParameters=backupExecution.getJobParameters();
        Resource sourceFolder=Resources.fromURL(jobParameters.getString(Backup.PARAM_OUTPUT_FILE_PATH));
        BackupUtils.compressTo(sourceFolder,backupExecution.getArchiveFile());
      }
    }
  }
 catch (  NoSuchJobExecutionException|IOException e) {
    if (!bestEffort) {
      this.backupExecution.addFailureExceptions(Arrays.asList(e));
      throw new RuntimeException(e);
    }
 else {
      this.backupExecution.addWarningExceptions(Arrays.asList(e));
    }
  }
 finally {
    try {
      List<BackupRestoreCallback> callbacks=GeoServerExtensions.extensions(BackupRestoreCallback.class);
      for (      BackupRestoreCallback callback : callbacks) {
        callback.onEndRequest();
      }
    }
 catch (    Exception e) {
      LOGGER.log(Level.SEVERE,"Could not unlock GeoServer Catalog Configuration!",e);
    }
  }
}
