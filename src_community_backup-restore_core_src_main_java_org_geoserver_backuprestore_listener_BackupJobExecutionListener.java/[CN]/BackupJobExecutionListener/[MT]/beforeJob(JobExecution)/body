{
  if (backupFacade.getBackupExecutions().get(jobExecution.getId()) != null) {
    this.backupExecution=backupFacade.getBackupExecutions().get(jobExecution.getId());
  }
 else {
    Long id=null;
    BackupExecutionAdapter bkp=null;
    for (    Entry<Long,BackupExecutionAdapter> entry : backupFacade.getBackupExecutions().entrySet()) {
      id=entry.getKey();
      bkp=entry.getValue();
      if (bkp.getJobParameters().getLong(Backup.PARAM_TIME).equals(jobExecution.getJobParameters().getLong(Backup.PARAM_TIME))) {
        break;
      }
 else {
        id=null;
        bkp=null;
      }
    }
    if (bkp != null) {
      Resource archiveFile=bkp.getArchiveFile();
      boolean overwrite=bkp.isOverwrite();
      List<String> options=bkp.getOptions();
      Filter filter=bkp.getFilter();
      this.backupFacade.getBackupExecutions().remove(id);
      this.backupExecution=new BackupExecutionAdapter(jobExecution,backupFacade.getTotalNumberOfBackupSteps());
      this.backupExecution.setArchiveFile(archiveFile);
      this.backupExecution.setOverwrite(overwrite);
      this.backupExecution.setFilter(filter);
      this.backupExecution.getOptions().addAll(options);
      this.backupFacade.getBackupExecutions().put(jobExecution.getId(),this.backupExecution);
    }
  }
}
