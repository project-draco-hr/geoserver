{
  OperationType getRecords=owsf.createOperationType();
  operationsMetadata.getOperation().add(getRecords);
  getRecords.setName("GetRecords");
  DCPType getRecordsDCP=owsf.createDCPType();
  getRecords.getDCP().add(getRecordsDCP);
  HTTPType getRecordsHTTP=owsf.createHTTPType();
  getRecordsDCP.setHTTP(getRecordsHTTP);
  String getRecordsHref=ResponseUtils.buildURL(baseUrl,"csw",new HashMap<String,String>(),URLType.SERVICE);
  RequestMethodType getRecordsGet=owsf.createRequestMethodType();
  getRecordsGet.setHref(getRecordsHref);
  getRecordsHTTP.getGet().add(getRecordsGet);
  RequestMethodType getRecordsPost=owsf.createRequestMethodType();
  getRecordsPost.setHref(getRecordsHref);
  DomainType getRecordsPostConstraints=owsf.createDomainType();
  getRecordsPostConstraints.setName("PostEncoding");
  getRecordsPostConstraints.getValue().add("XML");
  getRecordsPost.getConstraint().add(getRecordsPostConstraints);
  getRecordsHTTP.getPost().add(getRecordsPost);
  for (  DomainType param : operationParameters.get("GetRecords")) {
    getRecords.getParameter().add(param);
  }
  for (  DomainType constraint : operationConstraints.get("GetRecords")) {
    getRecords.getConstraint().add(constraint);
  }
  try {
    for (    FeatureType ft : store.getRecordSchemas()) {
      if (ft.equals(CSWRecordDescriptor.RECORD)) {
        List<Name> queriables=store.getCapabilities().getQueriables(ft.getName());
        if (queriables != null && queriables.size() > 0) {
          DomainType dt=owsf.createDomainType();
          dt.setName("SupportedDublinCoreQueryables");
          for (          Name q : queriables) {
            NamespaceSupport nss=CSWRecordDescriptor.NAMESPACES;
            String prefix=nss.getPrefix(q.getNamespaceURI());
            dt.getValue().add(prefix + ":" + q.getLocalPart());
          }
          getRecords.getConstraint().add(dt);
        }
      }
    }
  }
 catch (  IOException e) {
    LOGGER.log(Level.WARNING,"Failed to encode getRecords additional queriables",e);
  }
}
