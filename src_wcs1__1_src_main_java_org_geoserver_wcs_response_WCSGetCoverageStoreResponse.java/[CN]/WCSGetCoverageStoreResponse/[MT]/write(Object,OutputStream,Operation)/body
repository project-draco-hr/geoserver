{
  GridCoverage[] coverages=(GridCoverage[])value;
  GetCoverageType request=(GetCoverageType)operation.getParameters()[0];
  String outputFormat=request.getOutput().getFormat();
  CoverageResponseDelegate delegate=responseFactory.encoderFor(outputFormat);
  if (delegate == null)   throw new WcsException("Could not find encoder for output format " + outputFormat);
  final GridCoverage2D coverage=(GridCoverage2D)coverages[0];
  CoverageInfo coverageInfo=catalog.getCoverageByName(request.getIdentifier().getValue());
  Resource wcsStore=null;
  try {
    GeoServerResourceLoader loader=geoServer.getCatalog().getResourceLoader();
    wcsStore=loader.get("temp/wcs");
  }
 catch (  Exception e) {
    throw new WcsException("Could not create the temporary storage directory for WCS");
  }
  Resource coverageFile=null;
  while (true) {
    coverageFile=wcsStore.get(coverageInfo.getName().replace(':','_') + "_" + System.nanoTime()+ "."+ delegate.getFileExtension(outputFormat));
    if (!Resources.exists(coverageFile))     break;
  }
  try (OutputStream os=new BufferedOutputStream(coverageFile.out())){
    delegate.encode(coverage,outputFormat,Collections.EMPTY_MAP,os);
    os.flush();
  }
   System.out.println(coverageFile);
  final String coverageLocation=buildURL(request.getBaseUrl(),appendPath("temp/wcs",coverageFile.name()),null,URLType.RESOURCE);
  WCSInfo wcs=geoServer.getService(WCSInfo.class);
  CoveragesTransformer tx=new CoveragesTransformer(wcs,request,coverageLocation);
  try {
    tx.transform(coverageInfo,output);
  }
 catch (  TransformerException e) {
    throw new WcsException("Failure trying to encode Coverages response",e);
  }
}
