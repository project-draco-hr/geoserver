{
  super(id,list);
  Assert.notNull(list.getObject());
  final WebMarkupContainer container=new WebMarkupContainer("container");
  container.setOutputMarkupId(true);
  add(container);
  table=new WebMarkupContainer("table");
  table.setOutputMarkupId(true);
  container.add(table);
  authorityURLs=new ListView<AuthorityURLInfo>("authorities",new ArrayList<AuthorityURLInfo>(list.getObject())){
    private static final long serialVersionUID=1L;
    @Override protected void populateItem(    final ListItem<AuthorityURLInfo> item){
      item.add(AttributeModifier.replace("class",item.getIndex() % 2 == 0 ? "even" : "odd"));
      TextField<String> authName;
      authName=new TextField<String>("authName",new PropertyModel<String>(item.getModel(),"name"));
      authName.setRequired(true);
      FormComponentFeedbackBorder authNameBorder=new FormComponentFeedbackBorder("authNameBorder");
      item.add(authNameBorder);
      authNameBorder.add(authName);
      TextField<String> authURL;
      authURL=new TextField<String>("authorityURL",new PropertyModel<String>(item.getModel(),"href"));
      authURL.setRequired(true);
      authURL.add(new UrlValidator());
      FormComponentFeedbackBorder urlBorder=new FormComponentFeedbackBorder("urlBorder");
      item.add(urlBorder);
      urlBorder.add(authURL);
      AjaxLink<Integer> link=new AjaxLink<Integer>("removeLink",new Model<Integer>(item.getIndex())){
        private static final long serialVersionUID=1L;
        @Override public void onClick(        AjaxRequestTarget target){
          List<AuthorityURLInfo> list=new ArrayList<AuthorityURLInfo>(authorityURLs.getModelObject());
          int index=getModelObject();
          list.remove(index);
          authorityURLs.setModelObject(list);
          updateLinksVisibility();
          target.add(container);
        }
      }
;
      item.add(link);
    }
  }
;
  authorityURLs.setReuseItems(true);
  table.add(authorityURLs);
  noMetadata=new Label("noURLs",new ResourceModel("noAuthorityURLsSoFar"));
  container.add(noMetadata);
  updateLinksVisibility();
  AjaxButton button=new AjaxButton("addURL"){
    private static final long serialVersionUID=1L;
    @Override protected void onSubmit(    AjaxRequestTarget target,    Form<?> form){
      List<AuthorityURLInfo> list=authorityURLs.getModelObject();
      AuthorityURLInfo authorityURL=new AuthorityURL();
      list.add(authorityURL);
      authorityURLs.setModelObject(list);
      AuthorityURLListEditor.this.convertInput();
      updateLinksVisibility();
      target.add(container);
    }
  }
;
  add(button);
}
