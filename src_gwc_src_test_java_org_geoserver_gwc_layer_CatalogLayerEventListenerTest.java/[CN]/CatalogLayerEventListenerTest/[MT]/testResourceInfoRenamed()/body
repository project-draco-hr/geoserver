{
  final String oldTileLayerName=mockResourceInfo.prefixedName();
  final String renamedResouceName=RESOURCE_NAME + "_Renamed";
  final String renamedPrefixedResouceName=PREFIXED_RESOURCE_NAME + "_Renamed";
  when(mockResourceInfo.getName()).thenReturn(renamedResouceName);
  when(mockResourceInfo.prefixedName()).thenReturn(renamedPrefixedResouceName);
  CatalogModifyEvent modifyEvent=mock(CatalogModifyEvent.class);
  when(modifyEvent.getSource()).thenReturn(mockResourceInfo);
  when(modifyEvent.getPropertyNames()).thenReturn(Arrays.asList("name"));
  when(modifyEvent.getOldValues()).thenReturn(Arrays.asList((Object)RESOURCE_NAME));
  when(modifyEvent.getNewValues()).thenReturn(Arrays.asList((Object)renamedResouceName));
  GeoServerTileLayerInfo info=TileLayerInfoUtil.loadOrCreate(mockLayerInfo,GWCConfig.getOldDefaults());
  GeoServerTileLayer tileLayer=mock(GeoServerTileLayer.class);
  when(mockMediator.hasTileLayer(same(mockResourceInfo))).thenReturn(true);
  when(tileLayer.getInfo()).thenReturn(info);
  when(tileLayer.getLayerInfo()).thenReturn(mockLayerInfo);
  when(mockMediator.getTileLayer(same(mockResourceInfo))).thenReturn(tileLayer);
  when(mockMediator.getTileLayerByName(eq(oldTileLayerName))).thenReturn(tileLayer);
  listener.handleModifyEvent(modifyEvent);
  verify(mockMediator,times(1)).hasTileLayer(same(mockResourceInfo));
  CatalogPostModifyEvent postModifyEvent=mock(CatalogPostModifyEvent.class);
  when(postModifyEvent.getSource()).thenReturn(mockResourceInfo);
  listener.handlePostModifyEvent(postModifyEvent);
  ArgumentCaptor<GeoServerTileLayer> captor=ArgumentCaptor.forClass(GeoServerTileLayer.class);
  verify(mockMediator).save(captor.capture());
  GeoServerTileLayer saved=captor.getValue();
  assertNotNull(saved);
  assertNotNull(saved.getInfo());
  GeoServerTileLayerInfo savedInfo=saved.getInfo();
  assertSame(info,savedInfo);
  assertEquals(renamedPrefixedResouceName,savedInfo.getName());
}
