{
  String cqlFilter="name LIKE 'Foo%'";
  when(mockResourceInfo.getCqlFilter()).thenReturn(cqlFilter);
  CatalogModifyEvent modifyEvent=mock(CatalogModifyEvent.class);
  when(modifyEvent.getSource()).thenReturn(mockResourceInfo);
  when(modifyEvent.getPropertyNames()).thenReturn(Arrays.asList("cqlFilter"));
  when(modifyEvent.getOldValues()).thenReturn(Arrays.asList((Object)null));
  when(modifyEvent.getNewValues()).thenReturn(Arrays.asList((Object)cqlFilter));
  GeoServerTileLayerInfo info=TileLayerInfoUtil.loadOrCreate(mockLayerInfo,GWCConfig.getOldDefaults());
  GeoServerTileLayer tileLayer=mock(GeoServerTileLayer.class);
  when(mockMediator.hasTileLayer(same(mockResourceInfo))).thenReturn(true);
  when(tileLayer.getInfo()).thenReturn(info);
  when(tileLayer.getLayerInfo()).thenReturn(mockLayerInfo);
  when(mockMediator.getTileLayer(same(mockResourceInfo))).thenReturn(tileLayer);
  String resourceName=mockResourceInfo.prefixedName();
  when(mockMediator.getTileLayerByName(eq(resourceName))).thenReturn(tileLayer);
  listener.handleModifyEvent(modifyEvent);
  verify(mockMediator,times(1)).hasTileLayer(same(mockResourceInfo));
  CatalogPostModifyEvent postModifyEvent=mock(CatalogPostModifyEvent.class);
  when(postModifyEvent.getSource()).thenReturn(mockResourceInfo);
  listener.handlePostModifyEvent(postModifyEvent);
  verify(mockMediator).truncate(eq(resourceName));
}
