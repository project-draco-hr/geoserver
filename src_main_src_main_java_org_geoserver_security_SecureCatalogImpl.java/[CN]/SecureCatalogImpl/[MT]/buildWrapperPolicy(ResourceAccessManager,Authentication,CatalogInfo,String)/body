{
  boolean canRead=true;
  boolean canWrite=true;
  AccessLimits limits;
  if (info instanceof WorkspaceInfo) {
    limits=accessManager.getAccessLimits(user,(WorkspaceInfo)info);
    WorkspaceAccessLimits wl=(WorkspaceAccessLimits)limits;
    if (wl != null) {
      if (wl.isAdminable()) {
        canRead=canWrite=true;
      }
 else {
        canRead=wl.isReadable();
        canWrite=wl.isWritable();
      }
    }
    if (AdminRequest.get() != null) {
      if (wl == null || !wl.isAdminable()) {
        canRead=canWrite=false;
      }
    }
  }
 else   if (info instanceof LayerInfo || info instanceof ResourceInfo) {
    DataAccessLimits dl;
    WorkspaceAccessLimits wl;
    if (info instanceof LayerInfo) {
      dl=accessManager.getAccessLimits(user,(LayerInfo)info);
      wl=accessManager.getAccessLimits(user,((LayerInfo)info).getResource().getStore().getWorkspace());
    }
 else {
      dl=accessManager.getAccessLimits(user,(ResourceInfo)info);
      wl=accessManager.getAccessLimits(user,((ResourceInfo)info).getStore().getWorkspace());
    }
    if (dl != null) {
      canRead=dl.getReadFilter() != Filter.EXCLUDE;
      if (dl instanceof VectorAccessLimits) {
        canWrite=((VectorAccessLimits)dl).getWriteFilter() != Filter.EXCLUDE;
      }
 else {
        canWrite=false;
      }
    }
    limits=dl;
    if (AdminRequest.get() != null) {
      if (wl != null && !wl.isAdminable()) {
        canRead=false;
      }
    }
  }
 else   if (info instanceof StyleInfo || info instanceof LayerGroupInfo) {
    WorkspaceInfo ws=null;
    if (info instanceof StyleInfo) {
      limits=accessManager.getAccessLimits(user,(StyleInfo)info);
      ws=((StyleInfo)info).getWorkspace();
    }
 else {
      limits=accessManager.getAccessLimits(user,(LayerGroupInfo)info);
      ws=((LayerGroupInfo)info).getWorkspace();
    }
    if (limits != null) {
      canRead=false;
    }
    if (ws != null && AdminRequest.get() != null) {
      WorkspaceAccessLimits wl=accessManager.getAccessLimits(user,ws);
      if (wl != null) {
        if (!wl.isAdminable()) {
          canRead=false;
        }
      }
    }
  }
 else {
    throw new IllegalArgumentException("Can't build the wrapper policy for objects " + "other than workspace, layer or resource: " + info);
  }
  final CatalogMode mode=limits != null ? limits.getMode() : CatalogMode.HIDE;
  if (!canRead) {
    if (mode == CatalogMode.HIDE) {
      return WrapperPolicy.hide(limits);
    }
 else     if (mode == CatalogMode.MIXED) {
      Request request=Dispatcher.REQUEST.get();
      if (request != null && "GetCapabilities".equalsIgnoreCase(request.getRequest()))       return WrapperPolicy.hide(limits);
 else       throw unauthorizedAccess(resourceName);
    }
 else {
      return WrapperPolicy.metadata(limits);
    }
  }
 else   if (!canWrite) {
    if (mode == CatalogMode.HIDE) {
      return WrapperPolicy.readOnlyHide(limits);
    }
 else {
      return WrapperPolicy.readOnlyChallenge(limits);
    }
  }
  return WrapperPolicy.readWrite(limits);
}
