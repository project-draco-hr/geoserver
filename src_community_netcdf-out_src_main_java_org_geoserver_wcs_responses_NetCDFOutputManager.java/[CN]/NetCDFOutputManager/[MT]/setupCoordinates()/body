{
  final RenderedImage image=sampleGranule.getRenderedImage();
  final Envelope envelope=sampleGranule.getEnvelope2D();
  GridGeometry gridGeometry=sampleGranule.getGridGeometry();
  MathTransform transform=gridGeometry.getGridToCRS();
  AxisOrder axisOrder=CRS.getAxisOrder(sampleGranule.getCoordinateReferenceSystem());
  final int numLat=image.getHeight();
  final int numLon=image.getWidth();
  final AffineTransform at=(AffineTransform)transform;
  double xmin=(axisOrder == AxisOrder.NORTH_EAST) ? envelope.getMinimum(1) : envelope.getMinimum(0);
  double ymin=(axisOrder == AxisOrder.NORTH_EAST) ? envelope.getMinimum(0) : envelope.getMinimum(1);
  final double periodY=((axisOrder == AxisOrder.NORTH_EAST) ? XAffineTransform.getScaleX0(at) : XAffineTransform.getScaleY0(at));
  final double periodX=(axisOrder == AxisOrder.NORTH_EAST) ? XAffineTransform.getScaleY0(at) : XAffineTransform.getScaleX0(at);
  xmin+=(periodX / 2d);
  ymin+=(periodY / 2d);
  final Dimension latDim=writer.addDimension(null,NetCDFUtilities.LAT,numLat);
  final Dimension lonDim=writer.addDimension(null,NetCDFUtilities.LON,numLon);
  final ArrayFloat latData=new ArrayFloat(new int[]{numLat});
  final Index latIndex=latData.getIndex();
  final Variable varLat=writer.addVariable(null,NetCDFUtilities.LAT,DataType.FLOAT,NetCDFUtilities.LAT);
  writer.addVariableAttribute(varLat,new Attribute(NetCDFUtilities.LONG_NAME,NetCDFUtilities.LATITUDE));
  writer.addVariableAttribute(varLat,new Attribute(NetCDFUtilities.UNITS,NetCDFUtilities.LAT_UNITS));
  for (int yPos=0; yPos < numLat; yPos++) {
    latData.setFloat(latIndex.set(yPos),new Float(ymin + (new Float(yPos).floatValue() * periodY)).floatValue());
  }
  final ArrayFloat lonData=new ArrayFloat(new int[]{numLon});
  final Index lonIndex=lonData.getIndex();
  final Variable varLon=writer.addVariable(null,NetCDFUtilities.LON,DataType.FLOAT,NetCDFUtilities.LON);
  writer.addVariableAttribute(varLon,new Attribute(NetCDFUtilities.LONG_NAME,NetCDFUtilities.LONGITUDE));
  writer.addVariableAttribute(varLon,new Attribute(NetCDFUtilities.UNITS,NetCDFUtilities.LON_UNITS));
  for (int xPos=0; xPos < numLon; xPos++) {
    lonData.setFloat(lonIndex.set(xPos),new Float(xmin + (new Float(xPos).floatValue() * periodX)).floatValue());
  }
  final NetCDFDimensionManager latManager=new NetCDFDimensionManager(NetCDFUtilities.LAT);
  latManager.setNetCDFDimension(latDim);
  latManager.setDimensionValues(new DimensionValuesArray(latData));
  dimensionMapping.put(NetCDFUtilities.LAT,latManager);
  final NetCDFDimensionManager lonManager=new NetCDFDimensionManager(NetCDFUtilities.LON);
  lonManager.setNetCDFDimension(lonDim);
  lonManager.setDimensionValues(new DimensionValuesArray(lonData));
  dimensionMapping.put(NetCDFUtilities.LON,lonManager);
}
