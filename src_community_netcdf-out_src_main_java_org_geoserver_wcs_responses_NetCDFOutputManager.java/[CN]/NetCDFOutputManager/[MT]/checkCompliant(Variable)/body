{
  if (var == null) {
    return false;
  }
  if (variableName == null || variableName.isEmpty()) {
    return false;
  }
  Attribute unit=var.findAttribute(NetCDFUtilities.UNITS);
  if (unit == null) {
    return false;
  }
  if (parserBean == null || parserBean.getParser() == null) {
    return false;
  }
  NetCDFCFParser parser=parserBean.getParser();
  boolean validName=parser.hasEntryId(variableName) || parser.hasAliasId(variableName);
  Entry e=parser.getEntry(variableName) != null ? parser.getEntry(variableName) : parser.getEntryFromAlias(variableName);
  boolean validUOM=false;
  if (e != null) {
    String canonical=e.getCanonicalUnits();
    String definedUnit=unit.getStringValue();
    if (canonical.equalsIgnoreCase(definedUnit)) {
      validUOM=true;
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine("Canonical unit and specified unit are equal. " + "Proceeding with standard_name set");
      }
    }
 else {
      boolean parseable=false;
      try {
        ucar.units.Unit ucarUnit=SUF.parse(definedUnit);
        ucar.units.Unit canonicalUnit=SUF.parse(canonical);
        if (ucarUnit.isCompatible(canonicalUnit)) {
          validUOM=true;
          parseable=true;
          if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.fine("Canonical unit and specified unit are compatible. " + "Proceeding with standard_name set");
          }
        }
      }
 catch (      NoSuchUnitException e1) {
        if (LOGGER.isLoggable(Level.FINE)) {
          LOGGER.fine(e1.getLocalizedMessage());
        }
      }
catch (      UnitParseException e1) {
        if (LOGGER.isLoggable(Level.FINE)) {
          LOGGER.fine(e1.getLocalizedMessage());
        }
      }
catch (      SpecificationException e1) {
        if (LOGGER.isLoggable(Level.FINE)) {
          LOGGER.fine(e1.getLocalizedMessage());
        }
      }
catch (      UnitDBException e1) {
        if (LOGGER.isLoggable(Level.FINE)) {
          LOGGER.fine(e1.getLocalizedMessage());
        }
      }
catch (      PrefixDBException e1) {
        if (LOGGER.isLoggable(Level.FINE)) {
          LOGGER.fine(e1.getLocalizedMessage());
        }
      }
catch (      UnitSystemException e1) {
        if (LOGGER.isLoggable(Level.FINE)) {
          LOGGER.fine(e1.getLocalizedMessage());
        }
      }
      if (!parseable) {
        if (LOGGER.isLoggable(Level.INFO)) {
          LOGGER.info("The specified unit " + definedUnit + " can't be converted to a "+ " UCAR unit so it doesn't allow to define a standard name");
        }
      }
    }
  }
  return validName && validUOM;
}
