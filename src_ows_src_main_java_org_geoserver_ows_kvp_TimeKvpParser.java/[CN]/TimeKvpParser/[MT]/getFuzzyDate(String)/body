{
  String computedValue=value;
  if (computedValue.equalsIgnoreCase("current") || computedValue.equalsIgnoreCase("now")) {
    return null;
  }
  if (computedValue.equalsIgnoreCase("present")) {
    Calendar now=Calendar.getInstance();
    now.set(Calendar.MILLISECOND,0);
    computedValue=FormatAndPrecision.MILLISECOND.getFormat().format(now.getTime());
  }
  if (computedValue.toLowerCase().startsWith("back")) {
    Matcher m=pattern.matcher(computedValue.toLowerCase());
    while (m.find()) {
      Calendar today=Calendar.getInstance();
      today.set(Calendar.MILLISECOND,0);
      String interval=m.group(3);
      int duration=Integer.parseInt(m.group(2));
      if (interval.equals("h")) {
        today.add(Calendar.HOUR,-1 * duration);
      }
 else       if (interval.equals("d")) {
        today.add(Calendar.DAY_OF_YEAR,-1 * duration);
      }
 else       if (interval.equals("w")) {
        today.add(Calendar.DAY_OF_YEAR,-7 * duration);
      }
 else {
        throw new ParseException("Invalid TIME back format: " + value,0);
      }
      computedValue=FormatAndPrecision.MILLISECOND.getFormat().format(today.getTime());
    }
  }
  for (  FormatAndPrecision f : FormatAndPrecision.values()) {
    ParsePosition pos=new ParsePosition(0);
    Date time=f.getFormat().parse(computedValue,pos);
    if (pos.getIndex() == computedValue.length()) {
      DateRange range=f.expand(time);
      if (range.getMinValue().equals(range.getMaxValue())) {
        return range.getMinValue();
      }
 else {
        return range;
      }
    }
  }
  throw new ParseException("Invalid date: " + value,0);
}
