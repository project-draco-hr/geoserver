{
  String url=(String)validatable.getValue();
  try {
    HTTPClient client=new SimpleHttpClient();
    usernamePanel.getFormComponent().processInput();
    String user=usernamePanel.getFormComponent().getInput();
    password.getFormComponent().processInput();
    String pwd=password.getFormComponent().getInput();
    if (user != null && user.length() > 0 && pwd != null && pwd.length() > 0) {
      client.setUser(user);
      client.setPassword(pwd);
    }
    Map<String,Object> hints=new HashMap<>();
    hints.put(DocumentHandler.DEFAULT_NAMESPACE_HINT_KEY,WMSSchema.getInstance());
    hints.put(DocumentFactory.VALIDATION_HINT,Boolean.FALSE);
    EntityResolverProvider provider=getCatalog().getResourcePool().getEntityResolverProvider();
    if (provider != null) {
      EntityResolver entityResolver=provider.getEntityResolver();
      if (entityResolver != null) {
        hints.put(XMLHandlerHints.ENTITY_RESOLVER,entityResolver);
      }
    }
    WebMapServer server=new WebMapServer(new URL(url),client);
    server.getCapabilities();
  }
 catch (  IOException|ServiceException e) {
    IValidationError err=new ValidationError("WMSCapabilitiesValidator.connectionFailure").addKey("WMSCapabilitiesValidator.connectionFailure").setVariable("error",e.getMessage());
    validatable.error(err);
  }
}
