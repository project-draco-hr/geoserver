{
  LayerInfo browseLayer=createEoMosaicLayer(ws,name,EoLayerType.EO_PRODUCT,browseImageUrl);
  LayerInfo bandsLayer=createEoMosaicLayer(ws,name + " Bands",EoLayerType.BAND_COVERAGE,bandsUrl);
  LayerInfo masksLayer=createEoMosaicLayer(ws,name + " Masks",EoLayerType.BITMASK,masksUrl);
  LayerInfo paramsLayer=createEoMosaicLayer(ws,name + " Parameters",EoLayerType.GEOPHYSICAL_PARAMETER,parametersUrl);
  LayerInfo outlineLayer;
  try {
    outlineLayer=createEoOutlineLayer(bandsUrl,ws,name + " Outline");
  }
 catch (  RuntimeException e) {
    throw new IllegalArgumentException("The layer '" + name + " Outline' could not be created. Failure message: "+ e.getMessage(),e);
  }
catch (  Exception e) {
    throw new IllegalArgumentException("The layer '" + name + " Outline' could not be created. Failure message: "+ e.getMessage(),e);
  }
  LayerGroupInfo layerGroup=catalog.getFactory().createLayerGroup();
  layerGroup.setWorkspace(ws);
  layerGroup.setName(name + " Group");
  layerGroup.setMode(LayerGroupInfo.Mode.EO);
  layerGroup.setRootLayer(browseLayer);
  layerGroup.setRootLayerStyle(browseLayer.getDefaultStyle());
  layerGroup.getLayers().add(bandsLayer);
  layerGroup.getLayers().add(outlineLayer);
  if (masksLayer != null) {
    layerGroup.getLayers().add(masksLayer);
  }
  if (paramsLayer != null) {
    layerGroup.getLayers().add(paramsLayer);
  }
  try {
    CatalogBuilder builder=new CatalogBuilder(catalog);
    builder.calculateLayerGroupBounds(layerGroup);
    catalog.add(layerGroup);
    return layerGroup;
  }
 catch (  RuntimeException e) {
    throw new IllegalArgumentException("The layer group '" + name + " Group' could not be created. Failure message: "+ e.getMessage(),e);
  }
catch (  Exception e) {
    throw new IllegalArgumentException("The layer group '" + name + " Group' could not be created. Failure message: "+ e.getMessage(),e);
  }
}
