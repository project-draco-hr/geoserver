{
  GetLegendGraphicRequest request=(GetLegendGraphicRequest)super.read(req,kvp,rawKvp);
  request.setRawKvp(rawKvp);
  if (request.getVersion() == null || request.getVersion().length() == 0) {
    String version=(String)rawKvp.get("WMTVER");
    if (version == null) {
      version=wms.getVersion();
    }
    request.setVersion(version);
  }
  final String language=(String)rawKvp.get("LANGUAGE");
  if (language != null) {
    request.setLocale(new Locale(language));
  }
  final String layer=(String)rawKvp.get("LAYER");
  final boolean strict=rawKvp.containsKey("STRICT") ? Boolean.valueOf((String)rawKvp.get("STRICT")) : request.isStrict();
  request.setStrict(strict);
  if (strict && layer == null) {
    throw new ServiceException("LAYER parameter not present for GetLegendGraphic","LayerNotDefined");
  }
  if (strict && request.getFormat() == null) {
    throw new ServiceException("Missing FORMAT parameter for GetLegendGraphic","MissingFormat");
  }
  Object infoObject=null;
  List<LegendRequest> layers=new ArrayList<LegendRequest>();
  if (layer != null) {
    try {
      LayerInfo layerInfo=wms.getLayerByName(layer);
      if (layerInfo != null) {
        LegendRequest legend=addLayer(layerInfo,request);
        legend.setLayer(layer);
        layers.add(legend);
        infoObject=layerInfo;
      }
 else {
        LayerGroupInfo layerGroupInfo=wms.getLayerGroupByName(layer);
        if (layerGroupInfo != null) {
          for (          LayerInfo singleLayer : layerGroupInfo.layers()) {
            LegendRequest legend=addLayer(singleLayer,request);
            legend.setLayerGroupInfo(layerGroupInfo);
            layers.add(legend);
          }
          infoObject=layerGroupInfo;
        }
 else {
          throw new ServiceException(layer + " layer does not exist.");
        }
      }
    }
 catch (    IOException e) {
      throw new ServiceException(e);
    }
catch (    NoSuchElementException ne) {
      throw new ServiceException(new StringBuffer(layer).append(" layer does not exists.").toString(),ne);
    }
catch (    Exception te) {
      throw new ServiceException("Can't obtain the schema for the required layer.",te);
    }
  }
 else {
    LegendRequest styleLegend=request.new LegendRequest();
    layers.add(styleLegend);
  }
  request.getLegends().addAll(layers);
  if (request.getFormat() == null) {
    request.setFormat(GetLegendGraphicRequest.DEFAULT_FORMAT);
  }
  if (null == wms.getLegendGraphicOutputFormat(request.getFormat())) {
    throw new ServiceException(new StringBuffer("Invalid graphic format: ").append(request.getFormat()).toString(),"InvalidFormat");
  }
  try {
    parseOptionalParameters(request,infoObject,rawKvp);
    if (request.getLayers().size() != request.getStyles().size()) {
      String msg=layers.size() + " layers requested, but found " + request.getStyles().size()+ " styles specified. ";
      throw new ServiceException(msg,getClass().getName());
    }
    if (request.getRules().size() > 0 && layers.size() != request.getRules().size()) {
      String msg=layers.size() + " layers requested, but found " + request.getRules().size()+ " rules specified. ";
      throw new ServiceException(msg,getClass().getName());
    }
  }
 catch (  IOException e) {
    throw new ServiceException(e);
  }
  return request;
}
