{
  ThreadPoolExecutor tp=(ThreadPoolExecutor)Executors.newCachedThreadPool();
  tp.setMaximumPoolSize(50);
  Server server=null;
  ServerConnector conn=null;
  try {
    server=new Server(new ExecutorThreadPool(tp));
    File properties=null;
    if (args.length == 1) {
      String propertiesFileName=args[0];
      if (!propertiesFileName.isEmpty()) {
        properties=new File(propertiesFileName);
      }
    }
 else {
      properties=new File("src/test/resources/jetty.properties");
    }
    Properties prop=loadProperties(properties);
    for (    Object key : prop.keySet()) {
      String property=System.getProperty(key.toString());
      String envProp=System.getenv(key.toString());
      if (property != null) {
        prop.put(key,property);
      }
 else       if (envProp != null) {
        prop.put(key,envProp);
      }
    }
    setSystemProperties(prop);
    server.setHandler(configureContext(prop));
    conn=configureConnection(prop,server);
    server.setConnectors(new Connector[]{conn});
    server.start();
  }
 catch (  Throwable e) {
    log.error("Could not start the Jetty server: " + e.getMessage(),e);
    if (server != null) {
      try {
        server.stop();
      }
 catch (      Exception e1) {
        log.error("Unable to stop the Jetty server:" + e1.getMessage(),e1);
      }
    }
    if (conn != null) {
      try {
        conn.stop();
      }
 catch (      Exception e1) {
        log.error("Unable to stop the connection:" + e1.getMessage(),e1);
      }
    }
  }
}
