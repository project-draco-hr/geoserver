{
  this(id,new LayerListProvider(){
    private static final long serialVersionUID=426375054014475107L;
    @Override public Iterator<LayerInfo> iterator(    final long first,    final long count){
      Iterator<LayerInfo> iterator=filteredItems((int)first,(int)count);
      if (iterator instanceof CloseableIterator) {
        try {
          return Lists.newArrayList(iterator).iterator();
        }
  finally {
          CloseableIteratorAdapter.close(iterator);
        }
      }
 else {
        return iterator;
      }
    }
    /** 
 * Returns the requested page of layer objects after applying any keyword
 * filtering set on the page
 */
    private Iterator<LayerInfo> filteredItems(    Integer first,    Integer count){
      final Catalog catalog=getCatalog();
      final SortParam<?> sort=getSort();
      final Property<LayerInfo> property=getProperty(sort);
      SortBy sortOrder=null;
      if (sort != null) {
        if (property instanceof BeanProperty) {
          final String sortProperty=((BeanProperty<LayerInfo>)property).getPropertyPath();
          sortOrder=sortBy(sortProperty,sort.isAscending());
        }
      }
      final Filter filter=getFilter();
      Iterator<LayerInfo> items=catalog.list(LayerInfo.class,filter,first,count,sortOrder);
      return items;
    }
  }
);
}
