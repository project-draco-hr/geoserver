{
  insertValues();
  addAdditonalData();
  current=ugService.getUserByUsername("user1");
  initializeTester();
  tester.assertRenderedPage(EditUserPage.class);
  assertFalse(tester.getComponentFromLastRenderedPage("form:username").isEnabled());
  tester.assertModelValue("form:username","user1");
  GeoServerPasswordEncoder encoder=(GeoServerPasswordEncoder)GeoServerExtensions.bean(ugService.getPasswordEncoderName());
  String enc=(String)tester.getComponentFromLastRenderedPage("form:password").getDefaultModelObject();
  assertTrue(encoder.isPasswordValid(enc,"11111",null));
  enc=(String)tester.getComponentFromLastRenderedPage("form:confirmPassword").getDefaultModelObject();
  assertTrue(encoder.isPasswordValid(enc,"11111",null));
  tester.assertModelValue("form:enabled",Boolean.TRUE);
  newFormTester();
  form.setValue("enabled",false);
  assertTrue(page.userGroupPalette.isEnabled());
  tester.assertComponent("form:roles:palette:recorder",Recorder.class);
  tester.debugComponentTrees();
  addNewRole("ROLE_NEW");
  tester.assertRenderedPage(EditUserPage.class);
  assignRole("ROLE_NEW");
  openCloseRolePanel(EditUserPage.class);
  assertCalculatedRoles(new String[]{"ROLE_AUTHENTICATED","ROLE_NEW","ROLE_WFS","ROLE_WMS"});
  addNewGroup("testgroup");
  assignGroup("testgroup");
  openCloseGroupPanel(EditUserPage.class);
  assertCalculatedRoles(new String[]{"ROLE_NEW"});
  form.submit("save");
  tester.assertErrorMessages(new String[0]);
  GeoServerUser user=ugService.getUserByUsername("user1");
  assertNotNull(user);
  assertFalse(user.isEnabled());
  SortedSet<GeoServerUserGroup> groupList=ugService.getGroupsForUser(user);
  assertEquals(1,groupList.size());
  assertTrue(groupList.contains(ugService.getGroupByGroupname("testgroup")));
  SortedSet<GeoServerRole> roleList=gaService.getRolesForUser("user1");
  assertEquals(1,roleList.size());
  assertTrue(roleList.contains(gaService.getRoleByName("ROLE_NEW")));
}
