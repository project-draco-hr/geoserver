{
  KeyStoreProvider ksp=getSecurityManager().getKeyStoreProvider();
  ksp.removeKey(KeyStoreProviderImpl.CONFIGPASSWORDKEY);
  ksp.removeKey(ksp.aliasForGroupService("default"));
  ksp.storeKeyStore();
  ksp.reloadKeyStore();
  assertFalse(ksp.hasConfigPasswordKey());
  assertFalse(ksp.hasUserGroupKey("default"));
  ksp.setSecretKey(KeyStoreProviderImpl.CONFIGPASSWORDKEY,"configKey".toCharArray());
  ksp.storeKeyStore();
  assertTrue(ksp.hasConfigPasswordKey());
  assertEquals("configKey",new String(ksp.getConfigPasswordKey()));
  assertFalse(ksp.hasUserGroupKey("default"));
  RandomPasswordProvider rpp=getSecurityManager().getRandomPassworddProvider();
  char[] urlKey=rpp.getRandomPasswordWithDefaultLength();
  char[] urlKey2=rpp.getRandomPasswordWithDefaultLength();
  assertFalse(urlKey.equals(urlKey2));
  ksp.setSecretKey(KeyStoreProviderImpl.USERGROUP_PREFIX + "default" + KeyStoreProviderImpl.USERGROUP_POSTFIX,"defaultKey".toCharArray());
  ksp.storeKeyStore();
  assertTrue(ksp.hasConfigPasswordKey());
  assertEquals("configKey",new String(ksp.getConfigPasswordKey()));
  assertTrue(ksp.hasUserGroupKey("default"));
  assertEquals("defaultKey",new String(ksp.getUserGroupKey("default")));
  assertTrue(ksp.isKeyStorePassword(getSecurityManager().getMasterPassword()));
  assertFalse(ksp.isKeyStorePassword("blabla".toCharArray()));
}
