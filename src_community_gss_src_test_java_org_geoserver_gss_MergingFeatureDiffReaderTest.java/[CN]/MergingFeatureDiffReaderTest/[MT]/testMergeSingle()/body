{
  VersioningFeatureStore restricted=(VersioningFeatureStore)synchStore.getFeatureSource("restricted");
  SimpleFeatureType schema=restricted.getSchema();
  Id updateFilter=ff.id(singleton(ff.featureId("restricted.be7cafea-d0b7-4257-9b9c-1ed3de3f7ef4")));
  restricted.modifyFeatures(schema.getDescriptor("cat"),-48,updateFilter);
  Id removeFilter=ff.id(singleton(ff.featureId("restricted.d91fe390-bdc7-4b22-9316-2cd6c8737ef5")));
  restricted.removeFeatures(removeFilter);
  WKTReader wkt=new WKTReader();
  SimpleFeature f=SimpleFeatureBuilder.build(schema,new Object[]{123,wkt.read("POLYGON((0 0, 0 10, 10 10, 10 0, 0 0))")},null);
  restricted.addFeatures(collection(f));
  FeatureDiffReader reader=restricted.getDifferences("FIRST","LAST",null,null);
  FeatureDiffReader reader2=restricted.getDifferences("FIRST","LAST",null,null);
  MergingFeatureDiffReader merge=new MergingFeatureDiffReader(reader2);
  int count=0;
  Set<Integer> states=new HashSet<Integer>();
  while (reader.hasNext()) {
    assertTrue(merge.hasNext());
    FeatureDiff fd=reader.next();
    FeatureDiff fdm=merge.next();
    assertEquals(fd,fdm);
    count++;
    states.add(fd.getState());
  }
  reader.close();
  merge.close();
  assertEquals(3,count);
  assertEquals(3,states.size());
}
