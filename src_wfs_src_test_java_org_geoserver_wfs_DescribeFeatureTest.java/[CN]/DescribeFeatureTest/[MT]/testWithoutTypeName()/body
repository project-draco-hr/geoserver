{
  Document doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.0.0");
  NodeList nl=doc.getElementsByTagName("xsd:import");
  assertEquals(3,nl.getLength());
  HashMap<String,HashMap<String,String>> imprts=new HashMap();
  for (int i=0; i < nl.getLength(); i++) {
    Element imprt=(Element)nl.item(i);
    String namespace=imprt.getAttribute("namespace");
    String schemaLocation=imprt.getAttribute("schemaLocation");
    int query=schemaLocation.indexOf("?");
    schemaLocation=schemaLocation.substring(query + 1);
    String[] sp=schemaLocation.split("&");
    HashMap params=new HashMap();
    for (int j=0; j < sp.length; j++) {
      String[] sp1=sp[j].split("=");
      params.put(sp1[0].toLowerCase(),sp1[1].toLowerCase());
    }
    imprts.put(namespace,params);
  }
  String[] expected=new String[]{MockData.SF_URI,MockData.CDF_URI,MockData.CGF_URI};
  for (  String namespace : expected) {
    assertNotNull(imprts.get(namespace));
    HashMap params=imprts.get(namespace);
    assertEquals("wfs",params.get("service"));
    assertEquals("1.0.0",params.get("version"));
    assertEquals("describefeaturetype",params.get("request"));
    String types=(String)params.get("typename");
    assertNotNull(types);
    Catalog cat=getCatalog();
    NamespaceInfo ns=cat.getNamespaceByURI(namespace);
    System.out.println(ns.getPrefix());
    assertEquals(cat.getFeatureTypesByNamespace(ns).size(),types.split("%2c").length);
  }
}
