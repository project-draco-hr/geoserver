{
  if (s == null) {
    throw new IllegalArgumentException("The String to parse may not be null.");
  }
  if (separator == '\\') {
    throw new IllegalArgumentException("The separator may not be a backslash.");
  }
  if (maxTokens <= 0) {
    maxTokens=Integer.MAX_VALUE;
  }
  List<String> ret=new ArrayList<String>();
  StringBuilder sb=new StringBuilder();
  boolean escaped=false;
  int tokenCount=1;
  for (int i=0; i < s.length(); i++) {
    char c=s.charAt(i);
    if (c == separator && !escaped && tokenCount < maxTokens) {
      ret.add(sb.toString());
      sb.setLength(0);
      tokenCount++;
    }
 else {
      if (escaped) {
        escaped=false;
        sb.append('\\');
        sb.append(c);
      }
 else       if (c == '\\') {
        escaped=true;
      }
 else {
        sb.append(c);
      }
    }
  }
  if (escaped) {
    throw new IllegalStateException("The specified String ends with an incomplete escape sequence.");
  }
  ret.add(sb.toString());
  return ret;
}
