{
  if (LOGGER.isLoggable(Level.FINEST)) {
    LOGGER.finest("reading nested: " + rawList);
  }
  List kvpList=new ArrayList(10);
  if (rawList == null) {
    if (LOGGER.isLoggable(Level.FINEST)) {
      LOGGER.finest("found implicit all requested");
    }
    kvpList.add(Collections.EMPTY_LIST);
    return kvpList;
  }
 else   if (rawList.equals("*")) {
    if (LOGGER.isLoggable(Level.FINEST)) {
      LOGGER.finest("found explicit all requested");
    }
    kvpList.add(Collections.EMPTY_LIST);
    return kvpList;
  }
 else {
    if (LOGGER.isLoggable(Level.FINEST)) {
      LOGGER.finest("found explicit requested");
    }
    if (rawList.startsWith("(")) {
      if (LOGGER.isLoggable(Level.FINEST)) {
        LOGGER.finest("reading complex list");
      }
      List outerList=readFlat(rawList,OUTER_DELIMETER);
      Iterator i=outerList.listIterator();
      while (i.hasNext()) {
        kvpList.add(readFlat((String)i.next(),INNER_DELIMETER));
      }
    }
 else {
      if (LOGGER.isLoggable(Level.FINEST)) {
        LOGGER.finest("reading simple list");
      }
      kvpList.add(readFlat(rawList,INNER_DELIMETER));
    }
    return kvpList;
  }
}
