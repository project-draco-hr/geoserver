{
  GeoServerHomePage page=new GeoServerHomePage();
  tester.startPage(page);
  tester.assertRenderedPage(GeoServerHomePage.class);
  Page lastPage=tester.getLastRenderedPage();
  final List<String> services=new ArrayList<String>();
  lastPage.visitChildren(ExternalLink.class,new IVisitor<ExternalLink>(){
    @Override public Object component(    ExternalLink component){
      String url=(String)component.getDefaultModelObject();
      if (url != null) {
        if (url.startsWith("../gwc/service/")) {
          int idx=url.indexOf("?");
          String service;
          if (idx > 0) {
            service=url.substring("./gwc/service/".length() + 1,idx);
          }
 else {
            service=url.substring("./gwc/service/".length() + 1);
          }
          if (service != null) {
            services.add(service);
          }
        }
 else         if (url.contains("GetCapabilities")) {
          Map<String,Object> params=KvpUtils.parseQueryString(url);
          String service=(String)params.get("service");
          if (service != null) {
            services.add(service);
          }
        }
      }
      return IVisitor.CONTINUE_TRAVERSAL;
    }
  }
);
  assertFalse(services.contains("gwc"));
  assertTrue(services.contains("wmts"));
  assertTrue(services.contains("wms"));
  assertTrue(services.contains("tms/1.0.0"));
}
