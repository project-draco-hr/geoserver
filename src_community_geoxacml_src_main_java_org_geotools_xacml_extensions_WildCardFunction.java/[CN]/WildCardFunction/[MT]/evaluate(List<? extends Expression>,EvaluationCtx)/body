{
  AttributeValue[] argValues=new AttributeValue[inputs.size()];
  EvaluationResult result=evalArgs(inputs,context,argValues);
  if (result != null)   return result;
  boolean boolResult=false;
switch (getFunctionId()) {
case ID_STRING_WILDCARD_MATCH:
{
      String arg0=((StringAttribute)(argValues[0])).getValue();
      String arg1=((StringAttribute)(argValues[1])).getValue();
      boolResult=wildCardMatch(arg0,arg1);
      break;
    }
case ID_ANYURI_WILDCARD_MATCH:
{
    String arg0=((StringAttribute)(argValues[0])).getValue();
    String arg1=((AnyURIAttribute)(argValues[1])).encode();
    boolResult=wildCardMatch(arg0,arg1);
    break;
  }
case ID_IPADDRESS_WILDCARD_MATCH:
{
  String arg0=((StringAttribute)(argValues[0])).getValue();
  String arg1=((IPAddressAttribute)(argValues[1])).encode();
  boolResult=wildCardMatch(arg0,arg1);
  break;
}
case ID_DNSNAME_WILDCARD_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((DNSNameAttribute)(argValues[1])).encode();
boolResult=wildCardMatch(arg0,arg1);
break;
}
case ID_RFC822NAME_WILDCARD_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((RFC822NameAttribute)(argValues[1])).encode();
boolResult=wildCardMatch(arg0,arg1);
break;
}
case ID_X500NAME_WILDCARD_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((X500NameAttribute)(argValues[1])).encode();
boolResult=wildCardMatch(arg0,arg1);
break;
}
}
return EvaluationResult.getInstance(boolResult);
}
