{
  setMockCreator(new MockCreator(){
    @Override public GeoServerSecurityManager createSecurityManager(    MockTestData testData) throws Exception {
      GeoServerSecurityManager secMgr=createNiceMock(GeoServerSecurityManager.class);
      GeoServerRoleStore roleStore=createRoleStore("test",secMgr,"admin","groupAdmin","role1");
      addRolesToCreate(roleStore,"admin","groupAdmin");
      expect(roleStore.getAdminRole()).andReturn(new GeoServerRole("admin")).anyTimes();
      expect(roleStore.getGroupAdminRole()).andReturn(new GeoServerRole("groupAdmin")).anyTimes();
      replay(roleStore,secMgr);
      return secMgr;
    }
  }
);
  GeoServerSecurityManager secMgr=getSecurityManager();
  RoleStoreValidationWrapper store=new RoleStoreValidationWrapper((GeoServerRoleStore)secMgr.loadRoleService("test"));
  try {
    store.removeRole(store.createRoleObject("admin"));
    fail("removing admin role should fail");
  }
 catch (  IOException ex) {
    assertSecurityException(ex,ADMIN_ROLE_NOT_REMOVABLE_$1,"admin");
  }
  try {
    store.removeRole(store.createRoleObject("groupAdmin"));
    fail("removing group admin role should fail");
  }
 catch (  IOException ex) {
    assertSecurityException(ex,GROUP_ADMIN_ROLE_NOT_REMOVABLE_$1,"groupAdmin");
  }
}
