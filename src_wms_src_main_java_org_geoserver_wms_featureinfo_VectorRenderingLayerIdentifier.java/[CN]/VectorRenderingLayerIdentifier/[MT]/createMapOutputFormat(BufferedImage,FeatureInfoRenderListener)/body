{
  return new RenderedImageMapOutputFormat(wms){
    private Graphics2D graphics;
    @Override protected RenderedImage prepareImage(    int width,    int height,    IndexColorModel palette,    boolean transparent){
      return image;
    }
    @Override protected Graphics2D getGraphics(    boolean transparent,    Color bgColor,    RenderedImage preparedImage,    Map<Key,Object> hintsMap){
      graphics=super.getGraphics(transparent,bgColor,preparedImage,hintsMap);
      return graphics;
    }
    @Override protected void onBeforeRender(    StreamingRenderer renderer){
      Map hints=renderer.getRendererHints();
      hints.put(StreamingRenderer.OPTIMIZE_FTS_RENDERING_KEY,Boolean.FALSE);
      hints.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_OFF);
      featureInfoListener.setGraphics(graphics);
      featureInfoListener.setRenderer(renderer);
      renderer.addRenderListener(featureInfoListener);
    }
  }
;
}
