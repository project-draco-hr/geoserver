{
  HashMap kvp=new HashMap();
  kvp.put("layers","testGroup2");
  kvp.put("interpolations","bicubic");
  GetMapRequest request=(GetMapRequest)reader.createRequest();
  request=(GetMapRequest)reader.read(request,parseKvp(kvp),caseInsensitiveKvp(kvp));
  assertNotNull(request.getInterpolations());
  assertEquals(2,request.getInterpolations().size());
  assertNotNull(request.getInterpolations().get(0));
  assertTrue(request.getInterpolations().get(0) instanceof InterpolationBicubic);
  assertNotNull(request.getInterpolations().get(1));
  assertTrue(request.getInterpolations().get(1) instanceof InterpolationBicubic);
  kvp.put("layers","testGroup2,testGroup," + getLayerId(MockData.BASIC_POLYGONS));
  kvp.put("interpolations","bicubic,bilinear,nearest neighbor");
  request=(GetMapRequest)reader.createRequest();
  request=(GetMapRequest)reader.read(request,parseKvp(kvp),caseInsensitiveKvp(kvp));
  assertNotNull(request.getInterpolations());
  assertEquals(4,request.getInterpolations().size());
  assertNotNull(request.getInterpolations().get(0));
  assertTrue(request.getInterpolations().get(0) instanceof InterpolationBicubic);
  assertNotNull(request.getInterpolations().get(1));
  assertTrue(request.getInterpolations().get(1) instanceof InterpolationBicubic);
  assertNotNull(request.getInterpolations().get(2));
  assertTrue(request.getInterpolations().get(2) instanceof InterpolationBilinear);
  assertNotNull(request.getInterpolations().get(3));
  assertTrue(request.getInterpolations().get(3) instanceof InterpolationNearest);
  kvp.put("layers","testGroup2,testGroup," + getLayerId(MockData.BASIC_POLYGONS));
  kvp.put("interpolations",",bilinear");
  request=(GetMapRequest)reader.createRequest();
  request=(GetMapRequest)reader.read(request,parseKvp(kvp),caseInsensitiveKvp(kvp));
  assertNotNull(request.getInterpolations());
  assertEquals(4,request.getInterpolations().size());
  assertNull(request.getInterpolations().get(0));
  assertNull(request.getInterpolations().get(1));
  assertNotNull(request.getInterpolations().get(2));
  assertTrue(request.getInterpolations().get(2) instanceof InterpolationBilinear);
  assertNull(request.getInterpolations().get(3));
}
