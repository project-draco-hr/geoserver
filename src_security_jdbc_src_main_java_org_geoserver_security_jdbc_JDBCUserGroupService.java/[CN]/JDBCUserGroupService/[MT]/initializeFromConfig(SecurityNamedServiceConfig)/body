{
  this.name=config.getName();
  passwordEncoderName=((SecurityUserGroupServiceConfig)config).getPasswordEncoderName();
  passwordValidatorName=((SecurityUserGroupServiceConfig)config).getPasswordPolicyName();
  initializeDSFromConfig(config);
  if (config instanceof JDBCUserGroupServiceConfig) {
    JDBCUserGroupServiceConfig jdbcConfig=(JDBCUserGroupServiceConfig)config;
    String fileNameDML=jdbcConfig.getPropertyFileNameDML();
    Resource file=checkORCreateJDBCPropertyFile(fileNameDML,getConfigRoot(),DEFAULT_DML_FILE);
    dmlProps=Util.loadUniversal(file.in());
    String fileNameDDL=jdbcConfig.getPropertyFileNameDDL();
    if (fileNameDDL != null && fileNameDDL.length() > 0) {
      file=checkORCreateJDBCPropertyFile(fileNameDDL,getConfigRoot(),DEFAULT_DDL_FILE);
      ddlProps=Util.loadUniversal(file.in());
      createTablesIfRequired((JDBCSecurityServiceConfig)config);
    }
    GeoServerPasswordEncoder enc=getSecurityManager().loadPasswordEncoder(passwordEncoderName);
    if (enc.getEncodingType() == PasswordEncodingType.ENCRYPT) {
      KeyStoreProvider prov=getSecurityManager().getKeyStoreProvider();
      String alias=prov.aliasForGroupService(name);
      if (prov.containsAlias(alias) == false) {
        prov.setUserGroupKey(name,getSecurityManager().getRandomPassworddProvider().getRandomPasswordWithDefaultLength());
        prov.storeKeyStore();
      }
    }
    enc.initializeFor(this);
    passwordValidatorName=jdbcConfig.getPasswordPolicyName();
  }
}
