{
  Connection con=null;
  PreparedStatement ps=null, ps2=null;
  ResultSet rs=null, rs2=null;
  Map<String,GeoServerUser> map=new HashMap<String,GeoServerUser>();
  try {
    con=getConnection();
    ps=getDMLStatement("groupmembers.usersForGroup",con);
    ps.setString(1,group.getGroupname());
    rs=ps.executeQuery();
    while (rs.next()) {
      String username=rs.getString(1);
      String password=rs.getString(2);
      String enabledString=rs.getString(3);
      boolean isEnabled=convertFromString(enabledString);
      GeoServerUser u=createUserObject(username,password,isEnabled);
      map.put(username,u);
    }
    rs.close();
    ps.close();
    ps=getDMLStatement("userprops.userPropsForGroup",con);
    ps.setString(1,group.getGroupname());
    rs=ps.executeQuery();
    while (rs.next()) {
      String userName=rs.getString(1);
      String propName=rs.getString(2);
      Object propValue=rs.getObject(3);
      GeoServerUser u=map.get(userName);
      if (u != null) {
        u.getProperties().put(propName,propValue == null ? "" : propValue);
      }
    }
  }
 catch (  SQLException ex) {
    throw new IOException(ex);
  }
 finally {
    closeFinally(null,ps2,rs2);
    closeFinally(con,ps,rs);
  }
  TreeSet<GeoServerUser> users=new TreeSet<GeoServerUser>();
  users.addAll(map.values());
  return Collections.unmodifiableSortedSet(users);
}
