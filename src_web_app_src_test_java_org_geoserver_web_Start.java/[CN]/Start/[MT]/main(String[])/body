{
  final Server jettyServer=new Server();
  try {
    SocketConnector conn=new SocketConnector();
    String portVariable=System.getProperty("jetty.port");
    int port=parsePort(portVariable);
    if (port <= 0)     port=8080;
    conn.setPort(port);
    conn.setAcceptQueueSize(100);
    conn.setMaxIdleTime(1000 * 60 * 60);
    conn.setSoLingerTime(-1);
    jettyServer.setConnectors(new Connector[]{conn});
    WebAppContext wah=new WebAppContext();
    wah.setContextPath("/geoserver");
    wah.setWar("src/main/webapp");
    jettyServer.setHandler(wah);
    wah.setTempDirectory(new File("target/work"));
    wah.getServletContext().getContextHandler().setMaxFormContentSize(1024 * 1024 * 2);
    String jettyConfigFile=System.getProperty("jetty.config.file");
    if (jettyConfigFile != null) {
      log.info("Loading Jetty config from file: " + jettyConfigFile);
      (new XmlConfiguration(new FileInputStream(jettyConfigFile))).configure(jettyServer);
    }
    jettyServer.start();
    Thread stopThread=new Thread(){
      @Override public void run(){
        BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));
        String line;
        try {
          while (true) {
            line=reader.readLine();
            if ("stop".equals(line)) {
              jettyServer.stop();
              System.exit(0);
            }
          }
        }
 catch (        Exception e) {
          e.printStackTrace();
          System.exit(1);
        }
      }
    }
;
    stopThread.setDaemon(true);
    stopThread.run();
  }
 catch (  Exception e) {
    log.log(Level.SEVERE,"Could not start the Jetty server: " + e.getMessage(),e);
    if (jettyServer != null) {
      try {
        jettyServer.stop();
      }
 catch (      Exception e1) {
        log.log(Level.SEVERE,"Unable to stop the " + "Jetty server:" + e1.getMessage(),e1);
      }
    }
  }
}
