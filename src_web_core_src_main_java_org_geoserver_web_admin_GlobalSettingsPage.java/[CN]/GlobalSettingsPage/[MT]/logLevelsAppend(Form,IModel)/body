{
  GeoServerResourceLoader loader=GeoServerApplication.get().getBeanOfType(GeoServerResourceLoader.class);
  List<String> logProfiles=null;
  try {
    File logsDirectory=loader.find("logs");
    if (logsDirectory.exists() && logsDirectory.isDirectory()) {
      String[] propFiles=logsDirectory.list(new FilenameFilter(){
        public boolean accept(        File dir,        String name){
          return name.toLowerCase().endsWith("logging.properties");
        }
      }
);
      logProfiles=Arrays.asList(propFiles);
      Collections.sort(logProfiles,String.CASE_INSENSITIVE_ORDER);
    }
  }
 catch (  Exception e) {
    LOGGER.log(Level.WARNING,"Could not load the list of log configurations from the data directory",e);
  }
  if (logProfiles == null || logProfiles.size() == 0)   logProfiles=DEFAULT_LOG_PROFILES;
  form.add(new ListChoice("log4jConfigFile",new PropertyModel(loggingInfoModel,"level"),logProfiles));
}
