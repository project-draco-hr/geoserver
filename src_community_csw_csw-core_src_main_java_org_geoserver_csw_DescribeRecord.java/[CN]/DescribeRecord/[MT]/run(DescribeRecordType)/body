{
  try {
    if (request.getSchemaLanguage() != null && !SUPPORTED_SCHEMA_LANGUAGES.contains(request.getSchemaLanguage())) {
      throw new ServiceException("Unsupported schema language " + request.getSchemaLanguage(),ServiceException.INVALID_PARAMETER_VALUE,"schemaLanguage");
    }
    if (request.getTypeName() == null || request.getTypeName().isEmpty()) {
      return store.getRecordSchemas();
    }
 else {
      List<FeatureType> result=new ArrayList<FeatureType>();
      Set<QName> requested=new HashSet(request.getTypeName());
      FeatureType[] schemas=store.getRecordSchemas();
      for (      FeatureType featureType : schemas) {
        QName typeName=new QName(featureType.getName().getNamespaceURI(),featureType.getName().getLocalPart());
        if (requested.remove(typeName)) {
          result.add(featureType);
        }
      }
      if (requested.size() != 0) {
        LOGGER.log(Level.FINE,"Failed to locate feature types " + requested + ", ignoring them");
      }
      return (FeatureType[])result.toArray(new FeatureType[result.size()]);
    }
  }
 catch (  IOException e) {
    throw new ServiceException("Failed to retrieve the feature type schemas",ServiceException.NO_APPLICABLE_CODE);
  }
}
