{
  StyleFactory sfact=CommonFactoryFinder.getStyleFactory();
  FilterFactory ffact=CommonFactoryFinder.getFilterFactory();
  Mark m=sfact.mark(ffact.literal("circle"),sfact.fill(null,ffact.literal("#FF0000"),null),sfact.stroke(ffact.literal("#000000"),null,ffact.literal(1),null,null,null,null));
  Graphic g=sfact.graphic(Arrays.asList((GraphicalSymbol)m),Expression.NIL,Expression.NIL,Expression.NIL,null,null);
  Symbolizer symb=sfact.pointSymbolizer(null,ffact.property(null),null,null,g);
  Rule r=sfact.rule(null,null,null,Float.NEGATIVE_INFINITY,Float.POSITIVE_INFINITY,Arrays.asList(symb),null);
  FeatureTypeStyle fts=sfact.featureTypeStyle(null,null,null,Collections.<Name>emptySet(),Collections.<SemanticType>emptySet(),Arrays.asList(r));
  Style s=sfact.style(null,null,true,Arrays.asList(fts),null);
  BufferedImage img=IconRenderer.renderIcon((org.geotools.styling.Style)s);
  final int size=(16 + 1 + 1) * 4 + 1;
  assertEquals(size,img.getHeight());
  assertEquals(size,img.getWidth());
  BufferedImage expected=ImageIO.read(getClass().getClassLoader().getResource("circle-red-16-x4.png"));
  ImageAssert.assertEquals(expected,img,THRESHOLD);
}
