{
  Future<Map<String,Object>> future=executions.get(executionId);
  if (future == null) {
    return null;
  }
  boolean timedOut=false;
  try {
    Map<String,Object> result;
    if (timeout <= 0) {
      result=future.get();
    }
 else {
      result=future.get(timeout,TimeUnit.MILLISECONDS);
    }
    return result;
  }
 catch (  TimeoutException e) {
    timedOut=true;
    throw new ProcessException(e);
  }
catch (  Exception e) {
    if (e instanceof ExecutionException && e.getCause() instanceof Exception) {
      e=(Exception)e.getCause();
    }
    if (e instanceof ProcessException) {
      throw (ProcessException)e;
    }
 else {
      throw new ProcessException("Process execution " + executionId + " failed",e);
    }
  }
 finally {
    if (!timedOut) {
      executions.remove(executionId);
    }
  }
}
