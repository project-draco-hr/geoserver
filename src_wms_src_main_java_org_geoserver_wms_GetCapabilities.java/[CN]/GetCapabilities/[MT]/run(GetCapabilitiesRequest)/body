{
  final Version version=WMS.version(request.getVersion());
  if (version == null) {
    throw new IllegalArgumentException("version not supplied.");
  }
  long reqUS=-1;
  if (request.getUpdateSequence() != null && !"".equals(request.getUpdateSequence().trim())) {
    try {
      reqUS=Long.parseLong(request.getUpdateSequence());
    }
 catch (    NumberFormatException nfe) {
      throw new ServiceException("GeoServer only accepts numbers in the updateSequence parameter");
    }
  }
  long geoUS=wms.getUpdateSequence();
  if (reqUS > geoUS) {
    throw new ServiceException("Client supplied an updateSequence that is greater than the current server updateSequence","InvalidUpdateSequence");
  }
  if (reqUS == geoUS) {
    throw new ServiceException("WMS capabilities document is current (updateSequence = " + geoUS + ")","CurrentUpdateSequence");
  }
  Set<String> legendFormats=wms.getAvailableLegendGraphicsFormats();
  TransformerBase transformer;
  String baseUrl=request.getBaseUrl();
  if (WMS.VERSION_1_1_1.equals(version)) {
    Set<String> mapFormats=wms.getAllowedMapFormatNames();
    List<ExtendedCapabilitiesProvider> extCapsProviders;
    extCapsProviders=wms.getAvailableExtendedCapabilitiesProviders();
    transformer=new GetCapabilitiesTransformer(wms,baseUrl,mapFormats,legendFormats,extCapsProviders);
  }
 else   if (WMS.VERSION_1_3_0.equals(version)) {
    Collection<GetMapOutputFormat> mapFormats=wms.getAllowedMapFormats();
    Collection<ExtendedCapabilitiesProvider> extCapsProviders=wms.getAvailableExtendedCapabilitiesProviders();
    transformer=new Capabilities_1_3_0_Transformer(wms,baseUrl,mapFormats,extCapsProviders);
  }
 else {
    throw new IllegalArgumentException("Unknown version: " + version);
  }
  return transformer;
}
