{
  if (info instanceof LayerGroupInfo) {
    final LayerGroupInfo deserObject=CatalogUtils.localizeLayerGroup((LayerGroupInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(deserObject));
  }
 else   if (info instanceof LayerInfo) {
    final LayerInfo layer=CatalogUtils.localizeLayer((LayerInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(layer));
  }
 else   if (info instanceof MapInfo) {
    final MapInfo localObject=CatalogUtils.localizeMapInfo((MapInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(localObject));
  }
 else   if (info instanceof NamespaceInfo) {
    final NamespaceInfo namespace=CatalogUtils.localizeNamespace((NamespaceInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(namespace));
  }
 else   if (info instanceof StoreInfo) {
    StoreInfo store=CatalogUtils.localizeStore((StoreInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(store));
  }
 else   if (info instanceof ResourceInfo) {
    final ResourceInfo resource=CatalogUtils.localizeResource((ResourceInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(resource));
  }
 else   if (info instanceof StyleInfo) {
    final StyleInfo deserializedObject=CatalogUtils.localizeStyle((StyleInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(deserializedObject));
  }
 else   if (info instanceof WorkspaceInfo) {
    final WorkspaceInfo workspace=CatalogUtils.localizeWorkspace((WorkspaceInfo)info,catalog);
    catalog.add(ModificationProxy.unwrap(workspace));
  }
 else   if (info instanceof CatalogInfo) {
    if (LOGGER.isLoggable(Level.SEVERE)) {
      LOGGER.severe("info - ID: " + info.getId() + " toString: "+ info.toString());
    }
  }
 else {
    throw new IllegalArgumentException("Bad incoming object: " + info.getClass());
  }
}
