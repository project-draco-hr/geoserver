{
  super(id);
  LayerProvider provider=new LayerProvider(demo);
  GeoServerTablePanel<LayerInfo> table=new GeoServerTablePanel<LayerInfo>("layer.table",provider){
    private static final long serialVersionUID=1196129584558094662L;
    @Override public Component getComponentForProperty(    String id,    IModel<LayerInfo> value,    Property<LayerInfo> property){
      final LayerInfo layer=(LayerInfo)value.getObject();
      final String text=property.getPropertyValue(layer).toString();
      if (property == LayerProvider.name) {
        return new Fragment(id,"layer.link",LayerChooser.this){
          private static final long serialVersionUID=-7619814477490657757L;
{
            add(new AjaxLink<Object>("link"){
              private static final long serialVersionUID=-986789496671734252L;
{
                add(new Label("layer.name",new Model<String>(text)));
              }
              @Override public void onClick(              AjaxRequestTarget target){
                PageParameters params=new PageParameters();
                params.add("layer",layer.prefixedName());
                WorkspaceInfo workspace=demo.getStyleInfo().getWorkspace();
                if (workspace == null) {
                  params.add("style",demo.getStyleInfo().getName());
                }
 else {
                  params.add("style",workspace.getName() + ":" + demo.getStyleInfo().getName());
                }
                setResponsePage(CssDemoPage.class,params);
              }
            }
);
          }
        }
;
      }
 else {
        return new Label(id,text);
      }
    }
  }
;
  add(table);
}
