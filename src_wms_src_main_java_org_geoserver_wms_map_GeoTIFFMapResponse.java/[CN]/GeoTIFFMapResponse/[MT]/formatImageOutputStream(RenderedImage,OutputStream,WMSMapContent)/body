{
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.fine("Writing tiff image ...");
  }
  image=applyPalette(image,mapContent,IMAGE_GEOTIFF8,false);
  GridCoverage2D gc=factory.create("geotiff",image,new GeneralEnvelope(mapContent.getRenderingArea()));
  if (image instanceof PlanarImage) {
    Map properties=gc.getProperties();
    if (properties == null) {
      properties=new HashMap();
    }
    Object property=((PlanarImage)image).getProperty(NoDataContainer.GC_NODATA);
    if (property != null) {
      CoverageUtilities.setNoDataProperty(properties,property);
      gc=factory.create(gc.getName(),gc.getRenderedImage(),gc.getEnvelope(),gc.getSampleDimensions(),null,properties);
    }
  }
  final ImageOutputStream imageOutStream=ImageIOExt.createImageOutputStream(image,outStream);
  if (imageOutStream == null) {
    throw new ServiceException("Unable to create ImageOutputStream.");
  }
  GeoTiffWriter writer=null;
  try {
    writer=new GeoTiffWriter(imageOutStream);
    writer.write(gc,null);
  }
  finally {
    try {
      imageOutStream.close();
    }
 catch (    Throwable e) {
      if (LOGGER.isLoggable(Level.FINEST))       LOGGER.log(Level.FINEST,"Unable to properly close output stream",e);
    }
    try {
      if (writer != null)       writer.dispose();
    }
 catch (    Throwable e) {
      if (LOGGER.isLoggable(Level.FINEST))       LOGGER.log(Level.FINEST,"Unable to properly dispose writer",e);
    }
    RasterCleaner.addCoverage(gc);
  }
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.fine("Writing tiff image done!");
  }
}
