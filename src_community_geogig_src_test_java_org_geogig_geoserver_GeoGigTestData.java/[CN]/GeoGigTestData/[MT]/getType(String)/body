{
  Context context=geogig.getContext();
  List<NodeRef> featureTypeTrees=context.workingTree().getFeatureTypeTrees();
  List<String> treeNames=Lists.transform(featureTypeTrees,new Function<NodeRef,String>(){
    @Override public String apply(    NodeRef input){
      return input.path();
    }
  }
);
  for (int i=0; i < treeNames.size(); i++) {
    String treeName=treeNames.get(i);
    if (treeName.equals(parentTreePath)) {
      ObjectId metadataId=featureTypeTrees.get(i).getMetadataId();
      RevFeatureType revType=((Optional<RevFeatureType>)run(geogig.command(RevObjectParse.class).setObjectId(metadataId))).get();
      SimpleFeatureType featureType=(SimpleFeatureType)revType.type();
      return featureType;
    }
  }
  throw new IllegalArgumentException(String.format("No tree path named '%s' exists: %s",parentTreePath,treeNames));
}
