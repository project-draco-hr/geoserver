{
  Rule[] rules=featureTypeStyle.getRules();
  if ((rules == null) || (rules.length == 0)) {
    return new Rule[0];
  }
  List<Rule> filtered=new ArrayList<Rule>(rules.length);
  boolean match=false;
  boolean hasElseFilter=false;
  for (int i=0; i < rules.length; i++) {
    Rule rule=rules[i];
    LOGGER.finer(new StringBuffer("Applying rule: ").append(rule.toString()).toString());
    if (rule.hasElseFilter()) {
      hasElseFilter=true;
      continue;
    }
    Filter filter=rule.getFilter();
    if ((filter == null) || filter.evaluate(feature)) {
      match=true;
      filtered.add(rule);
    }
  }
  if (!match && hasElseFilter) {
    for (int i=0; i < rules.length; i++) {
      Rule rule=rules[i];
      if (rule.hasElseFilter()) {
        filtered.add(rule);
      }
    }
  }
  return (Rule[])filtered.toArray(new Rule[filtered.size()]);
}
