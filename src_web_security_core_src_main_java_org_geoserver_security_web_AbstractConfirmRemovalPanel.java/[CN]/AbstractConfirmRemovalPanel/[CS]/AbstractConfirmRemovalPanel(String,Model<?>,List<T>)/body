{
  super(id,model);
  setRootObjectsAndProblems(rootObjects);
  WebMarkupContainer root=new WebMarkupContainer("rootObjects");
  add(root);
  WebMarkupContainer removed=new WebMarkupContainer("removedObjects");
  add(removed);
  WebMarkupContainer rulesRemoved=new WebMarkupContainer("rulesRemoved");
  removed.add(rulesRemoved);
  if (roots.size() == 0)   removed.setVisible(false);
 else {
    rulesRemoved.add(new ListView<String>("rules",names(roots)){
      @Override protected void populateItem(      ListItem<String> item){
        item.add(new Label("name",item.getModelObject()));
      }
    }
);
  }
  WebMarkupContainer problematic=new WebMarkupContainer("problematicObjects");
  add(problematic);
  WebMarkupContainer rulesNotRemoved=new WebMarkupContainer("rulesNotRemoved");
  problematic.add(rulesNotRemoved);
  if (problems.size() == 0)   problematic.setVisible(false);
 else {
    rulesNotRemoved.add(new ListView<String>("problems",problems(problems)){
      @Override protected void populateItem(      ListItem<String> item){
        item.add(new Label("name",item.getModelObject()));
      }
    }
);
  }
}
