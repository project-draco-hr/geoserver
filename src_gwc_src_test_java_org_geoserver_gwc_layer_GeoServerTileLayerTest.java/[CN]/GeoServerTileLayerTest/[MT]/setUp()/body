{
  final String layerInfoId="mock-layer-info";
  NamespaceInfo ns=new NamespaceInfoImpl();
  ns.setPrefix("test");
  ns.setURI("http://goserver.org/test");
  DataStoreInfoImpl storeInfo=new DataStoreInfoImpl(null);
  storeInfo.setId("mock-store-info");
  storeInfo.setEnabled(true);
  FeatureTypeInfoImpl resource=new FeatureTypeInfoImpl((Catalog)null);
  resource.setStore(storeInfo);
  resource.setId("mock-resource-info");
  resource.setName("MockLayerInfoName");
  resource.setNamespace(ns);
  resource.setTitle("Test resource title");
  resource.setAbstract("Test resource abstract");
  resource.setEnabled(true);
  resource.setDescription("Test resource description");
  resource.setLatLonBoundingBox(new ReferencedEnvelope(-180,-90,0,0,DefaultGeographicCRS.WGS84));
  resource.setNativeBoundingBox(new ReferencedEnvelope(-180,-90,0,0,DefaultGeographicCRS.WGS84));
  resource.setSRS("EPSG:4326");
  resource.setKeywords(Arrays.asList("kwd1","kwd2"));
  layerInfo=new LayerInfoImpl();
  layerInfo.setId(layerInfoId);
  layerInfo.setEnabled(true);
  layerInfo.setResource(resource);
  layerInfo.setName("MockLayerInfoName");
  layerInfo.setType(Type.VECTOR);
  StyleInfo defaultStyle=new StyleInfoImpl(null);
  defaultStyle.setName("default_style");
  layerInfo.setDefaultStyle(defaultStyle);
  StyleInfo alternateStyle1=new StyleInfoImpl(null);
  alternateStyle1.setName("alternateStyle-1");
  StyleInfo alternateStyle2=new StyleInfoImpl(null);
  alternateStyle2.setName("alternateStyle-2");
  Set<StyleInfo> alternateStyles=new HashSet<StyleInfo>(Arrays.asList(alternateStyle1,alternateStyle2));
  layerInfo.setStyles(alternateStyles);
  layerGroup=new LayerGroupInfoImpl();
  final String layerGroupId="mock-layergroup-id";
  layerGroup.setId(layerGroupId);
  layerGroup.setName("MockLayerGroup");
  layerGroup.setLayers(Collections.singletonList((LayerInfo)layerInfo));
  defaultSettings=GWCConfig.getOldDefaults();
  catalogConfig=mock(CatalogConfiguration.class);
  when(catalogConfig.getConfig()).thenReturn(defaultSettings);
  when(catalogConfig.getLayerInfoById(eq(layerInfoId))).thenReturn(layerInfo);
  when(catalogConfig.getLayerGroupById(eq(layerGroupId))).thenReturn(layerGroup);
  GridSetBroker gridSetBroker=new GridSetBroker(true,true);
  gridSetBroker.put(gridSetBroker.WORLD_EPSG4326);
  gridSetBroker.put(gridSetBroker.WORLD_EPSG3857);
  when(catalogConfig.getGridSetBroker()).thenReturn(gridSetBroker);
}
