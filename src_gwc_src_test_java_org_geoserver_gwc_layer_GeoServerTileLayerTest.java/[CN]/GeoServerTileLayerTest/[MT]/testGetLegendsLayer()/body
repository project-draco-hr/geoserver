{
  setupUrlContext();
  LegendSample legendSample=mock(LegendSample.class);
  when(legendSample.getLegendURLSize(any(StyleInfo.class))).thenReturn(new Dimension(120,150));
  WMS wms=mock(WMS.class);
  GetLegendGraphicOutputFormat outputFormat=mock(GetLegendGraphicOutputFormat.class);
  when(wms.getLegendGraphicOutputFormat("image/png")).thenReturn(outputFormat);
  GeoServerTileLayer tileLayer=new GeoServerTileLayer(layerInfo,defaults,gridSetBroker,legendSample,wms);
  Map<String,TileLayer.LegendInfo> legendsInfo=tileLayer.getLegendsInfo();
  assertThat(legendsInfo.size(),is(3));
  assertThat(legendsInfo.get("default_style"),notNullValue());
  assertThat(legendsInfo.get("default_style").width,is(120));
  assertThat(legendsInfo.get("default_style").height,is(150));
  assertThat(legendsInfo.get("default_style").format,is("image/png"));
  assertThat(legendsInfo.get("default_style").legendUrl,is("http://localhost:8080/geoserver/ows?service=" + "WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=workspace%3AMockLayerInfoName"));
  assertThat(legendsInfo.get("alternateStyle-1"),notNullValue());
  assertThat(legendsInfo.get("alternateStyle-1").width,is(120));
  assertThat(legendsInfo.get("alternateStyle-1").height,is(150));
  assertThat(legendsInfo.get("alternateStyle-1").format,is("image/png"));
  assertThat(legendsInfo.get("alternateStyle-1").legendUrl,is("http://localhost:8080/geoserver/ows?service" + "=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=workspace%3AMockLayerInfoName&style=alternateStyle-1"));
  assertThat(legendsInfo.get("alternateStyle-2"),notNullValue());
  assertThat(legendsInfo.get("alternateStyle-2").width,is(150));
  assertThat(legendsInfo.get("alternateStyle-2").height,is(200));
  assertThat(legendsInfo.get("alternateStyle-2").format,is("image/png"));
  assertThat(legendsInfo.get("alternateStyle-2").legendUrl.trim(),is("http://localhost:8080/geoserver/some-url"));
}
