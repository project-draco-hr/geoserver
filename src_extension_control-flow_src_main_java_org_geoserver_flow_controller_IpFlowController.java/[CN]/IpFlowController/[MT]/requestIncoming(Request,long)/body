{
  boolean retval=true;
  final String incomingIp;
{
    String ip=getRemoteAddr(request.getHttpRequest());
    if (null == ip || "".equals(ip)) {
      incomingIp="";
    }
 else {
      incomingIp=ip;
    }
  }
  TimedBlockingQueue queue=queues.get(incomingIp);
  if (queue == null) {
synchronized (queues) {
      queue=queues.get(incomingIp);
      if (queue == null) {
        queue=new TimedBlockingQueue(queueSize,true);
        queues.put(incomingIp,queue);
      }
    }
  }
  QUEUE_ID.set(incomingIp);
  try {
    if (timeout > 0) {
      retval=queue.offer(request,timeout,TimeUnit.MILLISECONDS);
    }
 else {
      queue.put(request);
    }
  }
 catch (  InterruptedException e) {
    LOGGER.log(Level.WARNING,"Unexpected interruption while " + "blocking on the request queue");
  }
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.fine("IpFlowController(" + queueSize + ","+ incomingIp+ ") queue size "+ queue.size());
    LOGGER.fine("IpFlowController(" + queueSize + ","+ incomingIp+ ") total queues "+ queues.size());
  }
  return retval;
}
