{
  try {
    if (!(o instanceof CoverageInfo)) {
      throw new IllegalArgumentException(new StringBuffer("Not a GetCapabilitiesType: ").append(o).toString());
    }
    CoverageInfo info=(CoverageInfo)o;
    final AttributesImpl attributes=new AttributesImpl();
    attributes.addAttribute("","xmlns:wcs","xmlns:wcs","",WCS_URI);
    attributes.addAttribute("","xmlns:xlink","xmlns:xlink","","http://www.w3.org/1999/xlink");
    attributes.addAttribute("","xmlns:ogc","xmlns:ogc","","http://www.opengis.net/ogc");
    attributes.addAttribute("","xmlns:ows","xmlns:ows","","http://www.opengis.net/ows/1.1");
    attributes.addAttribute("","xmlns:gml","xmlns:gml","","http://www.opengis.net/gml");
    final String prefixDef=new StringBuffer("xmlns:").append(XSI_PREFIX).toString();
    attributes.addAttribute("",prefixDef,prefixDef,"",XSI_URI);
    final String locationAtt=new StringBuffer(XSI_PREFIX).append(":schemaLocation").toString();
    final String locationDef=buildSchemaURL(request.getBaseUrl(),"wcs/1.1.1/wcsCoverages.xsd");
    attributes.addAttribute("",locationAtt,locationAtt,"",locationDef);
    start("wcs:Coverages",attributes);
    handleCoverage(info);
    end("wcs:Coverages");
  }
 catch (  Exception e) {
    throw new RuntimeException("Unexpected error occurred during describe coverage xml encoding",e);
  }
}
