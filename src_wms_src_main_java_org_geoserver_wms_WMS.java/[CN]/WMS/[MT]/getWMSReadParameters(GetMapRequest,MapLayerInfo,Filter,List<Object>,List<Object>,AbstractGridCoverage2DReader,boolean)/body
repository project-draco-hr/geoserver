{
  final ParameterValueGroup readParametersDescriptor=reader.getFormat().getReadParameters();
  CoverageInfo coverage=mapLayerInfo.getCoverage();
  MetadataMap metadata=coverage.getMetadata();
  GeneralParameterValue[] readParameters=CoverageUtils.getParameters(readParametersDescriptor,coverage.getParameters(),readGeom);
  ReaderDimensionsAccessor dimensions=new ReaderDimensionsAccessor(reader);
  final DimensionInfo timeInfo=metadata.get(ResourceInfo.TIME,DimensionInfo.class);
  final List<GeneralParameterDescriptor> parameterDescriptors=readParametersDescriptor.getDescriptor().descriptors();
  if (timeInfo != null && timeInfo.isEnabled()) {
    List<Object> fixedTimes=new ArrayList<Object>(times);
    for (int i=0; i < fixedTimes.size(); i++) {
      if (fixedTimes.get(i) == null) {
        fixedTimes.set(i,getCurrentTime(coverage,dimensions));
      }
    }
    readParameters=CoverageUtils.mergeParameter(parameterDescriptors,readParameters,fixedTimes,"TIME","Time");
  }
  final DimensionInfo elevationInfo=metadata.get(ResourceInfo.ELEVATION,DimensionInfo.class);
  if (elevationInfo != null && elevationInfo.isEnabled()) {
    List<Object> fixedElevations=new ArrayList<Object>(elevations);
    for (int i=0; i < fixedElevations.size(); i++) {
      if (fixedElevations.get(i) == null) {
        fixedElevations.set(i,getDefaultElevation(coverage,dimensions));
      }
    }
    readParameters=CoverageUtils.mergeParameter(parameterDescriptors,readParameters,fixedElevations,"ELEVATION","Elevation");
  }
  if (layerFilter != null && readParameters != null) {
    for (int i=0; i < readParameters.length; i++) {
      GeneralParameterValue param=readParameters[i];
      GeneralParameterDescriptor pd=param.getDescriptor();
      if (pd.getName().getCode().equalsIgnoreCase("FILTER")) {
        final ParameterValue pv=(ParameterValue)pd.createValue();
        if (layerFilter != Filter.INCLUDE) {
          pv.setValue(layerFilter);
          readParameters[i]=pv;
        }
        break;
      }
    }
  }
  final Map<String,String> rawKvpMap=request.getRawKvp();
  if (rawKvpMap != null) {
    for (    Map.Entry<String,String> kvp : rawKvpMap.entrySet()) {
      String name=kvp.getKey();
      if (name.regionMatches(true,0,"dim_",0,4)) {
        name=name.substring(4);
        if (dimensions.hasDomain(name)) {
          final ArrayList<String> val=new ArrayList<String>(1);
          val.add(kvp.getValue());
          readParameters=CoverageUtils.mergeParameter(parameterDescriptors,readParameters,val,name);
        }
      }
    }
  }
  return readParameters;
}
