{
  DimensionInfo timeInfo=typeInfo.getMetadata().get(ResourceInfo.TIME,DimensionInfo.class);
  DimensionInfo elevationInfo=typeInfo.getMetadata().get(ResourceInfo.ELEVATION,DimensionInfo.class);
  DimensionFilterBuilder builder=new DimensionFilterBuilder(ff);
  if (timeInfo != null && timeInfo.isEnabled() && times != null) {
    List<Object> defaultedTimes=new ArrayList<Object>(times.size());
    for (    Object datetime : times) {
      if (datetime == null) {
        datetime=getDefaultTime(typeInfo);
      }
      defaultedTimes.add(datetime);
    }
    builder.appendFilters(timeInfo.getAttribute(),timeInfo.getEndAttribute(),defaultedTimes);
  }
  if (elevationInfo != null && elevationInfo.isEnabled() && elevations != null) {
    List<Object> defaultedElevations=new ArrayList<Object>(elevations.size());
    for (    Object elevation : elevations) {
      if (elevation == null) {
        elevation=getDefaultElevation(typeInfo);
      }
      defaultedElevations.add(elevation);
    }
    builder.appendFilters(elevationInfo.getAttribute(),elevationInfo.getEndAttribute(),defaultedElevations);
  }
  Filter result=builder.getFilter();
  return result;
}
