{
  super.setUp();
  WorkspaceInfo ws1=createNiceMock(WorkspaceInfo.class);
  expect(ws1.getName()).andReturn("ws1").anyTimes();
  replay(ws1);
  WorkspaceInfo ws2=createNiceMock(WorkspaceInfo.class);
  expect(ws2.getName()).andReturn("ws2").anyTimes();
  replay(ws2);
  StyleInfo s1=createNiceMock(StyleInfo.class);
  expect(s1.getName()).andReturn("s1").anyTimes();
  expect(s1.getWorkspace()).andReturn(ws1).anyTimes();
  replay(s1);
  StyleInfo s2=createNiceMock(StyleInfo.class);
  expect(s2.getName()).andReturn("s2").anyTimes();
  expect(s2.getWorkspace()).andReturn(ws2).anyTimes();
  replay(s2);
  LayerGroupInfo lg1=createNiceMock(LayerGroupInfo.class);
  expect(lg1.getName()).andReturn("lg1").anyTimes();
  expect(lg1.getWorkspace()).andReturn(ws1).anyTimes();
  replay(lg1);
  LayerGroupInfo lg2=createNiceMock(LayerGroupInfo.class);
  expect(lg2.getName()).andReturn("lg2").anyTimes();
  expect(lg2.getWorkspace()).andReturn(ws2).anyTimes();
  replay(lg2);
  Catalog cat=createNiceMock(Catalog.class);
  expect(cat.getWorkspaces()).andReturn(Arrays.asList(ws1,ws2)).anyTimes();
  expect(cat.getWorkspaceByName("ws1")).andReturn(ws1).anyTimes();
  expect(cat.getWorkspaceByName("ws2")).andReturn(ws2).anyTimes();
  expect(cat.getStyleByName("ws1","s1")).andReturn(s1).anyTimes();
  expect(cat.getStyleByName(ws1,"s1")).andReturn(s1).anyTimes();
  expect(cat.getStyleByName("s1")).andReturn(null).anyTimes();
  expect(cat.getStyleByName("ws2","s2")).andReturn(s1).anyTimes();
  expect(cat.getStyleByName(ws2,"s2")).andReturn(s1).anyTimes();
  expect(cat.getStyleByName("s2")).andReturn(null).anyTimes();
  expect(cat.getLayerGroupByName("ws1","lg1")).andReturn(lg1).anyTimes();
  expect(cat.getLayerGroupByName(ws1,"lg1")).andReturn(lg1).anyTimes();
  expect(cat.getLayerGroupByName("lg1")).andReturn(null).anyTimes();
  expect(cat.getLayerGroupByName("ws2","lg2")).andReturn(lg2).anyTimes();
  expect(cat.getLayerGroupByName(ws2,"lg2")).andReturn(lg2).anyTimes();
  expect(cat.getLayerGroupByName("lg2")).andReturn(null).anyTimes();
  replay(cat);
  catalog=new LocalWorkspaceCatalog(cat);
}
