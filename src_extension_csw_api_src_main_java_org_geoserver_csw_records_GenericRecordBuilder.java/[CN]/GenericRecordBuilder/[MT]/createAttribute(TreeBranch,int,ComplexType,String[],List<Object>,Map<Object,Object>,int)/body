{
  AttributeDescriptor descriptor=(AttributeDescriptor)Types.findDescriptor(type,path[index]);
  if (descriptor == null) {
    throw new IllegalArgumentException("Cannot find descriptor for attribute " + path[index] + " in type "+ type.getName().toString());
  }
  List<TreeNode> treenodes=branch.children.get(path[index]);
  if (treenodes == null) {
    treenodes=new ArrayList<TreeNode>();
    branch.children.put(path[index],treenodes);
  }
  if (index == path.length - 1) {
    for (    Object item : value) {
      SimpleTreeLeaf leaf=new SimpleTreeLeaf();
      leaf.userData=userData;
      leaf.descriptor=descriptor;
      leaf.value=item;
      leaf.userData=userData;
      treenodes.add(leaf);
    }
  }
 else   if (index == path.length - 2) {
    if (treenodes.isEmpty()) {
      for (int i=0; i < value.size(); i++) {
        ComplexTreeLeaf leaf=new ComplexTreeLeaf();
        treenodes.add(leaf);
        leaf.descriptor=descriptor;
      }
    }
 else     if (treenodes.size() == 1) {
      for (int i=1; i < value.size(); i++) {
        treenodes.add(treenodes.get(0).clone());
      }
    }
 else     if (value.size() != 1 && treenodes.size() != value.size()) {
      throw new IllegalArgumentException("Error in mapping: Number of values not matching.");
    }
    for (int i=0; i < value.size(); i++) {
      ComplexTreeLeaf leaf=(ComplexTreeLeaf)treenodes.get(i);
      leaf.value.put(path[index + 1],value.size() == 1 ? value.get(0) : value.get(i));
      leaf.userData=userData;
    }
  }
 else {
    if (index != splitIndex) {
      if (treenodes.isEmpty()) {
        TreeNode child=new TreeBranch();
        child.descriptor=descriptor;
        treenodes.add(child);
      }
      for (int i=0; i < treenodes.size(); i++) {
        createAttribute((TreeBranch)treenodes.get(i),index + 1,(ComplexType)descriptor.getType(),path,value,userData,splitIndex);
      }
    }
 else {
      if (treenodes.isEmpty()) {
        for (int i=0; i < value.size(); i++) {
          TreeNode child=new TreeBranch();
          child.descriptor=descriptor;
          treenodes.add(child);
        }
      }
 else       if (treenodes.size() == 1) {
        for (int i=1; i < value.size(); i++) {
          treenodes.add(treenodes.get(0).clone());
        }
      }
 else       if (treenodes.size() != value.size()) {
        throw new IllegalArgumentException("Error in mapping: Number of values not matching.");
      }
      for (int i=0; i < value.size(); i++) {
        createAttribute((TreeBranch)treenodes.get(i),index + 1,(ComplexType)descriptor.getType(),path,Collections.singletonList(value.get(i)),userData,splitIndex);
      }
    }
  }
}
