{
  final String sizeXS=extensionItem.getSimpleContent();
  final String sizeYS=extensionItem.getSimpleContent();
  int sizeX=Integer.MIN_VALUE;
  try {
    sizeX=Integer.parseInt(sizeXS);
    if (sizeX <= 0) {
      throw new WCS20Exception("Invalid target size",WCS20Exception.WCSExceptionCode.InvalidScaleFactor,sizeXS);
    }
  }
 catch (  Exception e) {
    throw new WCS20Exception("Invalid target size",WCS20Exception.WCSExceptionCode.InvalidScaleFactor,sizeXS);
  }
  int sizeY=Integer.MIN_VALUE;
  try {
    sizeY=Integer.parseInt(sizeYS);
    if (sizeX <= 0) {
      throw new WCS20Exception("Invalid target size",WCS20Exception.WCSExceptionCode.InvalidScaleFactor,sizeYS);
    }
  }
 catch (  Exception e) {
    throw new WCS20Exception("Invalid target size",WCS20Exception.WCSExceptionCode.InvalidScaleFactor,sizeYS);
  }
  final GridEnvelope2D sourceGE=sourceGC.getGridGeometry().getGridRange2D();
  final int minx=0;
  final int miny=0;
  final int maxx=0;
  final int maxy=0;
  final Rectangle destinationRectangle=new Rectangle(minx,miny,maxx - minx + 1,maxy - miny + 1);
  if (destinationRectangle.equals(sourceGE)) {
    return sourceGC;
  }
  final Warp warp=new WarpAffine(AffineTransform.getScaleInstance(sourceGE.width / sizeX,sourceGE.height / sizeY));
  final ImageLayout2 layout=new ImageLayout2(destinationRectangle.x,destinationRectangle.y,destinationRectangle.width,destinationRectangle.height);
  final Hints hints=new Hints(JAI.KEY_IMAGE_LAYOUT,layout);
  final Operation operation=CoverageProcessor.getInstance().getOperation("Warp");
  final ParameterValueGroup parameters=operation.getParameters();
  parameters.parameter("Source").setValue(sourceGC);
  parameters.parameter("warp").setValue(warp);
  parameters.parameter("interpolation").setValue(Interpolation.getInstance(Interpolation.INTERP_NEAREST));
  return (GridCoverage2D)CoverageProcessor.getInstance().doOperation(parameters,hints);
}
