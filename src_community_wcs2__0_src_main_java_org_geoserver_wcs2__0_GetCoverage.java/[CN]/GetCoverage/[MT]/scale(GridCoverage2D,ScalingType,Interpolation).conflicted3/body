{
  final ScaleToExtentType scaleType=scaling.getScaleToExtent();
  final EList<TargetAxisExtentType> targetAxisExtentElements=scaleType.getTargetAxisExtent();
  TargetAxisExtentType xExtent=null, yExtent=null;
  for (  TargetAxisExtentType axisExtentType : targetAxisExtentElements) {
    final String axisName=axisExtentType.getAxis();
    if (axisName.equals("http://www.opengis.net/def/axis/OGC/1/i")) {
      xExtent=axisExtentType;
    }
 else     if (axisName.equals("http://www.opengis.net/def/axis/OGC/1/j")) {
      yExtent=axisExtentType;
    }
 else {
      throw new WCS20Exception("Scale Axis Undefined",WCS20Exception.WCS20ExceptionCode.ScaleAxisUndefined,axisName);
    }
  }
  if (xExtent == null) {
    throw new WCS20Exception("Missing extent along i",WCS20Exception.WCS20ExceptionCode.InvalidScaleFactor,"");
  }
  if (yExtent == null) {
    throw new WCS20Exception("Missing extent along j",WCS20Exception.WCS20ExceptionCode.InvalidScaleFactor,"");
  }
  final int minx=(int)targetAxisExtentElements.get(0).getLow();
  final int maxx=(int)targetAxisExtentElements.get(0).getHigh();
  final int miny=(int)targetAxisExtentElements.get(1).getLow();
  final int maxy=(int)targetAxisExtentElements.get(1).getHigh();
  final GridEnvelope2D sourceGE=sourceGC.getGridGeometry().getGridRange2D();
  if (minx > maxx) {
    throw new WCS20Exception("Invalid Extent for dimension:" + targetAxisExtentElements.get(0).getAxis(),WCS20Exception.WCS20ExceptionCode.InvalidExtent,String.valueOf(maxx));
  }
  if (miny > maxy) {
    throw new WCS20Exception("Invalid Extent for dimension:" + targetAxisExtentElements.get(1).getAxis(),WCS20Exception.WCS20ExceptionCode.InvalidExtent,String.valueOf(maxy));
  }
  final Rectangle destinationRectangle=new Rectangle(minx,miny,maxx - minx + 1,maxy - miny + 1);
  if (destinationRectangle.equals(sourceGE)) {
    return sourceGC;
  }
  final Warp warp=new WarpAffine(AffineTransform.getScaleInstance(sourceGE.width / destinationRectangle.width,sourceGE.height / destinationRectangle.height));
  final ImageLayout2 layout=new ImageLayout2(destinationRectangle.x,destinationRectangle.y,destinationRectangle.width,destinationRectangle.height);
  final Hints hints=new Hints(JAI.KEY_IMAGE_LAYOUT,layout);
  final Operation operation=CoverageProcessor.getInstance().getOperation("Warp");
  final ParameterValueGroup parameters=operation.getParameters();
  parameters.parameter("Source").setValue(sourceGC);
  parameters.parameter("warp").setValue(warp);
  parameters.parameter("interpolation").setValue(interpolation != null ? interpolation : InterpolationPolicy.getDefaultPolicy().getInterpolation());
  parameters.parameter("backgroundValues").setValue(CoverageUtilities.getBackgroundValues(sourceGC));
  return (GridCoverage2D)CoverageProcessor.getInstance().doOperation(parameters,hints);
}
