{
  try {
    LinkedList<PointSymbolizer> iconStyles=new LinkedList<PointSymbolizer>();
    LinkedList<TextSymbolizer> labelStyles=new LinkedList<TextSymbolizer>();
    LinkedList<LineSymbolizer> lineStyles=new LinkedList<LineSymbolizer>();
    LinkedList<PolygonSymbolizer> polyStyles=new LinkedList<PolygonSymbolizer>();
    for (int i=0; i < symbolizers.length; i++) {
      Symbolizer sym=symbolizers[i];
      if (sym instanceof PointSymbolizer) {
        iconStyles.add((PointSymbolizer)sym);
      }
 else       if (sym instanceof TextSymbolizer) {
        labelStyles.add((TextSymbolizer)sym);
      }
 else       if (sym instanceof LineSymbolizer) {
        lineStyles.add((LineSymbolizer)sym);
      }
 else       if (sym instanceof PolygonSymbolizer) {
        polyStyles.add((PolygonSymbolizer)sym);
      }
      LOGGER.finer(new StringBuffer("Adding symbolizer ").append(sym).toString());
    }
    if (iconStyles.isEmpty()) {
      encodeDefaultIconStyle(feature);
    }
 else {
      Iterator<PointSymbolizer> iter=iconStyles.iterator();
      while (iter.hasNext()) {
        PointSymbolizer sym=(PointSymbolizer)iter.next();
        try {
          Style2D style=styleFactory.createStyle(feature,sym,scaleRange);
          encodePointStyle(feature,style,sym);
        }
 catch (        IllegalArgumentException iae) {
          LOGGER.fine(iae.getMessage() + " for " + sym.toString());
        }
      }
    }
    if (labelStyles.isEmpty()) {
      encodeDefaultTextStyle();
    }
 else {
      Iterator<TextSymbolizer> iter=labelStyles.iterator();
      while (iter.hasNext()) {
        TextSymbolizer sym=(TextSymbolizer)iter.next();
        try {
          TextStyle2D style=(TextStyle2D)styleFactory.createStyle(feature,sym,scaleRange);
          encodeTextStyle(feature,style,sym);
        }
 catch (        IllegalArgumentException iae) {
          LOGGER.fine(iae.getMessage() + " for " + sym.toString());
        }
      }
    }
    if (!lineStyles.isEmpty()) {
      Iterator<LineSymbolizer> iter=lineStyles.iterator();
      while (iter.hasNext()) {
        LineSymbolizer sym=(LineSymbolizer)iter.next();
        try {
          LineStyle2D style=(LineStyle2D)styleFactory.createStyle(feature,sym,scaleRange);
          encodeLineStyle(feature,style,sym);
        }
 catch (        IllegalArgumentException iae) {
          LOGGER.fine(iae.getMessage() + " for " + sym.toString());
        }
      }
    }
    if (!polyStyles.isEmpty()) {
      Iterator<PolygonSymbolizer> iter=polyStyles.iterator();
      while (iter.hasNext()) {
        PolygonSymbolizer sym=(PolygonSymbolizer)iter.next();
        try {
          PolygonStyle2D style=(PolygonStyle2D)styleFactory.createStyle(feature,sym,scaleRange);
          encodePolygonStyle(feature,style,sym,!lineStyles.isEmpty());
        }
 catch (        IllegalArgumentException iae) {
          LOGGER.fine(iae.getMessage() + " for " + sym.toString());
        }
      }
    }
  }
 catch (  Exception e) {
    LOGGER.log(Level.WARNING,"Error occurred during style encoding",e);
  }
}
