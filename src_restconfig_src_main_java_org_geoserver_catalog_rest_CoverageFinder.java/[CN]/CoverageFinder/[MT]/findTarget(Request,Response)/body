{
  String ws=getAttribute(request,"workspace");
  String cs=getAttribute(request,"coveragestore");
  String c=getAttribute(request,"coverage");
  if (ws != null && catalog.getWorkspaceByName(ws) == null) {
    throw new RestletException("No such workspace: " + ws,Status.CLIENT_ERROR_NOT_FOUND);
  }
  if (cs != null && catalog.getCoverageStoreByName(ws,cs) == null) {
    throw new RestletException("No such coveragestore: " + ws + ","+ cs,Status.CLIENT_ERROR_NOT_FOUND);
  }
  if (c == null && request.getMethod() == Method.GET) {
    Form form=request.getResourceRef().getQueryAsForm();
    String list=form.getFirstValue("list");
    if ("all".equalsIgnoreCase(list)) {
      return new HarvestedCoveragesResource(getContext(),request,response,catalog);
    }
 else {
      return new CoverageListResource(getContext(),request,response,catalog);
    }
  }
  if (c != null) {
    boolean quietOnNotFound=quietOnNotFoundEnabled(request);
    if (cs != null && catalog.getCoverageByCoverageStore(catalog.getCoverageStoreByName(ws,cs),c) == null) {
      if (quietOnNotFound) {
        return null;
      }
      throw new RestletException("No such coverage: " + ws + ","+ cs+ ","+ c,Status.CLIENT_ERROR_NOT_FOUND);
    }
 else {
      NamespaceInfo ns=catalog.getNamespaceByPrefix(ws);
      if (ns == null || catalog.getCoverageByName(ns,c) == null) {
        if (quietOnNotFound) {
          return null;
        }
        throw new RestletException("No such coverage: " + ws + ","+ c,Status.CLIENT_ERROR_NOT_FOUND);
      }
    }
  }
  return new CoverageResource(null,request,response,catalog);
}
