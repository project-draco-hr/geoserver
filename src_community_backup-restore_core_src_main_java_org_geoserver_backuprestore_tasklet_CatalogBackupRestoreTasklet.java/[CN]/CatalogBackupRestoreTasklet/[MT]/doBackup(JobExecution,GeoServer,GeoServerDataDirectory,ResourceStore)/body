{
  try {
    final String outputFolderURL=jobExecution.getJobParameters().getString(Backup.PARAM_OUTPUT_FILE_PATH);
    Resource targetBackupFolder=Resources.fromURL(outputFolderURL);
    doWrite(geoserver.getGlobal(),targetBackupFolder,"global.xml");
    doWrite(geoserver.getSettings(),targetBackupFolder,"settings.xml");
    doWrite(geoserver.getLogging(),targetBackupFolder,"logging.xml");
    for (    ServiceInfo service : geoserver.getServices()) {
      if (service.getWorkspace() == null) {
        doWrite(service,targetBackupFolder,"services");
      }
    }
    Resource targetWorkspacesFolder=BackupUtils.dir(targetBackupFolder,"workspaces");
    if (filteredWorkspace(getCatalog().getDefaultWorkspace())) {
      doWrite(getCatalog().getDefaultNamespace(),targetWorkspacesFolder,"defaultnamespace.xml");
      doWrite(getCatalog().getDefaultWorkspace(),targetWorkspacesFolder,"default.xml");
    }
    for (    WorkspaceInfo ws : getCatalog().getWorkspaces()) {
      if (filteredWorkspace(ws)) {
        if (geoserver.getSettings(ws) != null) {
          doWrite(geoserver.getSettings(ws),BackupUtils.dir(targetWorkspacesFolder,ws.getName()),"settings.xml");
        }
        if (geoserver.getServices(ws) != null) {
          for (          ServiceInfo service : geoserver.getServices(ws)) {
            doWrite(service,targetWorkspacesFolder,ws.getName());
          }
        }
        GeoServerDataDirectory wsDd=new GeoServerDataDirectory(dd.get(Paths.path("workspaces",ws.getName())).dir());
        backupRestoreAdditionalResources(wsDd.getResourceStore(),targetWorkspacesFolder.get(ws.getName()));
        for (        StyleInfo sty : getCatalog().getStylesByWorkspace(ws)) {
          Resource styResource=wsDd.get(Paths.path("styles",sty.getFilename()));
          if (Resources.exists(styResource)) {
            Resources.copy(styResource.file(),BackupUtils.dir(targetWorkspacesFolder.get(ws.getName()),"styles"));
          }
        }
      }
    }
    final GeoServerResourceLoader targetGeoServerResourceLoader=new GeoServerResourceLoader(targetBackupFolder.dir());
    for (    GeoServerPluginConfigurator pluginConfig : GeoServerExtensions.extensions(GeoServerPluginConfigurator.class)) {
      pluginConfig.saveConfiguration(targetGeoServerResourceLoader);
    }
    for (    GeoServerPropertyConfigurer props : GeoServerExtensions.extensions(GeoServerPropertyConfigurer.class)) {
      Resource configFile=props.getConfigFile();
      if (configFile != null && Resources.exists(configFile)) {
        Resource targetDir=Files.asResource(targetGeoServerResourceLoader.findOrCreateDirectory(Paths.convert(dd.getResourceLoader().getBaseDirectory(),configFile.parent().dir())));
        Resources.copy(configFile.file(),targetDir);
      }
    }
    backupRestoreAdditionalResources(resourceStore,targetBackupFolder);
    if (GeoServerExtensions.bean("gwcGeoServervConfigPersister") != null) {
      backupGWCSettings(targetBackupFolder);
    }
  }
 catch (  Exception e) {
    logValidationExceptions((ValidationResult)null,new UnexpectedJobExecutionException("Exception occurred while storing GeoServer globals and services settings!",e));
  }
}
