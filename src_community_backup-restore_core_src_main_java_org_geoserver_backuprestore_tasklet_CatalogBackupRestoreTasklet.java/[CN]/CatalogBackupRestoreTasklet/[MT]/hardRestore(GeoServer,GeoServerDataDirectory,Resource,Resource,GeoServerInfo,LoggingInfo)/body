{
  geoserver.getCatalog().getResourcePool().dispose();
  geoserver.getCatalog().dispose();
  geoserver.dispose();
  Files.delete(dd.get("global.xml").file());
  doWrite(newGeoServerInfo,dd.get(Paths.BASE),"global.xml");
  geoserver.setGlobal(newGeoServerInfo);
  Files.delete(dd.get("logging.xml").file());
  doWrite(newLoggingInfo,dd.get(Paths.BASE),"logging.xml");
  geoserver.setLogging(newLoggingInfo);
  restoreGlobalServices(sourceRestoreFolder,dd);
  Resource workspaces=dd.get("workspaces");
  Files.delete(workspaces.dir());
  workspaces=BackupUtils.dir(dd.get(Paths.BASE),"workspaces");
  restoreWorkSpacesAndLayers(workspaces);
  geoserver.reload(getCatalog());
  Resource styles=dd.get("styles");
  Files.delete(styles.dir());
  styles=BackupUtils.dir(dd.get(Paths.BASE),"styles");
  restoreGlobalStyles(sourceRestoreFolder,styles);
  Resource layerGroups=dd.get("layergroups");
  Files.delete(layerGroups.dir());
  layerGroups=BackupUtils.dir(dd.get(Paths.BASE),"layergroups");
  restoreGlobalLayerGroups(layerGroups);
  restoreLocalWorkspaceSettingsAndServices(geoserver,sourceRestoreFolder,sourceWorkspacesFolder,dd);
  final GeoServerResourceLoader sourceGeoServerResourceLoader=new GeoServerResourceLoader(sourceRestoreFolder.dir());
  for (  GeoServerPluginConfigurator pluginConfig : GeoServerExtensions.extensions(GeoServerPluginConfigurator.class)) {
    for (    Resource configFile : pluginConfig.getFileLocations()) {
      replaceConfigFile(sourceGeoServerResourceLoader,configFile);
    }
    pluginConfig.loadConfiguration(dd.getResourceLoader());
  }
  for (  GeoServerPropertyConfigurer props : GeoServerExtensions.extensions(GeoServerPropertyConfigurer.class)) {
    Resource configFile=props.getConfigFile();
    replaceConfigFile(sourceGeoServerResourceLoader,configFile);
    props.reload();
  }
  backupRestoreAdditionalResources(sourceGeoServerResourceLoader,dd.get(Paths.BASE));
  if (GeoServerExtensions.bean("gwcGeoServervConfigPersister") != null) {
    restoreGWCSettings(sourceRestoreFolder,dd.get(Paths.BASE));
    GWCInitializer gwcInitializer=GeoServerExtensions.bean(GWCInitializer.class);
    if (gwcInitializer != null) {
      gwcInitializer.initialize(geoserver);
    }
  }
}
