{
  if (SKIP_TESTS) {
    LOGGER.warning(ERROR_LIB_MESSAGE);
    return;
  }
  final File input=TestData.file(this,"testmergb.png");
  assertTrue("Unable to find test data",input.exists() && input.isFile() && input.canRead());
  final File output=TestData.temp(this,"output.jpeg");
  try {
    new TurboJpegImageWorker(ImageIO.read(input)).writeTurboJPEG(new FileOutputStream(output),1.5f);
    assertFalse("We should not be allowed to specify compression ratios > 1",true);
  }
 catch (  Exception e) {
  }
  try {
    new TurboJpegImageWorker(ImageIO.read(input)).writeTurboJPEG(new FileOutputStream(output),-.5f);
    assertFalse("We should not be allowed to specify compression ratios > 1",true);
  }
 catch (  Exception e) {
  }
}
