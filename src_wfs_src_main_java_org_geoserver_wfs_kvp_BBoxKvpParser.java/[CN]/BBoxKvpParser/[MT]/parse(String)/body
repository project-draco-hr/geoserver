{
  List unparsed=KvpUtils.readFlat(value,KvpUtils.INNER_DELIMETER);
  if (unparsed.size() < 4) {
    throw new IllegalArgumentException("Requested bounding box contains wrong" + "number of coordinates (should have " + "4): "+ unparsed.size());
  }
  double[] bbox=new double[4];
  for (int i=0; i < 4; i++) {
    try {
      bbox[i]=Double.parseDouble((String)unparsed.get(i));
    }
 catch (    NumberFormatException e) {
      throw new IllegalArgumentException("Bounding box coordinate " + i + " is not parsable:"+ unparsed.get(i));
    }
  }
  double minx=bbox[0];
  double miny=bbox[1];
  double maxx=bbox[2];
  double maxy=bbox[3];
  if (minx > maxx) {
    throw new ServiceException("illegal bbox, minX: " + minx + " is "+ "greater than maxX: "+ maxx);
  }
  if (miny > maxy) {
    throw new ServiceException("illegal bbox, minY: " + miny + " is "+ "greater than maxY: "+ maxy);
  }
  CoordinateReferenceSystem crs=null;
  if (unparsed.size() > 4) {
    StringBuilder sb=new StringBuilder();
    for (int i=4; i < unparsed.size(); i++) {
      sb.append(unparsed.get(i));
      if (i < (unparsed.size() - 1)) {
        sb.append(",");
      }
    }
    crs=CRS.decode(sb.toString());
  }
 else {
  }
  return new ReferencedEnvelope(minx,maxx,miny,maxy,crs);
}
