{
  String name=parameters.get(NAME).toString();
  String workspace=parameters.get(WORKSPACE).toOptionalString();
  StyleInfo si=workspace != null ? getCatalog().getStyleByName(workspace,name) : getCatalog().getStyleByName(name);
  if (si == null) {
    error(new ParamResourceModel("StyleEditPage.notFound",this,name).getString());
    doReturn(StylePage.class);
    return;
  }
  initPreviewLayer(si);
  initUI(si);
  if (!isAuthenticatedAsAdmin()) {
    if (si.getWorkspace() == null) {
      styleForm.setEnabled(false);
      editor.add(new AttributeAppender("class",new Model<String>("disabled")," "));
      get("validate").add(new AttributeAppender("style",new Model<String>("display:none;")," "));
      add(new Behavior(){
        private static final long serialVersionUID=-4336130086161028141L;
        @Override public void renderHead(        Component component,        IHeaderResponse response){
          super.renderHead(component,response);
          response.render(OnLoadHeaderItem.forScript("document.getElementById('mainFormSubmit').style.display = 'none';"));
          response.render(OnLoadHeaderItem.forScript("document.getElementById('uploadFormSubmit').style.display = 'none';"));
        }
      }
);
      info(new StringResourceModel("globalStyleReadOnly",this,null).getString());
    }
  }
}
