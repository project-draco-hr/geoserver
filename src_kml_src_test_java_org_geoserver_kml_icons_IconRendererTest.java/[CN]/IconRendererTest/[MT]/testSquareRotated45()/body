{
  StyleFactory sfact=CommonFactoryFinder.getStyleFactory();
  FilterFactory ffact=CommonFactoryFinder.getFilterFactory();
  Mark m=sfact.mark(ffact.literal("square"),sfact.fill(null,ffact.literal("#0000FF"),null),sfact.stroke(ffact.literal("#000000"),null,ffact.literal(1),null,null,null,null));
  Graphic g=sfact.graphic(Arrays.asList((GraphicalSymbol)m),Expression.NIL,Expression.NIL,ffact.literal(45.0),null,null);
  Symbolizer symb=sfact.pointSymbolizer(null,ffact.property(null),null,null,g);
  Rule r=sfact.rule(null,null,null,Float.NEGATIVE_INFINITY,Float.POSITIVE_INFINITY,Arrays.asList(symb),null);
  FeatureTypeStyle fts=sfact.featureTypeStyle(null,null,null,Collections.<Name>emptySet(),Collections.<SemanticType>emptySet(),Arrays.asList(r));
  Style s=sfact.style(null,null,true,Arrays.asList(fts),null);
  BufferedImage img=IconRenderer.renderIcon((org.geotools.styling.Style)s);
  final int baseSize=16;
  final int rotated=(int)Math.ceil(baseSize * Math.sqrt(2));
  final int size=(rotated + 1 + 1+ 1) * 4;
  assertEquals(size,img.getHeight());
  assertEquals(size,img.getWidth());
  BufferedImage expected=ImageIO.read(KMLTest.class.getResource("square-blue-16-x4-45deg.png"));
  ImageAssert.assertEquals(expected,img,THRESHOLD);
}
