{
  String workspaceName=getAttribute("workspace");
  String styleName=getAttribute("style");
  getResponse().setStatus(Status.SUCCESS_ACCEPTED);
  String name=getRequest().getResourceRef().getQueryAsForm().getFirstValue("name");
  File directory=null;
  try {
    directory=doFileUpload(styleName,workspaceName);
    File uploadedFile=retrieveSldFile(directory);
    Style style=parseSld(uploadedFile);
    if (name == null) {
      name=style.getName();
    }
    if (name == null) {
      throw new RestletException("Style must have a name.",Status.CLIENT_ERROR_BAD_REQUEST);
    }
    if (!existsStyleInCatalog(workspaceName,name)) {
      throw new RestletException("Style " + name + " doesn't exists.",Status.CLIENT_ERROR_FORBIDDEN);
    }
    String path="styles/" + name + ".sld";
    String pathStyleFolder="styles/";
    if (workspaceName != null) {
      path="workspaces/" + workspaceName + "/"+ path;
      pathStyleFolder="workspaces/" + workspaceName + "/"+ pathStyleFolder;
    }
    GeoServerResourceLoader loader=catalog.getResourceLoader();
    File f;
    try {
      f=loader.find(path);
    }
 catch (    IOException e) {
      throw new RestletException("Error looking up file",Status.SERVER_ERROR_INTERNAL,e);
    }
    if (f == null) {
      String msg="SLD file " + name + ".sld doesn't exists.";
      throw new RestletException(msg,Status.CLIENT_ERROR_FORBIDDEN);
    }
    File stylesDir=new File(loader.getBaseDirectory(),pathStyleFolder);
    saveImageResources(directory,stylesDir);
    serializeSldFileInCatalog(f,uploadedFile);
    StyleInfo sinfo=catalog.getStyleByName(workspaceName,name);
    sinfo.setFilename(f.getName());
    catalog.save(sinfo);
    LOGGER.info("PUT Style Package: " + name + ", workspace: "+ workspaceName);
  }
 catch (  Exception e) {
    e.printStackTrace();
    LOGGER.severe("Error processing the style package (PUT): " + e.getMessage());
    throw new RestletException("Error processing the style",Status.SERVER_ERROR_INTERNAL,e);
  }
 finally {
    FileUtils.deleteQuietly(directory);
  }
}
