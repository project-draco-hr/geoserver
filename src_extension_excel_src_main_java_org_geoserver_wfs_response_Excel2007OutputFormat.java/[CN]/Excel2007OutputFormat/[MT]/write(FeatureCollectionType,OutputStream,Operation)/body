{
  Workbook wb=getNewWorkbook();
  ExcelCellStyles styles=new ExcelCellStyles(wb);
  Map<String,File> sheetMap=new HashMap<String,File>();
  for (Iterator it=featureCollection.getFeature().iterator(); it.hasNext(); ) {
    SimpleFeatureCollection fc=(SimpleFeatureCollection)it.next();
    Sheet sheet=wb.createSheet(fc.getSchema().getTypeName());
    String sheetName=((XSSFSheet)sheet).getPackagePart().getPartName().getName();
    File rawSheet=File.createTempFile("Excel2007TempSheet",".xml");
    sheetMap.put(sheetName,rawSheet);
    Writer rawWriter=new OutputStreamWriter(new FileOutputStream(rawSheet),XML_ENCODING);
    SpreadsheetWriter sw=new SpreadsheetWriter(rawWriter,XML_ENCODING);
    sw.beginSheet();
    sw.insertRow(0);
    int headerStyleIndex=styles.getHeaderStyle().getIndex();
    SimpleFeatureType ft=fc.getSchema();
    sw.createCell(0,"FID");
    for (int i=0; i < ft.getAttributeCount() && i < colLimit; i++) {
      AttributeDescriptor ad=ft.getDescriptor(i);
      sw.createCell(i + 1,ad.getLocalName(),headerStyleIndex);
    }
    sw.endRow();
    SimpleFeatureIterator i=fc.features();
    int r=0;
    try {
      while (i.hasNext()) {
        r++;
        sw.insertRow(r);
        if (r == (rowLimit - 1) && i.hasNext()) {
          String rowWarning=TRUNCATE_WARNING + ": ROWS " + r+ " - "+ fc.size()+ " NOT SHOWN";
          sw.createCell(0,rowWarning);
          sw.endRow();
          break;
        }
        SimpleFeature f=i.next();
        sw.createCell(0,f.getID());
        for (int j=0; j < f.getAttributeCount() && j < colLimit; j++) {
          Object att=f.getAttribute(j);
          if (att != null) {
            if (att instanceof Number) {
              sw.createCell(j + 1,((Number)att).doubleValue());
            }
 else             if (att instanceof Date) {
              sw.createCell(j + 1,(Date)att,styles.getDateStyle().getIndex());
            }
 else             if (att instanceof Calendar) {
              sw.createCell(j + 1,(Calendar)att,styles.getDateStyle().getIndex());
            }
 else             if (att instanceof Boolean) {
              sw.createCell(j + 1,(Boolean)att);
            }
 else {
              String stringVal=att.toString();
              if (stringVal.length() > CELL_CHAR_LIMIT) {
                stringVal=TRUNCATE_WARNING + " " + stringVal.substring(0,CELL_CHAR_LIMIT - TRUNCATE_WARNING.length() - 1);
                sw.createCell(j + 1,stringVal,styles.getWarningStyle().getIndex());
              }
 else {
                sw.createCell(j + 1,stringVal);
              }
            }
          }
        }
        sw.endRow();
      }
    }
  finally {
      fc.close(i);
    }
    sw.endSheet();
    rawWriter.close();
  }
  File template=File.createTempFile("Excel2007TempTemplate",".xlsx");
  FileOutputStream os=new FileOutputStream(template);
  wb.write(os);
  os.close();
  for (  Entry<String,File> sheetEntry : sheetMap.entrySet()) {
    String sheetName=sheetEntry.getKey();
    File tempXml=sheetEntry.getValue();
    File newTemplate=File.createTempFile("Excel2007TempTemplate",".xlsx");
    FileOutputStream out=new FileOutputStream(newTemplate);
    BigGridUtil.substitute(template,tempXml,sheetName.substring(1),out);
    out.close();
    template=newTemplate;
  }
  FileInputStream fis=new FileInputStream(template);
  BigGridUtil.copyStream(fis,output);
  fis.close();
}
