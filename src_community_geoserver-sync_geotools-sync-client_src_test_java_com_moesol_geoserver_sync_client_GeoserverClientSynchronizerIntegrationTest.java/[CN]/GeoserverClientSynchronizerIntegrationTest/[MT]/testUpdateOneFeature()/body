{
  FeatureCollectionType client=make(f("F1",0),f("F2",1),f("F3",2));
  FeatureCollectionType server=make(f("F1",0),f("F2",3),f("F3",2));
  GeoserverClientSynchronizer synchronizer=new GeoserverClientSynchronizer(makeConfiguration(),"url",SimulatedRequestBuilder.POST_TEMPLATE);
  Map<Identifier,FeatureAccessor> clientMap=asMap(client);
  RequestBuilder builder=new SimulatedRequestBuilder(server);
  synchronizer.setRequestBuilder(builder);
  synchronizer.synchronize(clientMap);
  assertEquals(3,clientMap.size());
  check(clientMap,0,"F1");
  check(clientMap,3,"F2");
  check(clientMap,2,"F3");
  assertEquals(0,synchronizer.getNumCreates());
  assertEquals(1,synchronizer.getNumUpdates());
  assertEquals(0,synchronizer.getNumDeletes());
  assertEquals(2,synchronizer.getNumRounds());
  server=make(f("F1",4),f("F2",3),f("F3",2));
  builder=new SimulatedRequestBuilder(server);
  synchronizer.setRequestBuilder(builder);
  synchronizer.synchronize(clientMap);
  assertEquals(3,clientMap.size());
  check(clientMap,4,"F1");
  check(clientMap,3,"F2");
  check(clientMap,2,"F3");
  assertEquals(0,synchronizer.getNumCreates());
  assertEquals(1,synchronizer.getNumUpdates());
  assertEquals(0,synchronizer.getNumDeletes());
  assertEquals(2,synchronizer.getNumRounds());
  server=make(f("F1",4),f("F2",3),f("F3",5));
  builder=new SimulatedRequestBuilder(server);
  synchronizer.setRequestBuilder(builder);
  synchronizer.synchronize(clientMap);
  assertEquals(3,clientMap.size());
  check(clientMap,4,"F1");
  check(clientMap,3,"F2");
  check(clientMap,5,"F3");
  assertEquals(0,synchronizer.getNumCreates());
  assertEquals(1,synchronizer.getNumUpdates());
  assertEquals(0,synchronizer.getNumDeletes());
  assertEquals(2,synchronizer.getNumRounds());
}
