{
  FeatureCollectionType client=make(f("F1",0),f("F2",1),f("F3",2));
  FeatureCollectionType server=make(f("F1",0),f("F2",1),f("F3",2),f("F4",3));
  GeoserverClientSynchronizer synchronizer=new GeoserverClientSynchronizer(makeConfiguration(),"url",SimulatedRequestBuilder.POST_TEMPLATE);
  Map<Identifier,FeatureAccessor> clientMap=asMap(client);
  RequestBuilder builder=new SimulatedRequestBuilder(server);
  synchronizer.setRequestBuilder(builder);
  synchronizer.synchronize(clientMap);
  assertEquals(4,clientMap.size());
  check(clientMap,0,"F1");
  check(clientMap,1,"F2");
  check(clientMap,2,"F3");
  check(clientMap,3,"F4");
  assertEquals(1,synchronizer.getNumCreates());
  assertEquals(0,synchronizer.getNumUpdates());
  assertEquals(0,synchronizer.getNumDeletes());
  assertEquals(2,synchronizer.getNumRounds());
  server=make(f("F0",-1),f("F1",0),f("F2",1),f("F3",2),f("F4",3));
  builder=new SimulatedRequestBuilder(server);
  synchronizer.setRequestBuilder(builder);
  synchronizer.synchronize(clientMap);
  assertEquals(5,clientMap.size());
  check(clientMap,-1,"F0");
  check(clientMap,0,"F1");
  check(clientMap,1,"F2");
  check(clientMap,2,"F3");
  check(clientMap,3,"F4");
  assertEquals(1,synchronizer.getNumCreates());
  assertEquals(0,synchronizer.getNumUpdates());
  assertEquals(0,synchronizer.getNumDeletes());
  assertEquals(2,synchronizer.getNumRounds());
  server=make(f("F0",-1),f("F1",0),f("F2",1),f("F2.1",22),f("F3",2),f("F4",3));
  builder=new SimulatedRequestBuilder(server);
  synchronizer.setRequestBuilder(builder);
  synchronizer.synchronize(clientMap);
  assertEquals(6,clientMap.size());
  check(clientMap,-1,"F0");
  check(clientMap,0,"F1");
  check(clientMap,1,"F2");
  check(clientMap,22,"F2.1");
  check(clientMap,2,"F3");
  check(clientMap,3,"F4");
  assertEquals(1,synchronizer.getNumCreates());
  assertEquals(0,synchronizer.getNumUpdates());
  assertEquals(0,synchronizer.getNumDeletes());
  assertEquals(2,synchronizer.getNumRounds());
}
