{
  FeatureCollectionType client=make(f("U1",21),f("U2",22),f("D1",91),f("D2",92),f("D3",93));
  FeatureCollectionType server=make(f("C1",1),f("C2",2),f("C3",3),f("U1",121),f("U2",122));
  GeoserverClientSynchronizer synchronizer=new GeoserverClientSynchronizer(makeConfiguration(),"url",SimulatedRequestBuilder.POST_TEMPLATE);
  FeaturesChangedListener target=mock(FeaturesChangedListener.class);
  FeaturesChangedAdaptor adaptor=new FeaturesChangedAdaptor(target);
  synchronizer.setListener(adaptor);
  synchronizer.setRoundListener(adaptor);
  RequestBuilder builder=new SimulatedRequestBuilder(server);
  synchronizer.setRequestBuilder(builder);
  Map<Identifier,FeatureAccessor> clientMap=asMap(client);
  synchronizer.synchronize(clientMap);
  verify(target).featuresCreate(featuresEq(f("C1",1),f("C2",2),f("C3",3)));
  verify(target).featuresUpdate(featuresEq(f("U1",121),f("U2",122)));
  verify(target).featuresDelete(featuresEq(f("D1",91),f("D2",92),f("D3",93)));
  assertEquals(3,synchronizer.getNumCreates());
  assertEquals(2,synchronizer.getNumUpdates());
  assertEquals(3,synchronizer.getNumDeletes());
  assertEquals(2,synchronizer.getNumRounds());
}
