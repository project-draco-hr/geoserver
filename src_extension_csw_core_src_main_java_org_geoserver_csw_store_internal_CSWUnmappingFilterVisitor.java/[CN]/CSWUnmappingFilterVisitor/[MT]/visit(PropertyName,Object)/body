{
  XPathUtil.StepList steps=XPathUtil.steps(rd.getFeatureDescriptor(),expression.getPropertyName(),rd.getNamespaceSupport());
  if (steps.size() == 1 && steps.get(0).getName().getLocalPart().equalsIgnoreCase("AnyText")) {
    Expression result=ff.literal(" ");
    for (    CatalogStoreMappingElement element : mapping.elements()) {
      Expression fieldIgnoreNull=ff.function("if_then_else",ff.function("isNull",element.getContent()),ff.literal(""),element.getContent());
      result=ff.function("strConcat",result,ff.function("strConcat",ff.literal(" "),fieldIgnoreNull));
    }
    return result;
  }
  String path=CatalogStoreMapping.toDotPath(steps);
  if (path.equalsIgnoreCase(rd.getBoundingBoxPropertyName())) {
    return ff.property("boundingBox");
  }
  CatalogStoreMappingElement element=mapping.getElement(path);
  if (element == null) {
    throw new IllegalArgumentException("Unknown field in mapping: " + expression);
  }
  return element.getContent();
}
