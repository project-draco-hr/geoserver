{
  Set<Subject> subjects=new HashSet<Subject>(1);
  addRole(subjects);
  Set<Attribute> resources=new HashSet<Attribute>(1);
  addGeoserverResource(resources);
  addResource(resources,XACMLConstants.URlResourceURI,urlString);
  if (httpParams != null && httpParams.size() > 0) {
    for (    Entry<String,Object> entry : httpParams.entrySet()) {
      URI paramURI=null;
      try {
        paramURI=new URI(XACMLConstants.URLParamPrefix + entry.getKey());
      }
 catch (      URISyntaxException e) {
        throw new RuntimeException(e);
      }
      if (entry.getValue() instanceof String[]) {
        for (        String value : (String[])entry.getValue()) {
          addResource(resources,paramURI,value);
        }
      }
 else {
        addResource(resources,paramURI,entry.getValue().toString());
      }
    }
  }
  Set<Attribute> actions=new HashSet<Attribute>(1);
  addAction(actions);
  Set<Attribute> environment=new HashSet<Attribute>(1);
  try {
    if (remoteHost != null) {
      environment.add(new Attribute(XACMLConstants.DNSNameEnvironmentURI,null,null,new DNSNameAttribute(remoteHost)));
    }
    if (remoteIP != null) {
      InetAddress addr=InetAddress.getByName(remoteIP);
      if (addr instanceof Inet4Address)       environment.add(new Attribute(XACMLConstants.IPAddressEnvironmentURI,null,null,new IPv4AddressAttribute(addr)));
      if (addr instanceof Inet6Address) {
        environment.add(new Attribute(XACMLConstants.IPAddressEnvironmentURI,null,null,new IPv6AddressAttribute(addr)));
      }
    }
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
  RequestCtx ctx=new RequestCtx(subjects,resources,actions,environment);
  return ctx;
}
