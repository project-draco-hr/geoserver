{
  MockHttpServletResponse resp=postAsServletResponse("/rest/imports","");
  assertEquals(201,resp.getStatus());
  assertNotNull(resp.getHeader("Location"));
  String[] split=resp.getHeader("Location").split("/");
  Integer id=Integer.parseInt(split[split.length - 1]);
  ImportContext context=importer.getContext(id);
  File dir=unpack("shape/archsites_epsg_prj.zip");
  unpack("shape/bugsites_esri_prj.tar.gz",dir);
  new File(dir,"extra.file").createNewFile();
  File[] files=dir.listFiles();
  Part[] parts=new Part[files.length];
  for (int i=0; i < files.length; i++) {
    parts[i]=new FilePart(files[i].getName(),files[i]);
  }
  MultipartRequestEntity multipart=new MultipartRequestEntity(parts,new PostMethod().getParams());
  ByteArrayOutputStream bout=new ByteArrayOutputStream();
  multipart.writeRequest(bout);
  MockHttpServletRequest req=createRequest("/rest/imports/" + id + "/tasks");
  req.setContentType(multipart.getContentType());
  req.addHeader("Content-Type",multipart.getContentType());
  req.setMethod("POST");
  req.setContent(bout.toByteArray());
  resp=dispatch(req);
  context=importer.getContext(context.getId());
  assertEquals(2,context.getTasks().size());
  req=createRequest("/rest/imports/" + id + "/tasks/1");
  req.setMethod("DELETE");
  resp=dispatch(req);
  assertEquals(204,resp.getStatus());
  context=importer.getContext(context.getId());
  assertEquals(1,context.getTasks().size());
}
