{
  SimpleFeatureType schema=createNiceMock(SimpleFeatureType.class);
  expect(schema.getTypeName()).andReturn("testSchema").anyTimes();
  expect(schema.getName()).andReturn(new NameImpl("testSchema")).anyTimes();
  replay(schema);
  feature=createNiceMock(SimpleFeature.class);
  expect(feature.getID()).andReturn("testSchema.1").anyTimes();
  expect(feature.getType()).andReturn(schema).anyTimes();
  expect(feature.getFeatureType()).andReturn(schema).anyTimes();
  replay(feature);
  DefaultFeatureCollection fc=new DefaultFeatureCollection();
  fc.add(feature);
  store=createNiceMock(FeatureStore.class);
  expect(store.getSchema()).andReturn(schema).anyTimes();
  expect(store.getFeatures()).andReturn(fc).anyTimes();
  expect(store.getFeatures((Filter)anyObject())).andReturn(fc).anyTimes();
  expect(store.getFeatures((Query)anyObject())).andReturn(fc).anyTimes();
  replay(store);
}
