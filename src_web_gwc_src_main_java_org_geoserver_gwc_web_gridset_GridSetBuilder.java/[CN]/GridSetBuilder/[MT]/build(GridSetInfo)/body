{
  String name=checkNotNull(info.getName(),"Name is not set");
  CoordinateReferenceSystem crs=checkNotNull(info.getCrs(),"CRS is not set");
  String epsgCode=checkNotNull(CRS.toSRS(crs,false),"EPSG code not found for CRS");
  if (!epsgCode.startsWith("EPSG:")) {
    throw new IllegalStateException("EPSG code didn't resolve to a EPSG:XXX identifier: " + epsgCode);
  }
  SRS srs;
  try {
    srs=SRS.getSRS(epsgCode);
  }
 catch (  GeoWebCacheException e) {
    throw new IllegalStateException(e.getMessage());
  }
  ReferencedEnvelope bounds=checkNotNull(info.getBounds(),"Bounds not set");
  if (bounds.isNull()) {
    throw new IllegalArgumentException("Bounds can't be null");
  }
  if (bounds.getWidth() <= 0 || bounds.getHeight() <= 0) {
    throw new IllegalArgumentException("Bounds can't be empty. Witdh: " + bounds.getWidth() + ". Height: "+ bounds.getHeight());
  }
  BoundingBox extent=new BoundingBox(bounds.getMinimum(0),bounds.getMinimum(1),bounds.getMaximum(0),bounds.getMaximum(1));
  boolean alignTopLeft=info.isAlignTopLeft();
  final List<Grid> levels=checkNotNull(info.getLevels(),"GridSet levels not set");
  double[] resolutions;
  double[] scaleDenoms;
  if (info.isResolutionsPreserved()) {
    resolutions=resolutions(levels);
    scaleDenoms=null;
  }
 else {
    resolutions=null;
    scaleDenoms=scaleDenominators(levels);
  }
  String[] scaleNames=scaleNames(levels);
  final Double metersPerUnit=checkNotNull(info.getMetersPerUnit(),"Meters per unit not set");
  final double pixelSize=GridSetFactory.DEFAULT_PIXEL_SIZE_METER;
  final int tileWidth=info.getTileWidth();
  final int tileHeight=info.getTileHeight();
  final boolean yCoordinateFirst=false;
  GridSet gridSet=GridSetFactory.createGridSet(name,srs,extent,alignTopLeft,resolutions,scaleDenoms,metersPerUnit,pixelSize,scaleNames,tileWidth,tileHeight,yCoordinateFirst);
  gridSet.setDescription(info.getDescription());
  return gridSet;
}
