{
  final Request request=new Request();
  Dispatcher.REQUEST.set(request);
  final LayerInfo layer=new LayerInfoImpl();
  LocalPublished.set(layer);
  final WorkspaceInfo ws=new WorkspaceInfoImpl();
  LocalWorkspace.set(ws);
  final Object myState=new Object();
  AdminRequest.start(myState);
  final Authentication auth=new UsernamePasswordAuthenticationToken("user","password");
  SecurityContextHolder.getContext().setAuthentication(auth);
  final ThreadLocalsTransfer transfer=new ThreadLocalsTransfer();
  Future<Void> future=executor.submit(new Callable<Void>(){
    @Override public Void call() throws Exception {
      testApply();
      testCleanup();
      return null;
    }
    private void testApply(){
      transfer.apply();
      assertSame(request,Dispatcher.REQUEST.get());
      assertSame(myState,AdminRequest.get());
      assertSame(layer,LocalPublished.get());
      assertSame(ws,LocalWorkspace.get());
      assertSame(auth,SecurityContextHolder.getContext().getAuthentication());
    }
    private void testCleanup(){
      transfer.cleanup();
      assertNull(Dispatcher.REQUEST.get());
      assertNull(AdminRequest.get());
      assertNull(LocalPublished.get());
      assertNull(LocalWorkspace.get());
      assertNull(SecurityContextHolder.getContext().getAuthentication());
    }
  }
);
  future.get();
}
