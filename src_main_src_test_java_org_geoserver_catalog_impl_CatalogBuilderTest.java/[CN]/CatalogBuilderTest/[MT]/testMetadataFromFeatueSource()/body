{
  CatalogBuilder cb=new CatalogBuilder(getCatalog());
  cb.setStore(cb.buildDataStore("fooStore"));
  FeatureType ft=createMock(FeatureType.class);
  expect(ft.getName()).andReturn(new NameImpl("foo")).anyTimes();
  expect(ft.getCoordinateReferenceSystem()).andReturn(null).anyTimes();
  expect(ft.getGeometryDescriptor()).andReturn(null).anyTimes();
  replay(ft);
  ResourceInfo rInfo=createMock(ResourceInfo.class);
  expect(rInfo.getTitle()).andReturn("foo title");
  expect(rInfo.getDescription()).andReturn("foo description");
  expect(rInfo.getKeywords()).andReturn(new LinkedHashSet<String>(Arrays.asList("foo","bar","baz",""))).anyTimes();
  replay(rInfo);
  FeatureSource fs=createMock(FeatureSource.class);
  expect(fs.getSchema()).andReturn(ft).anyTimes();
  expect(fs.getInfo()).andReturn(rInfo).anyTimes();
  replay(fs);
  FeatureTypeInfo ftInfo=cb.buildFeatureType(fs);
  assertEquals("foo title",ftInfo.getTitle());
  assertEquals("foo description",ftInfo.getDescription());
  assertTrue(ftInfo.getKeywords().contains(new Keyword("foo")));
  assertTrue(ftInfo.getKeywords().contains(new Keyword("bar")));
  assertTrue(ftInfo.getKeywords().contains(new Keyword("baz")));
}
