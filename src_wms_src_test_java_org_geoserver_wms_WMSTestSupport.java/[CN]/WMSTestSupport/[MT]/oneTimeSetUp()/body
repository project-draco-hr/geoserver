{
  super.oneTimeSetUp();
  Map<String,String> namespaces=new HashMap<String,String>();
  namespaces.put("xlink","http://www.w3.org/1999/xlink");
  namespaces.put("xsi","http://www.w3.org/2001/XMLSchema-instance");
  namespaces.put("wfs","http://www.opengis.net/wfs");
  namespaces.put("wcs","http://www.opengis.net/wcs/1.1.1");
  namespaces.put("gml","http://www.opengis.net/gml");
  namespaces.put("sf","http://cite.opengeospatial.org/gmlsf");
  namespaces.put("kml","http://www.opengis.net/kml/2.2");
  getTestData().registerNamespaces(namespaces);
  registerNamespaces(namespaces);
  XMLUnit.setXpathNamespaceContext(new SimpleNamespaceContext(namespaces));
  Catalog catalog=getCatalog();
  LayerGroupInfo group=catalog.getFactory().createLayerGroup();
  LayerInfo lakes=catalog.getLayerByName(getLayerId(MockData.LAKES));
  LayerInfo forests=catalog.getLayerByName(getLayerId(MockData.FORESTS));
  if (lakes != null && forests != null) {
    group.setName(NATURE_GROUP);
    group.getLayers().add(lakes);
    group.getLayers().add(forests);
    CatalogBuilder cb=new CatalogBuilder(catalog);
    cb.calculateLayerGroupBounds(group);
    catalog.add(group);
  }
}
