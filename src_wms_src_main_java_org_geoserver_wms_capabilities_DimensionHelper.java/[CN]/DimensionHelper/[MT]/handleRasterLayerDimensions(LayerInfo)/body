{
  CoverageInfo cvInfo=(CoverageInfo)layer.getResource();
  if (cvInfo == null)   throw new ServiceException("Unable to acquire coverage resource for layer: " + layer.getName());
  DimensionInfo timeInfo=cvInfo.getMetadata().get(ResourceInfo.TIME,DimensionInfo.class);
  DimensionInfo elevInfo=cvInfo.getMetadata().get(ResourceInfo.ELEVATION,DimensionInfo.class);
  boolean hasTime=timeInfo != null && timeInfo.isEnabled();
  boolean hasElevation=elevInfo != null && elevInfo.isEnabled();
  if (!hasTime && !hasElevation) {
    return;
  }
  Catalog catalog=cvInfo.getCatalog();
  if (catalog == null)   throw new ServiceException("Unable to acquire catalog resource for layer: " + layer.getName());
  CoverageStoreInfo csinfo=cvInfo.getStore();
  if (csinfo == null)   throw new ServiceException("Unable to acquire coverage store resource for layer: " + layer.getName());
  AbstractGridCoverage2DReader reader=null;
  try {
    reader=(AbstractGridCoverage2DReader)catalog.getResourcePool().getGridCoverageReader(csinfo,GeoTools.getDefaultHints());
  }
 catch (  Throwable t) {
    LOGGER.log(Level.SEVERE,"Unable to acquire a reader for this coverage with format: " + csinfo.getFormat().getName(),t);
  }
  if (reader == null) {
    throw new ServiceException("Unable to acquire a reader for this coverage with format: " + csinfo.getFormat().getName());
  }
  ReaderDimensionsAccessor dimensions=new ReaderDimensionsAccessor(reader);
  if (mode == Mode.WMS11) {
    String elevUnits=hasElevation ? elevInfo.getUnits() : "";
    String elevUnitSymbol=hasElevation ? elevInfo.getUnitSymbol() : "";
    declareWMS11Dimensions(hasTime,hasElevation,elevUnits,elevUnitSymbol);
  }
  if (hasTime && dimensions.hasTime()) {
    handleTimeDimensionRaster(timeInfo,dimensions);
  }
  if (hasElevation && dimensions.hasElevation()) {
    handleElevationDimensionRaster(elevInfo,dimensions);
  }
}
