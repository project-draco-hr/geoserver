{
  String elevationMetadata=null;
  final StringBuilder buff=new StringBuilder();
  if (DimensionPresentation.LIST == dimension.getPresentation()) {
    for (    Object val : values) {
      if (val instanceof Double) {
        buff.append(val);
      }
 else {
        NumberRange<Double> range=(NumberRange<Double>)val;
        buff.append(range.getMinimum()).append("/").append(range.getMaximum()).append("/0");
      }
      buff.append(",");
    }
    elevationMetadata=buff.substring(0,buff.length() - 1).toString().replaceAll("\\[","").replaceAll("\\]","").replaceAll(" ","");
  }
 else   if (DimensionPresentation.CONTINUOUS_INTERVAL == dimension.getPresentation()) {
    NumberRange<Double> range=getMinMaxZInterval(values);
    buff.append(range.getMinimum());
    buff.append("/");
    buff.append(range.getMaximum());
    buff.append("/0");
    elevationMetadata=buff.toString();
  }
 else   if (DimensionPresentation.DISCRETE_INTERVAL == dimension.getPresentation()) {
    NumberRange<Double> range=getMinMaxZInterval(values);
    buff.append(range.getMinimum());
    buff.append("/");
    buff.append(range.getMaximum());
    buff.append("/");
    BigDecimal resolution=dimension.getResolution();
    if (resolution != null) {
      buff.append(resolution.doubleValue());
    }
 else {
      if (values.size() >= 2 && allDoubles(values)) {
        int count=2, i=2;
        Double[] zPositions=new Double[count];
        for (        Object val : values) {
          zPositions[count - i--]=(Double)val;
          if (i == 0)           break;
        }
        double span=zPositions[count - 1] - zPositions[count - 2];
        buff.append(span);
      }
 else {
        buff.append(0);
      }
    }
    elevationMetadata=buff.toString();
  }
  return elevationMetadata;
}
