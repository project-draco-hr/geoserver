{
  final CoverageStoreInfo store=(CoverageStoreInfo)ci.getStore();
  final AbstractGridCoverage2DReader reader=(AbstractGridCoverage2DReader)catalog.getResourcePool().getGridCoverageReader(store,GeoTools.getDefaultHints());
  if (reader == null)   throw new Exception("Unable to acquire a reader for this coverage with format: " + store.getFormat().getName());
  final GeneralEnvelope originalEnvelope=reader.getOriginalEnvelope();
  final GridEnvelope originalRange=reader.getOriginalGridRange();
  final Format coverageFormat=reader.getFormat();
  final GridCoverage2D gc;
  final ParameterValueGroup readParams=coverageFormat.getReadParameters();
  final Map parameters=CoverageUtils.getParametersKVP(readParams);
  final int minX=originalRange.getLow(0);
  final int minY=originalRange.getLow(1);
  final int width=originalRange.getSpan(0);
  final int height=originalRange.getSpan(1);
  final int maxX=minX + (width <= 5 ? width : 5);
  final int maxY=minY + (height <= 5 ? height : 5);
  final GridEnvelope2D testRange=new GridEnvelope2D(minX,minY,maxX,maxY);
  final MathTransform gridToWorldCorner=reader.getOriginalGridToWorld(PixelInCell.CELL_CORNER);
  final GeneralEnvelope testEnvelope=CRS.transform(gridToWorldCorner,new GeneralEnvelope(testRange.getBounds()));
  testEnvelope.setCoordinateReferenceSystem(originalEnvelope.getCoordinateReferenceSystem());
  String maxAllowedTiles=ImageMosaicFormat.MAX_ALLOWED_TILES.getName().toString();
  if (parameters.keySet().contains(maxAllowedTiles)) {
    parameters.put(maxAllowedTiles,1);
  }
  parameters.put(AbstractGridFormat.READ_GRIDGEOMETRY2D.getName().toString(),new GridGeometry2D(testRange,testEnvelope));
  return (GridCoverage2D)reader.read(CoverageUtils.getParameters(readParams,parameters,true));
}
