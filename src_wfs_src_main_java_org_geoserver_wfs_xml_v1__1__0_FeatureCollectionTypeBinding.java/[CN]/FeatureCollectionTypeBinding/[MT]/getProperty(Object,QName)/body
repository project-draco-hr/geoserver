{
  if (GML.featureMembers.equals(name)) {
    if (encodeFeatureMember) {
      return null;
    }
    FeatureCollectionType featureCollection=(FeatureCollectionType)object;
    if (!featureCollection.getFeature().isEmpty()) {
      return handleFeatureCollection(featureCollection);
    }
  }
 else   if (GML.featureMember.equals(name)) {
    if (!encodeFeatureMember) {
      return null;
    }
    FeatureCollectionType featureCollection=(FeatureCollectionType)object;
    if (!featureCollection.getFeature().isEmpty()) {
      return handleFeatureCollection(featureCollection);
    }
  }
 else   if (GML.boundedBy.equals(name) && generateBounds) {
    FeatureCollectionType featureCollection=(FeatureCollectionType)object;
    ReferencedEnvelope env=null;
    for (Iterator it=featureCollection.getFeature().iterator(); it.hasNext(); ) {
      FeatureCollection fc=(FeatureCollection)it.next();
      if (env == null) {
        env=fc.getBounds();
      }
 else {
        env.expandToInclude(fc.getBounds());
      }
      if (env != null && env.getCoordinateReferenceSystem() == null) {
        CoordinateReferenceSystem crs=fc.getSchema().getCoordinateReferenceSystem();
        if (crs == null) {
          FeatureTypeInfo info=catalog.getFeatureTypeByName(fc.getSchema().getName());
          if (info != null) {
            crs=info.getCRS();
          }
        }
        env=new ReferencedEnvelope(env,crs);
      }
      if (env != null) {
        return !(env.isNull() || env.isEmpty()) ? env : null;
      }
    }
  }
  return super.getProperty(object,name);
}
