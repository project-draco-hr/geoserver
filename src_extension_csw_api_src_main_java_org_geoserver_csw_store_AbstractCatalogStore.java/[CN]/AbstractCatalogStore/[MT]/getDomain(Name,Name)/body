{
  final RecordDescriptor rd=descriptorByType.get(typeName.getLocalPart());
  if (rd == null) {
    throw new IOException(typeName.getLocalPart() + " is not a supported type");
  }
  final PropertyName property=rd.translateProperty(attributeName);
  AttributeDescriptor ad=(AttributeDescriptor)property.evaluate(rd.getFeatureType());
  if (ad == null) {
    return new CloseableIteratorAdapter<String>(new ArrayList<String>().iterator());
  }
  Query q=new Query(typeName.getLocalPart());
  q.setProperties(Arrays.asList(translateProperty(rd,attributeName)));
  final Set<String> values=new HashSet<String>();
  getRecords(q,Transaction.AUTO_COMMIT,rd.getOutputSchema()).accepts(new FeatureVisitor(){
    @Override public void visit(    Feature feature){
      Property prop=(Property)property.evaluate(feature);
      if (prop != null)       try {
        values.add(new String(((String)prop.getValue()).getBytes("ISO-8859-1"),"UTF-8"));
      }
 catch (      UnsupportedEncodingException e) {
        throw new RuntimeException(e);
      }
    }
  }
,null);
  List<String> result=new ArrayList(values);
  Collections.sort(result);
  return new CloseableIteratorAdapter<String>(result.iterator());
}
