{
  URL loginUrl=createURLFromCasURI("/login");
  HttpURLConnection conn=(HttpURLConnection)loginUrl.openConnection();
  String responseString=readResponse(conn);
  String loginTicket=extractFormParameter(responseString,"\"lt\"");
  if (loginTicket == null)   throw new IOException(" No login ticket for: " + loginUrl.toString());
  String execution=extractFormParameter(responseString,"\"execution\"");
  if (execution == null)   throw new IOException(" No hidden execution field for: " + loginUrl.toString());
  List<HttpCookie> cookies=getCookies(conn);
  HttpCookie sessionCookie=getCookieNamed(cookies,"JSESSIONID");
  String sessionCookieSend=sessionCookie.toString();
  Map<String,String> paramMap=new HashMap<String,String>();
  paramMap.put("username",username);
  paramMap.put("password",password);
  paramMap.put("lt",loginTicket);
  paramMap.put("_eventId","submit");
  paramMap.put("submit","LOGIN");
  paramMap.put("execution",execution);
  if (serviceURL != null)   paramMap.put("service",serviceURL.toString());
  conn=(HttpURLConnection)loginUrl.openConnection();
  conn.setRequestMethod("POST");
  conn.setDoOutput(true);
  conn.setDoInput(true);
  conn.setRequestProperty("Cookie",sessionCookieSend);
  writeParamsForPostAndSend(conn,paramMap);
  cookies=getCookies(conn);
  readResponse(conn);
  if (serviceURL != null) {
    String ticket=getResponseHeaderValues(conn,"Location").get(0);
  }
  warningCookie=getCookieNamed(cookies,"CASPRIVACY");
  ticketGrantingCookie=getCookieNamed(cookies,"CASTGC");
  return warningCookie != null;
}
