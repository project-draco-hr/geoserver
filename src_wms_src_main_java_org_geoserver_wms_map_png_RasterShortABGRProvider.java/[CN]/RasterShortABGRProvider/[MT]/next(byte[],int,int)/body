{
  int shortsIdx=cursor.next();
  int i=offset;
  final int max=offset + length;
  if (hasAlpha) {
    if (bgrOrder) {
      while (i < max) {
        final short a=shorts[shortsIdx++];
        final short b=shorts[shortsIdx++];
        final short g=shorts[shortsIdx++];
        final short r=shorts[shortsIdx++];
        scanline[i++]=(byte)((r >> 8) & 0xFF);
        scanline[i++]=(byte)(r & 0xFF);
        scanline[i++]=(byte)((g >> 8) & 0xFF);
        scanline[i++]=(byte)(g & 0xFF);
        scanline[i++]=(byte)((b >> 8) & 0xFF);
        scanline[i++]=(byte)(b & 0xFF);
        scanline[i++]=(byte)((a >> 8) & 0xFF);
        scanline[i++]=(byte)(a & 0xFF);
      }
    }
 else {
      while (i < max) {
        final short r=shorts[shortsIdx++];
        final short g=shorts[shortsIdx++];
        final short b=shorts[shortsIdx++];
        final short a=shorts[shortsIdx++];
        scanline[i++]=(byte)((r >> 8) & 0xFF);
        scanline[i++]=(byte)(r & 0xFF);
        scanline[i++]=(byte)((g >> 8) & 0xFF);
        scanline[i++]=(byte)(g & 0xFF);
        scanline[i++]=(byte)((b >> 8) & 0xFF);
        scanline[i++]=(byte)(b & 0xFF);
        scanline[i++]=(byte)((a >> 8) & 0xFF);
        scanline[i++]=(byte)(a & 0xFF);
      }
    }
  }
 else {
    if (bgrOrder) {
      while (i < max) {
        final short b=shorts[shortsIdx++];
        final short g=shorts[shortsIdx++];
        final short r=shorts[shortsIdx++];
        scanline[i++]=(byte)((r >> 8) & 0xFF);
        scanline[i++]=(byte)(r & 0xFF);
        scanline[i++]=(byte)((g >> 8) & 0xFF);
        scanline[i++]=(byte)(g & 0xFF);
        scanline[i++]=(byte)((b >> 8) & 0xFF);
        scanline[i++]=(byte)(b & 0xFF);
      }
    }
 else {
      while (i < max) {
        final short r=shorts[shortsIdx++];
        final short g=shorts[shortsIdx++];
        final short b=shorts[shortsIdx++];
        scanline[i++]=(byte)((r >> 8) & 0xFF);
        scanline[i++]=(byte)(r & 0xFF);
        scanline[i++]=(byte)((g >> 8) & 0xFF);
        scanline[i++]=(byte)(g & 0xFF);
        scanline[i++]=(byte)((b >> 8) & 0xFF);
        scanline[i++]=(byte)(b & 0xFF);
      }
    }
  }
}
