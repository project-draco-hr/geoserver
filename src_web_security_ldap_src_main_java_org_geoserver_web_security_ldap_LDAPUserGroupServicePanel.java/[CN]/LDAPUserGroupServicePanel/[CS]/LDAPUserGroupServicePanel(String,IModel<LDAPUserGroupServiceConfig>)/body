{
  super(id,model);
  add(new TextField<String>("serverURL").setRequired(true));
  add(new CheckBox("useTLS"));
  add(new TextField<String>("groupSearchBase").setRequired(true));
  add(new TextField<String>("groupNameAttribute"));
  add(new TextField<String>("groupFilter"));
  add(new TextField<String>("allGroupsSearchFilter"));
  add(new TextField<String>("groupSearchFilter"));
  add(new TextField<String>("groupMembershipAttribute"));
  add(new TextField<String>("userSearchBase").setRequired(true));
  add(new TextField<String>("userNameAttribute"));
  add(new TextField<String>("userFilter"));
  add(new TextField<String>("allUsersSearchFilter"));
  add(new TextField<String>("populatedAttributes"));
  add(new AjaxCheckBox("bindBeforeGroupSearch"){
    private static final long serialVersionUID=-6388847010436939988L;
    @Override protected void onUpdate(    AjaxRequestTarget target){
      LDAPAuthenticationPanel ldapAuthenticationPanel=(LDAPAuthenticationPanel)LDAPUserGroupServicePanel.this.get("authenticationPanel");
      ldapAuthenticationPanel.resetModel();
      ldapAuthenticationPanel.setVisible(getModelObject().booleanValue());
      target.add(ldapAuthenticationPanel);
    }
  }
);
  LDAPAuthenticationPanel authPanel=new LDAPAuthenticationPanel("authenticationPanel");
  authPanel.setVisible(model.getObject().isBindBeforeGroupSearch());
  authPanel.setOutputMarkupPlaceholderTag(true);
  add(authPanel);
}
