{
  try {
    setServices("personalizedRoles");
    insertValues(roleStore);
    insertValues(usergroupStore);
    String username="persUser";
    GeoServerUser theUser=null;
    theUser=usergroupStore.createUserObject(username,"",true);
    theUser.getProperties().put("propertyA","A");
    theUser.getProperties().put("propertyB","B");
    theUser.getProperties().put("propertyC","C");
    usergroupStore.addUser(theUser);
    GeoServerRole role=null;
    role=roleStore.createRoleObject("persrole1");
    role.getProperties().put("propertyA","");
    role.getProperties().put("propertyX","X");
    roleStore.addRole(role);
    roleStore.associateRoleToUser(role,username);
    role=roleStore.createRoleObject("persrole2");
    role.getProperties().put("propertyB","");
    role.getProperties().put("propertyY","Y");
    roleStore.addRole(role);
    roleStore.associateRoleToUser(role,username);
    syncbackends();
    UserDetails details=usergroupService.loadUserByUsername(username);
    Collection<? extends GrantedAuthority> authColl=details.getAuthorities();
    for (    GrantedAuthority auth : authColl) {
      role=(GeoServerRole)auth;
      if ("persrole1".equals(role.getAuthority())) {
        assertEquals("A",role.getProperties().get("propertyA"));
        assertEquals("X",role.getProperties().get("propertyX"));
        GeoServerRole anonymousRole=roleStore.getRoleByName(role.getAuthority());
        assertFalse(role.isAnonymous());
        assertTrue(anonymousRole.isAnonymous());
        assertFalse(role == anonymousRole);
        assertFalse(role.equals(anonymousRole));
        assertTrue(theUser.getUsername().equals(role.getUserName()));
        assertNull(anonymousRole.getUserName());
      }
 else       if ("persrole2".equals(role.getAuthority())) {
        assertEquals("B",role.getProperties().get("propertyB"));
        assertEquals("Y",role.getProperties().get("propertyY"));
      }
 else {
        Assert.fail("Unknown role " + role.getAuthority() + "for user "+ username);
      }
    }
  }
 catch (  Exception ex) {
    Assert.fail(ex.getMessage());
  }
}
