{
  Assert.isInstanceOf(BufferedImageLegendGraphic.class,legend);
  BufferedImage image=((BufferedImageLegendGraphic)legend).getLegend();
  final MemoryCacheImageOutputStream memOutStream=new MemoryCacheImageOutputStream(output);
  final ImageWorker worker=new ImageWorker(image);
  final PlanarImage finalImage=(image.getColorModel() instanceof DirectColorModel) ? worker.forceComponentColorModel().getPlanarImage() : worker.getPlanarImage();
  final Iterator<ImageWriter> it;
  it=ImageIO.getImageWritersByMIMEType(PNGLegendOutputFormat.MIME_TYPE);
  ImageWriter writer=null;
  if (!it.hasNext()) {
    throw new IllegalStateException("No PNG ImageWriter found");
  }
 else {
    writer=(ImageWriter)it.next();
  }
  final ImageWriteParam iwp=writer.getDefaultWriteParam();
  if (writer.getClass().getName().equals("com.sun.media.imageioimpl.plugins.png.CLibPNGImageWriter")) {
    iwp.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
    iwp.setCompressionQuality(0.75f);
  }
  writer.setOutput(memOutStream);
  try {
    writer.write(null,new IIOImage(finalImage,null,null),iwp);
    memOutStream.flush();
    memOutStream.close();
  }
  finally {
    writer.dispose();
  }
}
