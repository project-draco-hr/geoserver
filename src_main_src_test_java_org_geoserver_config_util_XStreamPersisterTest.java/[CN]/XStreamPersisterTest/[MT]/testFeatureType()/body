{
  Catalog catalog=new CatalogImpl();
  CatalogFactory cFactory=catalog.getFactory();
  WorkspaceInfo ws=cFactory.createWorkspace();
  ws.setName("foo");
  catalog.add(ws);
  NamespaceInfo ns=cFactory.createNamespace();
  ns.setPrefix("acme");
  ns.setURI("http://acme.org");
  catalog.add(ns);
  DataStoreInfo ds=cFactory.createDataStore();
  ds.setWorkspace(ws);
  ds.setName("foo");
  catalog.add(ds);
  FeatureTypeInfo ft=cFactory.createFeatureType();
  ft.setStore(ds);
  ft.setNamespace(ns);
  ft.setName("ft");
  ft.setAbstract("abstract");
  ft.setSRS("EPSG:4326");
  ft.setNativeCRS(CRS.decode("EPSG:4326"));
  ft.setLinearizationTolerance(new Measure(10,SI.METER));
  ByteArrayOutputStream out=out();
  persister.save(ft,out);
  persister.setCatalog(catalog);
  ft=persister.load(in(out),FeatureTypeInfo.class);
  assertNotNull(ft);
  assertEquals("ft",ft.getName());
  assertEquals(ds,ft.getStore());
  assertEquals(ns,ft.getNamespace());
  assertEquals("EPSG:4326",ft.getSRS());
  assertEquals(new Measure(10,SI.METER),ft.getLinearizationTolerance());
  assertTrue(CRS.equalsIgnoreMetadata(CRS.decode("EPSG:4326"),ft.getNativeCRS()));
}
