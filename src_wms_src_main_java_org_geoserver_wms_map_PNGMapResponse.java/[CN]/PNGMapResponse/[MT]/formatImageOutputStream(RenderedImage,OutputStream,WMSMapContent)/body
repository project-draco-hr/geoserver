{
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.fine("Writing png image ...");
  }
  final String format=mapContent.getRequest().getFormat();
  if ("image/png8".equalsIgnoreCase(format) || (mapContent.getPaletteInverter() != null)) {
    InverseColorMapOp paletteInverter=mapContent.getPaletteInverter();
    image=forceIndexed8Bitmask(image,paletteInverter);
  }
  Boolean PNGNativeAcc=wms.getPNGNativeAcceleration();
  float quality=(100 - wms.getPngCompression()) / 100.0f;
  SampleModel sm=image.getSampleModel();
  int numBits=sm.getSampleSize(0);
  boolean nativeAcceleration=PNGNativeAcc.booleanValue() && !(numBits > 1 && numBits < 8);
  new ImageWorker(image).writePNG(outStream,"FILTERED",quality,nativeAcceleration,image.getColorModel() instanceof IndexColorModel);
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.fine("Writing png image ... done!");
  }
}
