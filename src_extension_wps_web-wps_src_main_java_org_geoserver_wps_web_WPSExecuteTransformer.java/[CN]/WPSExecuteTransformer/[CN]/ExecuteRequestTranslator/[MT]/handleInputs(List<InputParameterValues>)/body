{
  start("wps:DataInputs");
  for (  InputParameterValues pv : inputs) {
    for (int i=0; i < pv.values.size(); i++) {
      ParameterValue value=pv.values.get(i);
      if (value == null || value.value == null) {
        continue;
      }
      start("wps:Input");
      element("ows:Identifier",pv.paramName);
      if (pv.isBoundingBox()) {
        ReferencedEnvelope env=(ReferencedEnvelope)value.value;
        start("wps:Data");
        String crs=null;
        if (env.getCoordinateReferenceSystem() != null) {
          try {
            crs="EPSG:" + CRS.lookupEpsgCode(env.getCoordinateReferenceSystem(),false);
          }
 catch (          Exception e) {
            LOGGER.log(Level.WARNING,"Could not get EPSG code for " + crs);
          }
        }
        if (crs == null) {
          start("wps:BoundingBoxData",attributes("dimensions","2"));
        }
 else {
          start("wps:BoundingBoxData",attributes("crs",crs,"dimensions","2"));
        }
        element("ows:LowerCorner",env.getMinX() + " " + env.getMinY());
        element("ows:UpperCorner",env.getMaxX() + " " + env.getMaxY());
        end("wps:BoundingBoxData");
        end("wps:Data");
      }
 else       if (pv.isComplex()) {
        if (value.type == ParameterType.TEXT) {
          handleTextInput(value);
        }
 else         if (value.type == ParameterType.VECTOR_LAYER) {
          handleVectorInput(value);
        }
 else         if (value.type == ParameterType.RASTER_LAYER) {
          handleRasterLayerInput(value);
        }
 else         if (value.type == ParameterType.REFERENCE) {
          handleReferenceInput(value);
        }
 else         if (value.type == ParameterType.SUBPROCESS) {
          handleSubprocessInput(value);
        }
 else {
          char[] comment="Can't handle this data type yet".toCharArray();
          try {
            ((LexicalHandler)contentHandler).comment(comment,0,comment.length);
          }
 catch (          SAXException se) {
            throw new RuntimeException(se);
          }
        }
      }
 else       if (pv.isCoordinateReferenceSystem()) {
        handleCoordinateReferenceSystem(value);
      }
 else {
        start("wps:Data");
        element("wps:LiteralData",Converters.convert(value.value,String.class));
        end("wps:Data");
      }
      end("wps:Input");
    }
  }
  end("wps:DataInputs");
}
