{
  UsernamePasswordAuthenticationToken auth=(UsernamePasswordAuthenticationToken)super.doAuthenticate(authentication,request);
  if (auth == null)   return null;
  Set<GrantedAuthority> roles=new HashSet<GrantedAuthority>();
  roles.addAll(auth.getAuthorities());
  if (getSecurityManager() != null) {
    RoleCalculator calc=new RoleCalculator(getSecurityManager().getActiveRoleService());
    try {
      roles.addAll(calc.calculateRoles(new GeoServerUser(auth.getName())));
    }
 catch (    IOException e) {
      throw new AuthenticationServiceException(e.getLocalizedMessage(),e);
    }
  }
  if (!auth.getAuthorities().contains(GeoServerRole.AUTHENTICATED_ROLE)) {
    roles.add(GeoServerRole.AUTHENTICATED_ROLE);
  }
  if (adminRole != null && !adminRole.equals("") && !roles.contains(GeoServerRole.ADMIN_ROLE)) {
    for (    GrantedAuthority authority : auth.getAuthorities()) {
      if (authority.getAuthority().equalsIgnoreCase("ROLE_" + adminRole)) {
        roles.add(GeoServerRole.ADMIN_ROLE);
        break;
      }
    }
  }
  if (groupAdminRole != null && !groupAdminRole.equals("") && !roles.contains(GeoServerRole.GROUP_ADMIN_ROLE)) {
    for (    GrantedAuthority authority : auth.getAuthorities()) {
      if (authority.getAuthority().equalsIgnoreCase("ROLE_" + groupAdminRole)) {
        roles.add(GeoServerRole.GROUP_ADMIN_ROLE);
        break;
      }
    }
  }
  UsernamePasswordAuthenticationToken newAuth=new UsernamePasswordAuthenticationToken(auth.getPrincipal(),auth.getCredentials(),roles);
  newAuth.setDetails(auth.getDetails());
  return newAuth;
}
