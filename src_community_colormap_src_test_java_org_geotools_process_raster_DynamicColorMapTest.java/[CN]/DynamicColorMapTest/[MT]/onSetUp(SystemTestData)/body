{
  super.onSetUp(testData);
  addLayerAccessRule("*","*",AccessMode.READ,"*");
  addLayerAccessRule("*","*",AccessMode.WRITE,"*");
  catalog=getCatalog();
  Map<String,String> namespaces=new HashMap<String,String>();
  namespaces.put("html","http://www.w3.org/1999/xhtml");
  namespaces.put("sld","http://www.opengis.net/sld");
  namespaces.put("ogc","http://www.opengis.net/ogc");
  namespaces.put("atom","http://www.w3.org/2005/Atom");
  XMLUnit.setXpathNamespaceContext(new SimpleNamespaceContext(namespaces));
  xp=XMLUnit.newXpathEngine();
  URL zip=getClass().getResource("test-data/watertemp_dynamic.zip");
  InputStream is=null;
  byte[] bytes;
  try {
    is=zip.openStream();
    bytes=IOUtils.toByteArray(is);
  }
  finally {
    IOUtils.closeQuietly(is);
  }
  URL style=getClass().getResource("test-data/style_rgb.sld");
  GeoServerResourceLoader loader=catalog.getResourceLoader();
  final String dataDir=loader.getBaseDirectory().getAbsolutePath();
  try {
    is=style.openStream();
    org.geoserver.data.util.IOUtils.copy(is,new File(dataDir + "/styles/style_rgb.sld"));
  }
  finally {
    IOUtils.closeQuietly(is);
  }
  WorkspaceInfo ws=catalog.getWorkspaceByName("gs");
  if (ws == null) {
    throw new IllegalArgumentException("Workspace not present");
  }
  MockHttpServletResponse response=putAsServletResponse("rest/workspaces/gs/coveragestores/watertemp_dynamic/file.imagemosaic",bytes,"application/zip");
  assertEquals(201,response.getStatus());
}
