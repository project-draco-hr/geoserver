{
  if (!ImageUtilities.isMediaLibAvailable()) {
    Assert.assertTrue(true);
    return;
  }
  GeoServer geoServer=getGeoServerApplication().getGeoServer();
  GeoServerInfo global=geoServer.getGlobal();
  JAIInfo info=(JAIInfo)global.getJAI();
  Assert.assertFalse(info.isAllowNativeWarp());
  JAIExt.registerJAIDescriptor("Warp");
  JAIEXTInfo jeinfo=info.getJAIEXTInfo();
  Set<String> jeOps=jeinfo.getJAIEXTOperations();
  jeOps.remove("Warp");
  jeinfo.setJAIEXTOperations(jeOps);
  jeinfo.getJAIOperations().add("Warp");
  info.setJAIEXTInfo(jeinfo);
  global.setJAI(info);
  geoServer.save(global);
  login();
  tester.startPage(JAIPage.class);
  tester.assertRenderedPage(JAIPage.class);
  Palette p;
  Collection jaiext;
  Object factory;
  boolean isJAIExtEnabled=ImageWorker.isJaiExtEnabled();
  if (isJAIExtEnabled) {
    tester.assertComponent("form:jaiext",JAIEXTPanel.class);
    tester.assertComponent("form:jaiext:jaiextOps",Palette.class);
    p=(Palette)tester.getComponentFromLastRenderedPage("form:jaiext:jaiextOps");
    jaiext=p.getChoices();
    assertNotNull(jaiext);
    assertTrue(!jaiext.contains("Warp"));
  }
 else {
    tester.assertInvisible("form:jaiext");
  }
  FormTester form=tester.newFormTester("form");
  form.setValue("allowNativeWarp",true);
  form.submit("submit");
  tester.assertNoErrorMessage();
  info=(JAIInfo)global.getJAI();
  if (isJAIExtEnabled) {
    Assert.assertTrue(info.isAllowNativeWarp());
    factory=info.getJAI().getOperationRegistry().getFactory(RenderedRegistryMode.MODE_NAME,"Warp");
    Assert.assertTrue(factory instanceof MlibWarpRIF);
  }
 else {
    Assert.assertFalse(info.isAllowNativeWarp());
    factory=info.getJAI().getOperationRegistry().getFactory(RenderedRegistryMode.MODE_NAME,"Warp");
    Assert.assertTrue(factory instanceof WarpRIF);
  }
  tester.startPage(JAIPage.class);
  tester.assertRenderedPage(JAIPage.class);
  if (isJAIExtEnabled) {
    tester.assertComponent("form:jaiext",JAIEXTPanel.class);
    tester.assertComponent("form:jaiext:jaiextOps",Palette.class);
    p=(Palette)tester.getComponentFromLastRenderedPage("form:jaiext:jaiextOps");
    jaiext=p.getChoices();
    assertNotNull(jaiext);
    assertTrue(!jaiext.contains("Warp"));
  }
  form=tester.newFormTester("form");
  form.setValue("allowNativeWarp",false);
  form.submit("submit");
  tester.assertNoErrorMessage();
  info=(JAIInfo)global.getJAI();
  Assert.assertFalse(info.isAllowNativeWarp());
  factory=info.getJAI().getOperationRegistry().getFactory(RenderedRegistryMode.MODE_NAME,"Warp");
  Assert.assertTrue(factory instanceof WarpRIF);
}
