{
  Tile parent=tile.getParent();
  Set<String> parentFids=getUpwardFids(parent,conn);
  Set<String> currFids=new HashSet<String>();
  FeatureIterator fi=null;
  try {
    FeatureSource fs=featureType.getFeatureSource(null,null);
    GeometryDescriptor geom=fs.getSchema().getGeometryDescriptor();
    CoordinateReferenceSystem nativeCrs=geom.getCoordinateReferenceSystem();
    ReferencedEnvelope nativeTileEnvelope=null;
    if (!CRS.equalsIgnoreMetadata(Tile.WGS84,nativeCrs)) {
      try {
        nativeTileEnvelope=tile.getEnvelope().transform(nativeCrs,true);
      }
 catch (      ProjectionException pe) {
        LOGGER.log(Level.INFO,"Could not reproject the current tile bounds " + tile.getEnvelope() + " to the native SRS, intersecting with "+ "the layer declared lat/lon bounds and retrying");
        ReferencedEnvelope llEnv=featureType.getLatLonBoundingBox();
        Envelope reduced=tile.getEnvelope().intersection(llEnv);
        if (reduced.isNull() || reduced.getWidth() == 0 || reduced.getHeight() == 0) {
          return Collections.emptySet();
        }
        ReferencedEnvelope refRed=new ReferencedEnvelope(reduced,tile.getEnvelope().getCoordinateReferenceSystem());
        nativeTileEnvelope=refRed.transform(nativeCrs,true);
      }
    }
 else {
      nativeTileEnvelope=tile.getEnvelope();
    }
    fi=getSortedFeatures(geom,tile.getEnvelope(),nativeTileEnvelope,conn);
    MathTransform tx=null;
    double[] coords=new double[2];
    boolean first=true;
    while (fi.hasNext() && currFids.size() < featuresPerTile) {
      SimpleFeature f=(SimpleFeature)fi.next();
      if (parentFids.contains(f.getID()))       continue;
      if (first) {
        first=false;
        CoordinateReferenceSystem nativeCRS=f.getType().getCoordinateReferenceSystem();
        featureType.getFeatureType().getCoordinateReferenceSystem();
        if (nativeCRS != null && !CRS.equalsIgnoreMetadata(nativeCRS,Tile.WGS84)) {
          tx=CRS.findMathTransform(nativeCRS,Tile.WGS84);
        }
      }
      Point p=((Geometry)f.getDefaultGeometry()).getCentroid();
      coords[0]=p.getX();
      coords[1]=p.getY();
      if (tx != null)       tx.transform(coords,0,coords,0,1);
      if (tile.contains(coords[0],coords[1]))       currFids.add(f.getID());
    }
  }
  finally {
    if (fi != null)     fi.close();
  }
  return currFids;
}
