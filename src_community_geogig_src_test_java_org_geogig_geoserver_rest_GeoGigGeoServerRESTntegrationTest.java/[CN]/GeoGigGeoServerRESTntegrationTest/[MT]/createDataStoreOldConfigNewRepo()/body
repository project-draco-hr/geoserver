{
  GeoGIG geogig=geogigData.createRepository("new_repo_old_config");
  try {
    geogig.command(InitOp.class).call();
    final File repo=geogig.command(ResolveGeogigDir.class).getFile().get().getParentFile();
    assertTrue(RepositoryManager.isGeogigDirectory(repo));
    final String repository=repo.getAbsolutePath();
    String message="<dataStore>\n" + " <name>repo_old_config</name>\n" + " <type>GeoGIG</type>\n"+ " <connectionParameters>\n"+ "   <entry key=\"geogig_repository\">${repository}</entry>\n"+ " </connectionParameters>\n"+ "</dataStore>\n";
    message=message.replace("${repository}",repository);
    Catalog catalog=getCatalog();
    final String uri="/rest/workspaces/gigws/datastores";
    MockHttpServletResponse response=postAsServletResponse(uri,message,"text/xml");
    assertEquals(201,response.getStatus());
    String locationHeader=response.getHeader("Location");
    assertNotNull(locationHeader);
    assertTrue(locationHeader.endsWith("/workspaces/gigws/datastores/repo_old_config"));
    DataStoreInfo newDataStore=catalog.getDataStoreByName("repo_old_config");
    assertNotNull(newDataStore);
    DataStore ds=(DataStore)newDataStore.getDataStore(null);
    assertNotNull(ds);
    checkNewConfig(newDataStore);
  }
  finally {
    geogig.close();
  }
}
