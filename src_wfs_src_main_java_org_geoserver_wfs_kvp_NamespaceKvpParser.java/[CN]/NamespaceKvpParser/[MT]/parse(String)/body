{
  List<String> decls=(List<String>)new FlatKvpParser("",String.class).parse(value);
  NamespaceSupport ctx=new NamespaceSupport();
  String[] parts;
  String prefix;
  String uri;
  for (  String decl : decls) {
    decl=decl.trim();
    if (!decl.startsWith("xmlns(") || !decl.endsWith(")")) {
      throw new IllegalArgumentException("Illegal namespace declaration, " + "should be of the form xmlns(<prefix>=<ns uri>): " + decl);
    }
    decl=decl.substring("xmlns(".length());
    decl=decl.substring(0,decl.length() - 1);
    parts=decl.split("=");
    if (parts.length == 1) {
      prefix=XMLConstants.DEFAULT_NS_PREFIX;
      uri=parts[0];
    }
 else     if (parts.length == 2) {
      prefix=parts[0];
      uri=parts[1];
    }
 else {
      throw new IllegalArgumentException("Illegal namespace declaration, " + "should be of the form prefix=<namespace uri>: " + decl);
    }
    try {
      new URI(uri);
    }
 catch (    URISyntaxException e) {
      throw new IllegalArgumentException("Illegal namespace declaration: " + decl);
    }
    ctx.declarePrefix(prefix,uri);
  }
  return ctx;
}
