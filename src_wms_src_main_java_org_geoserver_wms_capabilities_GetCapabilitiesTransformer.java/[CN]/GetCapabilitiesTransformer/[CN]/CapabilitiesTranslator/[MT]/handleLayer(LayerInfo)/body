{
  AttributesImpl qatts=new AttributesImpl();
  boolean queryable=wmsConfig.isQueryable(layer);
  qatts.addAttribute("","queryable","queryable","",queryable ? "1" : "0");
  boolean opaque=wmsConfig.isOpaque(layer);
  qatts.addAttribute("","opaque","opaque","",opaque ? "1" : "0");
  Integer cascaded=wmsConfig.getCascadedHopCount(layer);
  if (cascaded != null) {
    qatts.addAttribute("","cascaded","cascaded","",String.valueOf(cascaded));
  }
  start("Layer",qatts);
  element("Name",layer.prefixedName());
  element("Title",layer.getResource().getTitle());
  element("Abstract",layer.getResource().getAbstract());
  handleKeywordList(layer.getResource().getKeywords());
  final String srs=layer.getResource().getSRS();
  element("SRS",srs);
  ReferencedEnvelope bbox;
  try {
    bbox=layer.getResource().boundingBox();
  }
 catch (  Exception e) {
    throw new RuntimeException("Unexpected error obtaining bounding box for layer " + layer.getName(),e);
  }
  Envelope llbbox=layer.getResource().getLatLonBoundingBox();
  handleLatLonBBox(llbbox);
  if (bbox != null) {
    handleBBox(bbox,srs);
    handleAdditionalBBox(bbox,srs,layer);
  }
  if (layer.getType() == PublishedType.VECTOR) {
    dimensionHelper.handleVectorLayerDimensions(layer);
  }
 else   if (layer.getType() == PublishedType.RASTER) {
    dimensionHelper.handleRasterLayerDimensions(layer);
  }
  handleAttribution(layer);
  handleAuthorityURL(layer.getAuthorityURLs());
  handleLayerIdentifiers(layer.getIdentifiers());
  handleMetadataList(layer.getResource().getMetadataLinks());
  handleDataList(layer.getResource().getDataLinks());
  if (layer.getResource() instanceof WMSLayerInfo) {
  }
 else {
    start("Style");
    StyleInfo defaultStyle=layer.getDefaultStyle();
    if (defaultStyle == null) {
      throw new NullPointerException("Layer " + layer.getName() + " has no default style");
    }
    handleCommonStyleElements(defaultStyle);
    handleLegendURL(layer,defaultStyle.getLegend(),null,defaultStyle);
    end("Style");
    for (    StyleInfo styleInfo : layer.getStyles()) {
      start("Style");
      handleCommonStyleElements(styleInfo);
      handleLegendURL(layer,styleInfo.getLegend(),styleInfo,styleInfo);
      end("Style");
    }
  }
  handleScaleHint(layer);
  end("Layer");
}
