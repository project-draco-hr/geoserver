{
  try {
    NumberRange<Double> scaleDenominators=CapabilityUtil.searchMinMaxScaleDenominator(layer);
    for (    ExtendedCapabilitiesProvider provider : extCapsProviders) {
      scaleDenominators=provider.overrideScaleDenominators(layer,scaleDenominators);
    }
    if ((scaleDenominators.getMinimum() == 0.0) && (scaleDenominators.getMaximum() == Double.POSITIVE_INFINITY)) {
      return;
    }
    Double minScaleHint;
    Double maxScaleHint;
    boolean scaleUnitPixel=wmsConfig.getScalehintUnitPixel() != null && wmsConfig.getScalehintUnitPixel();
    if (scaleUnitPixel) {
      minScaleHint=CapabilityUtil.computeScaleHint(scaleDenominators.getMinValue());
      maxScaleHint=CapabilityUtil.computeScaleHint(scaleDenominators.getMaxValue());
    }
 else {
      minScaleHint=scaleDenominators.getMinValue();
      maxScaleHint=scaleDenominators.getMaxValue();
    }
    AttributesImpl attrs=new AttributesImpl();
    attrs.addAttribute("",MIN_DENOMINATOR_ATTR,MIN_DENOMINATOR_ATTR,"",String.valueOf(minScaleHint));
    attrs.addAttribute("",MAX_DENOMINATOR_ATTR,MAX_DENOMINATOR_ATTR,"",String.valueOf(maxScaleHint));
    element("ScaleHint",null,attrs);
  }
 catch (  IOException e) {
    LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
  }
}
