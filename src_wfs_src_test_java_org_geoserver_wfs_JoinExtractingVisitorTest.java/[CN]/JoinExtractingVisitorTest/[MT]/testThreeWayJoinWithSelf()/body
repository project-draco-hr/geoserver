{
  JoinExtractingVisitor visitor=new JoinExtractingVisitor(Arrays.asList(forests,lakes,lakes),Arrays.asList("a","b","c"));
  Filter f1=ff.equals(ff.property("a/FID"),ff.property("b/FID"));
  Filter f2=ff.equals(ff.property("b/FID"),ff.property("c/FID"));
  Filter f=ff.and(Arrays.asList(f1,f2));
  f.accept(visitor,null);
  assertEquals("b",visitor.getPrimaryAlias());
  Filter primary=visitor.getPrimaryFilter();
  assertNull(primary);
  List<Join> joins=visitor.getJoins();
  assertEquals(2,joins.size());
  Join j1=joins.get(0);
  assertEquals("Forests",j1.getTypeName());
  assertEquals("a",j1.getAlias());
  assertEquals(ff.equals(ff.property("a.FID"),ff.property("b.FID")),j1.getJoinFilter());
  Join j2=joins.get(1);
  assertEquals("Lakes",j2.getTypeName());
  assertEquals("c",j2.getAlias());
  assertEquals(ff.equals(ff.property("b.FID"),ff.property("c.FID")),j2.getJoinFilter());
}
