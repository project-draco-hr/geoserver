{
  Object response;
  try {
    if (LOGGER.isLoggable(Level.FINE)) {
      if (method instanceof GetMethod) {
        GetMethod gm=(GetMethod)method;
        LOGGER.fine("Sending GET request:\n " + method.getURI());
      }
 else       if (method instanceof PostMethod) {
        PostMethod pm=(PostMethod)method;
        XMLEntity entity=(XMLEntity)pm.getRequestEntity();
        String request=entity.toString();
        LOGGER.fine("Sending POST request:\n " + method.getURI() + "\n"+ request);
        pm.setRequestEntity(new StringRequestEntity(request,"text/xml","UTF-8"));
      }
 else {
        LOGGER.fine("Sending unknown method type : " + method);
      }
    }
    int statusCode=client.executeMethod(method);
    if (statusCode != HttpStatus.SC_OK) {
      throw new IOException("HTTP client returned with code " + statusCode);
    }
    Parser parser=new Parser(configuration);
    parser.setStrict(true);
    parser.setFailOnValidationError(true);
    InputStream is;
    if (LOGGER.isLoggable(Level.FINE)) {
      String responseString=method.getResponseBodyAsString();
      LOGGER.log(Level.FINE,"Response from Unit:\n" + responseString);
      is=new ByteArrayInputStream(responseString.getBytes());
    }
 else {
      is=method.getResponseBodyAsStream();
    }
    response=parser.parse(is);
  }
 catch (  Exception e) {
    throw (IOException)new IOException("Error occurred while executing " + "a call to the Unit").initCause(e);
  }
 finally {
    method.releaseConnection();
  }
  if (response instanceof ExceptionReportType) {
    ExceptionReportType report=(ExceptionReportType)response;
    StringBuilder sb=new StringBuilder("The Unit service reported a failure: ");
    for (Iterator it=report.getException().iterator(); it.hasNext(); ) {
      ExceptionType et=(ExceptionType)it.next();
      for (Iterator eit=et.getExceptionText().iterator(); eit.hasNext(); ) {
        String text=(String)eit.next();
        sb.append(text);
        if (eit.hasNext())         sb.append(". ");
      }
    }
    throw new IOException(sb.toString());
  }
  return response;
}
