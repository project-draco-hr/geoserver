{
  WorkspaceInfo localWS=LocalWorkspace.get();
  PublishedInfo localPublished=LocalPublished.get();
  if (localWS == null && localPublished == null) {
    return Predicates.acceptAll();
  }
  if (ResourceInfo.class.isAssignableFrom(clazz)) {
    Filter localLayerFilter;
    if (localPublished == null) {
      localLayerFilter=Predicates.acceptAll();
    }
 else {
      return super.getSecurityFilter(clazz);
    }
    return Predicates.or(localLayerFilter,inWorkspace());
  }
 else   if (WorkspaceInfo.class.isAssignableFrom(clazz)) {
    if (localWS == null)     return Predicates.acceptAll();
    return Predicates.equal("id",localWS.getId());
  }
 else   if (LayerGroupInfo.class.isAssignableFrom(clazz)) {
    Filter filter=standardFilter(clazz);
    if (localPublished != null) {
      if (localPublished instanceof LayerInfo) {
        Function subLayersHidden=new InternalVolatileFunction(){
          @Override public Boolean evaluate(          Object object){
            return !subLayersHidden((LayerGroupInfo)object);
          }
        }
;
        FilterFactory factory=Predicates.factory;
        filter=Predicates.and(filter,factory.equals(factory.literal(Boolean.TRUE),subLayersHidden));
        Predicates.and(filter,Predicates.equal("id",localPublished.getId()));
      }
 else       if (localPublished instanceof LayerGroupInfo) {
        LayerGroupInfo lg=(LayerGroupInfo)localPublished;
        List<LayerGroupInfo> groups=new LayerGroupHelper(lg).allGroups();
        List<Filter> groupIdFilters=new ArrayList<>();
        for (        LayerGroupInfo group : groups) {
          groupIdFilters.add(Predicates.equal("id",group.getId()));
        }
        return Predicates.or(groupIdFilters);
      }
    }
    return filter;
  }
 else   if (StyleInfo.class.isAssignableFrom(clazz)) {
    return standardFilter(clazz);
  }
 else   if (LayerInfo.class.isAssignableFrom(clazz)) {
    if (localPublished == null) {
      return Predicates.acceptAll();
    }
 else     if (localPublished instanceof LayerInfo) {
      return Predicates.equal("id",localPublished.getId());
    }
 else     if (localPublished instanceof LayerGroupInfo) {
      LayerGroupInfo lg=(LayerGroupInfo)localPublished;
      Request request=Dispatcher.REQUEST.get();
      if (request != null && "WMS".equalsIgnoreCase(request.getService()) && "GetCapabilities".equals(request.getRequest()) && lg.getMode() == Mode.SINGLE) {
        return Predicates.acceptNone();
      }
 else {
        List<LayerInfo> layers=new LayerGroupHelper(lg).allLayers();
        List<Filter> layersIdFilters=new ArrayList<>();
        for (        LayerInfo layer : layers) {
          layersIdFilters.add(Predicates.equal("id",layer.getId()));
        }
        return Predicates.or(layersIdFilters);
      }
    }
 else {
      throw new RuntimeException("Unexpected local published reference of type " + localPublished.getClass());
    }
  }
 else   if (NamespaceInfo.class.isAssignableFrom(clazz)) {
    return super.getSecurityFilter(clazz);
  }
 else {
    return super.getSecurityFilter(clazz);
  }
}
