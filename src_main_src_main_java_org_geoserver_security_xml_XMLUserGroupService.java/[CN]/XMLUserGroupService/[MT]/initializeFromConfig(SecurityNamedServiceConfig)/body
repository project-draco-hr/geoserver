{
  this.name=config.getName();
  validatingXMLSchema=false;
  passwordEncoderName=((SecurityUserGroupServiceConfig)config).getPasswordEncoderName();
  passwordValidatorName=((SecurityUserGroupServiceConfig)config).getPasswordPolicyName();
  GeoServerPasswordEncoder enc=getSecurityManager().loadPasswordEncoder(passwordEncoderName);
  if (enc.getEncodingType() == PasswordEncodingType.ENCRYPT) {
    KeyStoreProvider prov=getSecurityManager().getKeyStoreProvider();
    String alias=prov.aliasForGroupService(name);
    if (prov.containsAlias(alias) == false) {
      prov.setUserGroupKey(name,getSecurityManager().getRandomPassworddProvider().getRandomPasswordWithDefaultLength());
      prov.storeKeyStore();
    }
  }
  enc.initializeFor(this);
  if (config instanceof XMLSecurityServiceConfig) {
    validatingXMLSchema=((XMLSecurityServiceConfig)config).isValidating();
    Resource xsdFile=getConfigRoot().get(XMLConstants.FILE_UR_SCHEMA);
    if (xsdFile.getType() == Type.UNDEFINED) {
      IOUtils.copy(getClass().getResourceAsStream(XMLConstants.FILE_UR_SCHEMA),xsdFile.out());
    }
  }
  if (config instanceof FileBasedSecurityServiceConfig) {
    String fileName=((FileBasedSecurityServiceConfig)config).getFileName();
    File userFile=new File(fileName);
    if (userFile.isAbsolute()) {
      userResource=Files.asResource(userFile);
    }
 else {
      userResource=getConfigRoot().get(fileName);
    }
    if (userResource.getType() == Type.UNDEFINED) {
      IOUtils.copy(getClass().getResourceAsStream("usersTemplate.xml"),userResource.out());
    }
  }
 else {
    throw new IOException("Cannot initialize from " + config.getClass().getName());
  }
  deserialize();
}
