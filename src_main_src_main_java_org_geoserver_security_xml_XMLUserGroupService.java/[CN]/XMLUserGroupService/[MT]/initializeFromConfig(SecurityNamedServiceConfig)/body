{
  this.name=config.getName();
  validatingXMLSchema=false;
  passwordEncoderName=((SecurityUserGroupServiceConfig)config).getPasswordEncoderName();
  passwordValidatorName=((SecurityUserGroupServiceConfig)config).getPasswordPolicyName();
  GeoServerPasswordEncoder enc=getSecurityManager().loadPasswordEncoder(passwordEncoderName);
  if (enc.getEncodingType() == PasswordEncodingType.ENCRYPT) {
    KeyStoreProvider prov=getSecurityManager().getKeyStoreProvider();
    String alias=prov.aliasForGroupService(name);
    if (prov.containsAlias(alias) == false) {
      prov.setUserGroupKey(name,getSecurityManager().getRandomPassworddProvider().getRandomPasswordWithDefaultLength());
      prov.storeKeyStore();
    }
  }
  enc.initializeFor(this);
  if (config instanceof XMLSecurityServiceConfig) {
    validatingXMLSchema=((XMLSecurityServiceConfig)config).isValidating();
    File xsdFile=new File(getConfigRoot(),XMLConstants.FILE_UR_SCHEMA);
    if (xsdFile.exists() == false) {
      FileUtils.copyURLToFile(getClass().getResource(XMLConstants.FILE_UR_SCHEMA),xsdFile);
    }
  }
  if (config instanceof FileBasedSecurityServiceConfig) {
    String fileName=((FileBasedSecurityServiceConfig)config).getFileName();
    userFile=new File(fileName);
    if (userFile.isAbsolute() == false) {
      userFile=new File(getConfigRoot(),fileName);
    }
    if (userFile.exists() == false) {
      FileUtils.copyURLToFile(getClass().getResource("usersTemplate.xml"),userFile);
    }
  }
 else {
    throw new IOException("Cannot initialize from " + config.getClass().getName());
  }
  deserialize();
}
