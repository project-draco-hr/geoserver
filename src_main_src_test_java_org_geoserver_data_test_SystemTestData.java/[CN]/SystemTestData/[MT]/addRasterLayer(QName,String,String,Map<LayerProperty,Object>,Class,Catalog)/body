{
  String prefix=qName.getPrefix();
  String name=qName.getLocalPart();
  File dir=new File(data,name);
  dir.mkdirs();
  File file=new File(dir,filename);
  catalog.getResourceLoader().copyFromClassPath(filename,file,scope);
  String ext=FilenameUtils.getExtension(filename);
  if ("zip".equalsIgnoreCase(ext)) {
    IOUtils.decompress(file,dir);
    file.delete();
    if (extension == null) {
      file=dir;
    }
 else {
      file=new File(dir,FilenameUtils.getBaseName(filename) + "." + extension);
      if (!file.exists()) {
        File file2=new File(new File(dir,dir.getName()),file.getName());
        if (file2.exists()) {
          file=file2;
        }
      }
    }
    if (!file.exists()) {
      throw new FileNotFoundException(file.getPath());
    }
  }
  AbstractGridFormat format=GridFormatFinder.findFormat(file);
  if (format == null) {
    throw new RuntimeException("No format for " + file.getCanonicalPath());
  }
  GridCoverage2DReader reader=null;
  try {
    reader=format.getReader(file);
    if (reader == null) {
      throw new RuntimeException("No reader for " + file.getCanonicalPath() + " with format "+ format.getName());
    }
    if (catalog.getWorkspaceByName(prefix) == null) {
      addWorkspace(prefix,qName.getNamespaceURI(),catalog);
    }
    CoverageStoreInfo store=catalog.getCoverageStoreByName(prefix,name);
    if (store == null) {
      store=catalog.getFactory().createCoverageStore();
    }
    store.setName(name);
    store.setWorkspace(catalog.getWorkspaceByName(prefix));
    store.setEnabled(true);
    store.setURL(DataUtilities.fileToURL(file).toString());
    store.setType(format.getName());
    if (store.getId() == null) {
      catalog.add(store);
    }
 else {
      catalog.save(store);
    }
    CatalogBuilder builder=new CatalogBuilder(catalog);
    builder.setStore(store);
    final String coverageNames[]=reader.getGridCoverageNames();
    if (reader instanceof StructuredGridCoverage2DReader && coverageNames != null && coverageNames.length > 1) {
      for (      String coverageName : coverageNames) {
        addCoverage(store,builder,reader,catalog,format,coverageName,qName,props,coverageName);
      }
    }
 else {
      addCoverage(store,builder,reader,catalog,format,name,qName,props,null);
    }
  }
  finally {
    if (reader != null) {
      reader.dispose();
    }
  }
}
