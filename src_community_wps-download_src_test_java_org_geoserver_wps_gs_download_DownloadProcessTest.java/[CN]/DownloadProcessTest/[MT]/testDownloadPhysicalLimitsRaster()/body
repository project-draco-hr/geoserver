{
  final WPSResourceManager resourceManager=getResourceManager();
  ProcessListener listener=new ProcessListener(new ExecutionStatus(new NameImpl("gs","DownloadEstimator"),resourceManager.getExecutionId(false),false));
  DownloadEstimatorProcess limits=new DownloadEstimatorProcess(new StaticDownloadServiceConfiguration(),getGeoServer());
  DownloadProcess downloadProcess=new DownloadProcess(getGeoServer(),limits,resourceManager);
  Polygon roi=(Polygon)new WKTReader2().read("POLYGON (( -127.57473954542964 54.06575021619523, -130.88669845369998 52.00807146727025, -129.50812897394974 49.85372324691927, -130.5300633861675 49.20465679591609, -129.25955033314003 48.60392508062591, -128.00975216684665 50.986137055052474, -125.8623089087404 48.63154492960477, -123.984159178178 50.68231871628503, -126.91186316993704 52.15307567440926, -125.3444367403868 53.54787804784162, -127.57473954542964 54.06575021619523 ))");
  roi.setSRID(4326);
  try {
    downloadProcess.execute(getLayerId(MockData.USA_WORLDIMG),null,"image/tiff",null,CRS.decode("EPSG:4326",true),roi,true,null,null,null,listener);
  }
 catch (  Exception e) {
    Throwable e1=listener.exception;
    Assert.assertNotNull(e1);
    Assert.assertEquals("org.geotools.process.ProcessException: java.io.IOException: Download Exceeded the maximum HARD allowed size!: java.io.IOException: Download Exceeded the maximum HARD allowed size!",e.getMessage() + (e.getCause() != null ? ": " + e.getCause().getMessage() : ""));
  }
}
