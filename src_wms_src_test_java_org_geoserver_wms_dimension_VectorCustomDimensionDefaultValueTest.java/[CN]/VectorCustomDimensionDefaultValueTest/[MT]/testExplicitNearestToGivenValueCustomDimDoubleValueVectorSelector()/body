{
  int fid=1000;
  DimensionDefaultValueSetting defaultValueSetting=new DimensionDefaultValueSetting();
  defaultValueSetting.setStrategyType(Strategy.NEAREST);
  String referenceStr="2.3";
  defaultValueSetting.setReferenceValue(referenceStr);
  setupFeatureCustomDimension(SCANNING_ANGLE_DIMENSION,"scanningAngle",defaultValueSetting);
  FeatureTypeInfo timeElevationCustom=getCatalog().getFeatureTypeByName(TIME_ELEVATION_CUSTOM.getLocalPart());
  double originallyBiggest=Double.valueOf(1.5d);
  Double d=wms.getDefaultCustomDimensionValue(SCANNING_ANGLE_DIMENSION,timeElevationCustom,Double.class);
  assertTrue("Default value is null",d != null);
  assertTrue("Default value should be the closest one",Math.abs(d.doubleValue() - originallyBiggest) < 0.0001);
  double biggerThanOriginal=1.7d;
  addFeatureWithScanningAngle(fid++,biggerThanOriginal);
  d=wms.getDefaultCustomDimensionValue(SCANNING_ANGLE_DIMENSION,timeElevationCustom,Double.class);
  assertTrue("Default value is null",d != null);
  assertTrue("Default value should be the closest one",Math.abs(d.doubleValue() - biggerThanOriginal) < 0.0001);
  double biggerThanReference=2.45d;
  addFeatureWithScanningAngle(fid++,biggerThanReference);
  d=wms.getDefaultCustomDimensionValue(SCANNING_ANGLE_DIMENSION,timeElevationCustom,Double.class);
  assertTrue("Default value is null",d != null);
  assertTrue("Default value should be the closest one",Math.abs(d.doubleValue() - biggerThanReference) < 0.0001);
}
