{
  final Expression color;
  final Expression width;
  final Expression opacity;
  final Expression lineJoin;
  final Expression lineCap;
  final float[] dashArray;
  final Expression dashOffset;
  final Graphic graphicFill;
  final Graphic graphicStroke;
  if (stroke.getColor() == null || isStatic(stroke.getColor())) {
    color=stroke.getColor();
  }
 else {
    color=getLiteral(key + ".color");
  }
  if (stroke.getDashOffset() == null || isStatic(stroke.getDashOffset())) {
    dashOffset=stroke.getDashOffset();
  }
 else {
    dashOffset=getLiteral(key + ".linecap");
  }
  if (stroke.getLineCap() == null || isStatic(stroke.getDashOffset())) {
    lineCap=stroke.getLineCap();
  }
 else {
    lineCap=getLiteral(key + ".linecap");
  }
  if (stroke.getLineJoin() == null || isStatic(stroke.getLineJoin())) {
    lineJoin=stroke.getLineJoin();
  }
 else {
    lineJoin=getLiteral(key + ".linejoin");
  }
  if (stroke.getOpacity() == null || isStatic(stroke.getOpacity())) {
    opacity=stroke.getOpacity();
  }
 else {
    opacity=getLiteral(key + ".opacity");
  }
  if (stroke.getWidth() == null || isStatic(stroke.getWidth())) {
    width=stroke.getOpacity();
  }
 else {
    width=getLiteral(key + ".opacity");
  }
  if (stroke.getGraphicStroke() == null) {
    graphicStroke=null;
  }
 else {
    graphicStroke=injectGraphic(key + ".graphic",stroke.getGraphicStroke());
  }
  if (stroke.getGraphicFill() == null) {
    graphicFill=null;
  }
 else {
    graphicFill=injectGraphic(key + ".graphic",stroke.getGraphicFill());
  }
  if (stroke.getDashArray() == null) {
    dashArray=null;
  }
 else {
    dashArray=Arrays.copyOf(stroke.getDashArray(),stroke.getDashArray().length);
  }
  return styleFactory.createStroke(color,width,opacity,lineJoin,lineCap,dashArray,dashOffset,graphicFill,graphicStroke);
}
