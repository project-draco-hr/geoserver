{
  final ServiceInfo serviceInfo=getGeoServer().getService(WFSInfo.class);
  final MetadataMap metadata=serviceInfo.getMetadata();
  clearInspireMetadata(metadata);
  metadata.put(CREATE_EXTENDED_CAPABILITIES.key,true);
  metadata.put(SERVICE_METADATA_URL.key,"http://foo.com?bar=baz");
  metadata.put(SERVICE_METADATA_TYPE.key,"application/vnd.iso.19139+xml");
  metadata.put(LANGUAGE.key,"fre");
  metadata.put(SPATIAL_DATASET_IDENTIFIER_TYPE.key,"one,http://www.geoserver.org/one");
  getGeoServer().save(serviceInfo);
  Document dom=getAsDOM(WFS_2_0_0_GETCAPREQUEST);
  NodeList nodeList=dom.getElementsByTagNameNS(DLS_NAMESPACE,"SpatialDataSetIdentifier");
  assertEquals(1,nodeList.getLength());
  serviceInfo.getMetadata().put(SPATIAL_DATASET_IDENTIFIER_TYPE.key,metadata.get(SPATIAL_DATASET_IDENTIFIER_TYPE.key) + ";two,,http://metadata.geoserver.org/id?two");
  getGeoServer().save(serviceInfo);
  dom=getAsDOM(WFS_2_0_0_GETCAPREQUEST);
  nodeList=dom.getElementsByTagNameNS(DLS_NAMESPACE,"SpatialDataSetIdentifier");
  assertEquals(2,nodeList.getLength());
  final UniqueResourceIdentifiers ids=new UniqueResourceIdentifiers();
  ids.add(new UniqueResourceIdentifier("one","http://www.geoserver.org/one"));
  ids.add(new UniqueResourceIdentifier("two",null,"http://metadata.geoserver.org/id?two"));
  nodeList=dom.getElementsByTagNameNS(DLS_NAMESPACE,"ExtendedCapabilities");
  final Element extendedCaps=(Element)nodeList.item(0);
  assertInspireDownloadSpatialDataSetIdentifierResponse(extendedCaps,ids);
}
