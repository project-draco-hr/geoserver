{
  super(id);
  styleProvider=new GeoServerDataProvider<StyleInfo>(){
    Property<StyleInfo> name=new AbstractProperty<StyleInfo>("Name"){
      public Object getPropertyValue(      StyleInfo x){
        return x.getName();
      }
    }
;
    protected List<StyleInfo> getItems(){
      return demo.catalog().getStyles();
    }
    public List<Property<StyleInfo>> getProperties(){
      return Arrays.asList(name);
    }
  }
;
  styleTable=new GeoServerTablePanel<StyleInfo>("style.table",styleProvider){
    @Override public Component getComponentForProperty(    String id,    IModel value,    final Property<StyleInfo> property){
      final StyleInfo style=(StyleInfo)value.getObject();
      Fragment fragment=new Fragment(id,"style.link",StyleChooser.this);
      AjaxLink link=new AjaxLink("link"){
{
          add(new Label("style.name",new Model(property.getPropertyValue(style).toString())));
        }
        public void onClick(        AjaxRequestTarget target){
          PageParameters params=new PageParameters();
          params.add("layer",demo.getLayer().prefixedName());
          WorkspaceInfo workspace=style.getWorkspace();
          if (workspace == null) {
            params.add("style",style.getName());
          }
 else {
            params.add("style",workspace.getName() + ":" + style.getName());
          }
          setResponsePage(CssDemoPage.class,params);
        }
      }
;
      fragment.add(link);
      return fragment;
    }
  }
;
  add(styleTable);
}
