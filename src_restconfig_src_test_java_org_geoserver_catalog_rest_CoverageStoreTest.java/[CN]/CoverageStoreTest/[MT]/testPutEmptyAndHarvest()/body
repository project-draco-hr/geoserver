{
  File dir=new File("./target/empty");
  dir.mkdir();
  dir.deleteOnExit();
  File f=new File(dir,"empty.zip");
  f.deleteOnExit();
  FileOutputStream fout=new FileOutputStream(f);
  IOUtils.copy(getClass().getResourceAsStream("test-data/empty.zip"),fout);
  fout.flush();
  fout.close();
  final int length=(int)f.length();
  byte[] zipData=new byte[length];
  FileInputStream fis=new FileInputStream(f);
  fis.read(zipData);
  MockHttpServletResponse response=putAsServletResponse("/rest/workspaces/wcs/coveragestores/empty/file.imagemosaic?configure=none",zipData,"application/zip");
  assertEquals(201,response.getStatus());
  Document dom=getAsDOM("/rest/workspaces/wcs/coveragestores/empty.xml");
  assertXpathEvaluatesTo("true","/coverageStore/enabled",dom);
  f=new File(dir,"NCOM_wattemp_020_20081031T0000000_12.tiff");
  f.deleteOnExit();
  fout=new FileOutputStream(f);
  IOUtils.copy(getClass().getResourceAsStream("test-data/NCOM_wattemp_020_20081031T0000000_12.tiff"),fout);
  fout.flush();
  fout.close();
  final String path="file://" + f.getCanonicalPath();
  response=postAsServletResponse("/rest/workspaces/wcs/coveragestores/empty/external.imagemosaic",path,"text/plain");
  assertEquals(202,response.getStatus());
  dom=getAsDOM("/rest/workspaces/wcs/coveragestores/empty/coverages.xml?list=all");
  assertXpathEvaluatesTo("index","/list/coverageName",dom);
  assertEquals(200,deleteAsServletResponse("/rest/workspaces/wcs/coveragestores/empty?recurse=true&purge=all").getStatus());
}
