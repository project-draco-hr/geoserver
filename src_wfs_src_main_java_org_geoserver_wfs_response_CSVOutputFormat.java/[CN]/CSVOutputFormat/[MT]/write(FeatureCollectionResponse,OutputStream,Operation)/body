{
  BufferedWriter w=new BufferedWriter(new OutputStreamWriter(output,gs.getGlobal().getSettings().getCharset()));
  FeatureCollection<?,?> fc=featureCollection.getFeature().get(0);
  if (fc.getSchema() instanceof SimpleFeatureType) {
    fc=FlatteningFeatureCollection.flatten((SimpleFeatureCollection)fc);
    SimpleFeatureType ft=(SimpleFeatureType)fc.getSchema();
    w.write("FID,");
    for (int i=0; i < ft.getAttributeCount(); i++) {
      AttributeDescriptor ad=ft.getDescriptor(i);
      w.write(prepCSVField(ad.getLocalName()));
      if (i < ft.getAttributeCount() - 1) {
        w.write(",");
      }
    }
  }
 else {
    w.write("gml:id,");
    int i=0;
    for (    PropertyDescriptor att : fc.getSchema().getDescriptors()) {
      if (!att.getName().getLocalPart().startsWith("FEATURE_LINK")) {
        if (i > 0) {
          w.write(",");
        }
        String elName=att.getName().toString();
        Object xsd=att.getUserData().get(XSDElementDeclaration.class);
        if (xsd != null && xsd instanceof XSDElementDeclarationImpl) {
          XSDElementDeclarationImpl xsdEl=(XSDElementDeclarationImpl)xsd;
          elName=xsdEl.getQName();
        }
        w.write(prepCSVField(elName));
        i++;
      }
    }
  }
  w.write("\r\n");
  NumberFormat coordFormatter=NumberFormat.getInstance(Locale.US);
  coordFormatter.setMaximumFractionDigits(getInfo().getGeoServer().getSettings().getNumDecimals());
  coordFormatter.setGroupingUsed(false);
  FeatureIterator<?> i=fc.features();
  try {
    while (i.hasNext()) {
      Feature f=i.next();
      w.write(prepCSVField(f.getIdentifier().getID()));
      w.write(",");
      if (f instanceof SimpleFeature) {
        for (int j=0; j < ((SimpleFeature)f).getAttributeCount(); j++) {
          Object att=((SimpleFeature)f).getAttribute(j);
          if (att != null) {
            String value=formatToString(att,coordFormatter);
            w.write(prepCSVField(value));
          }
          if (j < ((SimpleFeature)f).getAttributeCount() - 1) {
            w.write(",");
          }
        }
      }
 else {
        Iterator<PropertyDescriptor> descriptors=fc.getSchema().getDescriptors().iterator();
        int j=0;
        while (descriptors.hasNext()) {
          PropertyDescriptor desc=descriptors.next();
          if (desc.getName().getLocalPart().startsWith("FEATURE_LINK")) {
            continue;
          }
          if (j > 0) {
            w.write(",");
          }
          j++;
          Collection<Property> values=f.getProperties(desc.getName());
          if (values.size() > 1) {
            throw new UnsupportedOperationException("Multi valued properties aren't supported with CSV format!");
          }
          Object att=null;
          if (!values.isEmpty()) {
            att=values.iterator().next().getValue();
          }
          if (att != null) {
            String value=formatToString(att,coordFormatter);
            w.write(prepCSVField(value));
          }
        }
      }
      w.write("\r\n");
    }
  }
  finally {
    i.close();
  }
  w.flush();
}
