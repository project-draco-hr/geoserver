{
  Document d=getAsDOM(root() + "service=wps&request=describeprocess&identifier=geo:buffer");
  checkValidationErrors(d);
  assertXpathExists("/wps:ProcessDescriptions",d);
  String base="/wps:ProcessDescriptions/ProcessDescription/DataInputs";
  assertXpathExists(base + "/Input[1]",d);
  assertXpathEvaluatesTo("geom",base + "/Input[1]/ows:Identifier",d);
  assertXpathExists(base + "/Input[1]/ComplexData",d);
  assertXpathEvaluatesTo("1",base + "/Input[1]/ComplexData/@maximumMegabytes",d);
  assertXpathExists(base + "/Input[2]",d);
  assertXpathEvaluatesTo("distance",base + "/Input[2]/ows:Identifier",d);
  assertXpathExists(base + "/Input[2]/LiteralData",d);
  assertXpathEvaluatesTo("closed",base + "/Input[2]/LiteralData/ows:AllowedValues/ows:Range/@ows:rangeClosure",d);
  assertXpathEvaluatesTo("0.0",base + "/Input[2]/LiteralData/ows:AllowedValues/ows:Range/ows:MinimumValue",d);
  assertXpathEvaluatesTo("100.0",base + "/Input[2]/LiteralData/ows:AllowedValues/ows:Range/ows:MaximumValue",d);
  assertXpathExists(base + "/Input[3]",d);
  assertXpathEvaluatesTo("quadrantSegments",base + "/Input[3]/ows:Identifier",d);
  assertXpathExists(base + "/Input[3]/LiteralData",d);
  assertXpathEvaluatesTo("closed",base + "/Input[3]/LiteralData/ows:AllowedValues/ows:Range/@ows:rangeClosure",d);
  assertXpathEvaluatesTo("2",base + "/Input[3]/LiteralData/ows:AllowedValues/ows:Range/ows:MinimumValue",d);
  assertXpathEvaluatesTo("20",base + "/Input[3]/LiteralData/ows:AllowedValues/ows:Range/ows:MaximumValue",d);
}
