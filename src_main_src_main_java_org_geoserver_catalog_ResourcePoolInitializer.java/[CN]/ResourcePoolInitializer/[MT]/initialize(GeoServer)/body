{
  this.gs=geoServer;
  final GeoServerInfo global=geoServer.getGlobal();
  final int cacheSize=global.getFeatureTypeCacheSize();
  if (cacheSize > 0) {
    gs.getCatalog().getResourcePool().setFeatureTypeCacheSize(cacheSize);
  }
  geoServer.addListener(new ConfigurationListenerAdapter(){
    @Override public void handleGlobalChange(    GeoServerInfo global,    List<String> propertyNames,    List<Object> oldValues,    List<Object> newValues){
      int i=propertyNames.indexOf("featureTypeCacheSize");
      if (i > -1) {
        Number featureTypeCacheSize=(Number)newValues.get(i);
        gs.getCatalog().getResourcePool().setFeatureTypeCacheSize(featureTypeCacheSize.intValue());
      }
      gs.getCatalog().getResourcePool().setCoverageExecutor(global.getCoverageAccess().getThreadPoolExecutor());
    }
  }
);
}
