{
  if (!(obj instanceof FeatureTypeInfo)) {
    return false;
  }
  if (!super.equals(obj)) {
    return false;
  }
  final FeatureTypeInfo other=(FeatureTypeInfo)obj;
  if (attributes == null) {
    if (other.getAttributes() != null)     return false;
  }
 else   if (!attributes.equals(other.getAttributes()))   return false;
  if (responseSRS == null) {
    if (other.getResponseSRS() != null)     return false;
  }
 else   if (!responseSRS.equals(other.getResponseSRS()))   return false;
  if (filter == null) {
    if (other.getFilter() != null)     return false;
  }
 else   if (!filter.equals(other.getFilter()))   return false;
  if (circularArcPresent != other.isCircularArcPresent())   return false;
  if (linearizationTolerance == null) {
    if (other.getLinearizationTolerance() != null)     return false;
  }
 else   if (!linearizationTolerance.equals(other.getLinearizationTolerance()))   return false;
  if (maxFeatures != other.getMaxFeatures())   return false;
  if (numDecimals != other.getNumDecimals())   return false;
  if (overridingServiceSRS != other.isOverridingServiceSRS()) {
    return false;
  }
  return true;
}
