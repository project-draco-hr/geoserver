{
  this.returnPageClass=LayerGroupPage.class;
  lgModel=new LayerGroupDetachableModel(layerGroup);
  layerGroupId=layerGroup.getId();
  Form form=new Form("form",new CompoundPropertyModel(lgModel)){
    @Override public IConverter getConverter(    Class<?> type){
      if (LayerInfo.class.isAssignableFrom(type)) {
        return new LayerInfoConverter();
      }
 else       if (StyleInfo.class.isAssignableFrom(type)) {
        return new StyleInfoConverter();
      }
 else {
        return super.getConverter(type);
      }
    }
  }
;
  add(form);
  final WebMarkupContainer rootLayerPanelContainer=new WebMarkupContainer("rootLayerContainer");
  rootLayerPanelContainer.setOutputMarkupId(true);
  form.add(rootLayerPanelContainer);
  rootLayerPanel=new RootLayerEntryPanel("rootLayer",form,layerGroup.getWorkspace());
  rootLayerPanelContainer.add(rootLayerPanel);
  updateRootLayerPanel(layerGroup.getMode());
  TextField name=new TextField("name");
  name.setRequired(true);
  form.add(name);
  final DropDownChoice<LayerGroupInfo.Mode> modeChoice=new DropDownChoice<LayerGroupInfo.Mode>("mode",new LayerGroupModeModel(),new LayerGroupModeChoiceRenderer());
  modeChoice.setNullValid(false);
  modeChoice.setRequired(true);
  modeChoice.add(new OnChangeAjaxBehavior(){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      LayerGroupInfo.Mode mode=modeChoice.getModelObject();
      updateRootLayerPanel(mode);
      target.addComponent(rootLayerPanelContainer);
    }
  }
);
  form.add(modeChoice);
  form.add(new TextField("title"));
  form.add(new TextArea("abstract"));
  DropDownChoice<WorkspaceInfo> wsChoice=new DropDownChoice("workspace",new WorkspacesModel(),new WorkspaceChoiceRenderer());
  wsChoice.setNullValid(true);
  if (!isAuthenticatedAsAdmin()) {
    wsChoice.setNullValid(false);
    wsChoice.setRequired(true);
  }
  form.add(wsChoice);
  form.add(envelopePanel=new EnvelopePanel("bounds"));
  envelopePanel.setRequired(true);
  envelopePanel.setCRSFieldVisible(true);
  envelopePanel.setCrsRequired(true);
  envelopePanel.setOutputMarkupId(true);
  form.add(new GeoServerAjaxFormLink("generateBounds"){
    @Override public void onClick(    AjaxRequestTarget target,    Form form){
      LayerGroupInfo lg=getCatalog().getFactory().createLayerGroup();
      for (      LayerGroupEntry entry : lgEntryPanel.getEntries()) {
        lg.getLayers().add(entry.getLayer());
        lg.getStyles().add(entry.getStyle());
      }
      try {
        CoordinateReferenceSystem crs=envelopePanel.getCoordinateReferenceSystem();
        if (crs != null) {
          new CatalogBuilder(getCatalog()).calculateLayerGroupBounds(lg,crs);
        }
 else {
          new CatalogBuilder(getCatalog()).calculateLayerGroupBounds(lg);
        }
        envelopePanel.setModelObject(lg.getBounds());
        target.addComponent(envelopePanel);
      }
 catch (      Exception e) {
        throw new WicketRuntimeException(e);
      }
    }
  }
);
  form.add(lgEntryPanel=new LayerGroupEntryPanel("layers",layerGroup));
  form.add(extensionPanels=extensionPanels());
  form.add(saveLink());
  form.add(cancelLink());
}
