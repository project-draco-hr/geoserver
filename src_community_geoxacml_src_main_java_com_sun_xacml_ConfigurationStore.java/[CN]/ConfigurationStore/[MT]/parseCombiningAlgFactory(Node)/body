{
  CombiningAlgFactory factory=null;
  if (useStandard(root,"useStandardAlgorithms")) {
    logger.config("Starting with standard Combining Algorithms");
    factory=StandardCombiningAlgFactory.getNewFactory();
  }
 else {
    factory=new BaseCombiningAlgFactory();
  }
  NodeList children=root.getChildNodes();
  for (int i=0; i < children.getLength(); i++) {
    Node child=children.item(i);
    if (child.getNodeName().equals("algorithm")) {
      CombiningAlgorithm alg=(CombiningAlgorithm)(loadClass("algorithm",child));
      try {
        factory.addAlgorithm(alg);
      }
 catch (      IllegalArgumentException iae) {
        throw new ParsingException("duplicate combining " + "algorithm: " + alg.getIdentifier().toString(),iae);
      }
    }
  }
  return factory;
}
