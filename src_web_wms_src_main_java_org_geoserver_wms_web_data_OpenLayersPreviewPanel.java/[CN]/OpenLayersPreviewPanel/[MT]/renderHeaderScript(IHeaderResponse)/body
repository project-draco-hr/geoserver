{
  Map<String,Object> context=new HashMap<String,Object>();
  ReferencedEnvelope bbox=getStylePage().getLayerInfo().getResource().getLatLonBoundingBox();
  WorkspaceInfo workspace=getStylePage().getStyleInfo().getWorkspace();
  context.put("minx",bbox.getMinX());
  context.put("miny",bbox.getMinY());
  context.put("maxx",bbox.getMaxX());
  context.put("maxy",bbox.getMaxY());
  context.put("id",olPreview.getMarkupId());
  context.put("layer",getStylePage().getLayerInfo().getResource().getName());
  context.put("style",getStylePage().getStyleInfo().getName());
  if (workspace != null) {
    context.put("styleWorkspace",workspace.getName());
  }
  context.put("cachebuster",rand.nextInt());
  context.put("resolution",Math.max(bbox.getSpan(0),bbox.getSpan(1)) / 256.0);
  HttpServletRequest req=GeoServerApplication.get().servletRequest();
  String base=ResponseUtils.baseURL(req);
  String baseUrl=ResponseUtils.buildURL(base,"/",null,URLType.RESOURCE);
  context.put("baseUrl",canonicUrl(baseUrl));
  Template template=templates.getTemplate("ol-load.ftl");
  StringWriter script=new java.io.StringWriter();
  template.process(context,script);
  header.render(JavaScriptHeaderItem.forUrl(ResponseUtils.buildURL(base,"/openlayers/OpenLayers.js",null,URLType.RESOURCE)));
  header.render(OnLoadHeaderItem.forScript(script.toString()));
}
