{
  GWC gwc=GWC.get();
  cat=(Catalog)applicationContext.getBean("rawCatalog");
  tld=(TileLayerDispatcher)applicationContext.getBean("gwcTLDispatcher");
  gridSetBroker=(GridSetBroker)applicationContext.getBean("gwcGridSetBroker");
  try {
    tld.getTileLayer("");
  }
 catch (  GeoWebCacheException gwce) {
  }
  Iterable<TileLayer> layerList;
  Iterator<TileLayer> tlIter;
  layerList=gwc.getTileLayers();
  tlIter=layerList.iterator();
  assertTrue(tlIter.hasNext());
  boolean foundLakes=false;
  while (tlIter.hasNext()) {
    TileLayer tl=tlIter.next();
    if (tl.getName().equals("cite:Lakes")) {
      foundLakes=true;
      break;
    }
  }
  assertTrue(foundLakes);
  layerList=gwc.getTileLayers();
  tlIter=layerList.iterator();
  boolean foudAGF=false;
  while (tlIter.hasNext()) {
    TileLayer tl=tlIter.next();
    if (tl.getName().equals("sf:AggregateGeoFeature")) {
      foudAGF=true;
      GridSubset epsg4326=tl.getGridSubset(gridSetBroker.WORLD_EPSG4326.getName());
      assertTrue(epsg4326.getGridSetBounds().equals(new BoundingBox(-180.0,-90.0,180.0,90.0)));
      String mime=tl.getMimeTypes().get(1).getMimeType();
      assertTrue(mime.startsWith("image/") || mime.startsWith("application/vnd.google-earth.kml+xml"));
    }
  }
  assertTrue(foudAGF);
  LayerInfo li=cat.getLayers().get(1);
  String layerName=li.getResource().getPrefixedName();
  TileLayer tl=tld.getTileLayer(layerName);
  assertEquals(layerName,tl.getName());
  cat.remove(li);
  assertTrue(cat.getLayerByName(tl.getName()) == null);
  boolean caughtException=false;
  try {
    TileLayer tl2=tld.getTileLayer(layerName);
  }
 catch (  GeoWebCacheException gwce) {
    caughtException=true;
  }
  assertTrue(caughtException);
  ResourceInfo resInfo=li.getResource();
  resInfo.setName("hithere");
  cat.save(resInfo);
  LayerInfo layerInfo=cat.getFactory().createLayer();
  layerInfo.setResource(resInfo);
  layerInfo.setName(resInfo.getPrefixedName());
  cat.add(layerInfo);
  String newLayerName=layerInfo.getResource().getPrefixedName();
  TileLayer tl3=tld.getTileLayer(newLayerName);
  assertEquals(newLayerName,tl3.getName());
  LayerGroupInfo lgi=cat.getFactory().createLayerGroup();
  lgi.setName("sf:aLayerGroup");
  lgi.setBounds(new ReferencedEnvelope(-180,180,-90,90,CRS.decode("EPSG:4326")));
  lgi.getLayers().add(cat.getLayerByName("hithere"));
  cat.add(lgi);
  TileLayer tl4=tld.getTileLayer("sf:aLayerGroup");
  assertNotNull(tl4);
  assertEquals(lgi.getName(),tl4.getName());
}
