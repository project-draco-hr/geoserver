{
  File zip=file(data);
  byte[] payload=new byte[(int)zip.length()];
  FileInputStream fis=new FileInputStream(zip);
  try {
    fis.read(payload);
  }
  finally {
    fis.close();
  }
  MockHttpServletRequest req=createRequest("/rest/imports/" + imp + "/tasks/"+ new File(data).getName());
  req.addHeader("Content-Type",MediaType.APPLICATION_ZIP.toString());
  req.setMethod("PUT");
  req.setContent(payload);
  MockHttpServletResponse resp=dispatch(req);
  assertEquals(201,resp.getStatus());
  assertNotNull(resp.getHeader("Location"));
  assertTrue(resp.getHeader("Location").matches(".*/imports/" + imp + "/tasks/\\d"));
  assertEquals("application/json",resp.getContentType());
  JSONObject json=(JSONObject)json(resp);
  JSONObject task=json.getJSONObject("task");
  return task.getInt("id");
}
