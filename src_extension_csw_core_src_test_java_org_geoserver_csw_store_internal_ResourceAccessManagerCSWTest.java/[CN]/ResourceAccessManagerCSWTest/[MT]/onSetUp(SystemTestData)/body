{
  super.onSetUp(testData);
  testData.addStyle("raster","raster.sld",SystemTestData.class,getCatalog());
  Map properties=new HashMap();
  properties.put(LayerProperty.STYLE,"raster");
  testData.addRasterLayer(new QName(MockData.SF_URI,"mosaic",MockData.SF_PREFIX),"raster-filter-test.zip",null,properties,SystemTestData.class,getCatalog());
  GeoServerUserGroupStore ugStore=getSecurityManager().loadUserGroupService(AbstractUserGroupService.DEFAULT_NAME).createStore();
  ugStore.addUser(ugStore.createUserObject("cite","cite",true));
  ugStore.addUser(ugStore.createUserObject("citeChallenge","citeChallenge",true));
  ugStore.store();
  GeoServerRoleStore roleStore=getSecurityManager().getActiveRoleService().createStore();
  GeoServerRole role=roleStore.createRoleObject("ROLE_DUMMY");
  roleStore.addRole(role);
  roleStore.associateRoleToUser(role,"cite");
  roleStore.store();
  Catalog catalog=getCatalog();
  TestResourceAccessManager tam=(TestResourceAccessManager)applicationContext.getBean("testResourceAccessManager");
  for (  ResourceInfo ri : catalog.getResources(ResourceInfo.class)) {
    if (!"cite".equals(ri.getStore().getWorkspace().getName())) {
      tam.putLimits("cite",ri,new DataAccessLimits(CatalogMode.HIDE,Filter.EXCLUDE));
    }
  }
  for (  ResourceInfo ri : catalog.getResources(ResourceInfo.class)) {
    if (!"cite".equals(ri.getStore().getWorkspace().getName())) {
      tam.putLimits("citeChallenge",ri,new DataAccessLimits(CatalogMode.CHALLENGE,Filter.EXCLUDE));
    }
  }
}
