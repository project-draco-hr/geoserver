{
  initializeForXML();
  tester.startPage(page=new NewDataAccessRulePage());
  tester.assertRenderedPage(NewDataAccessRulePage.class);
  FormTester form=tester.newFormTester("form");
  int index=indexOf(page.workspaceChoice.getChoices(),MockData.CITE_PREFIX);
  form.select("workspace",index);
  tester.executeAjaxEvent("form:workspace","onchange");
  form=tester.newFormTester("form");
  index=indexOf(page.layerChoice.getChoices(),MockData.STREAMS.getLocalPart());
  form.select("layer",index);
  index=page.accessModeChoice.getChoices().indexOf(AccessMode.ADMIN);
  form.select("accessMode",index);
  tester.assertComponent("form:roles:palette:recorder",Recorder.class);
  form.submit("roles:addRole");
  tester.assertRenderedPage(NewRolePage.class);
  form=tester.newFormTester("form");
  form.setValue("name","ROLE_NEW");
  form.submit("save");
  form=tester.newFormTester("form");
  tester.assertRenderedPage(NewDataAccessRulePage.class);
  form.setValue("roles:palette:recorder",gaService.getRoleByName("ROLE_NEW").getAuthority());
  form.submit("roles:addRole");
  tester.assertRenderedPage(NewRolePage.class);
  tester.clickLink("form:cancel");
  tester.assertRenderedPage(NewDataAccessRulePage.class);
  DataAccessRuleDAO dao=DataAccessRuleDAO.get();
  DataAccessRule rule=new DataAccessRule(MockData.CITE_PREFIX,MockData.STREAMS.getLocalPart(),AccessMode.ADMIN);
  assertFalse(dao.getRules().contains(rule));
  form=tester.newFormTester("form");
  form.submit("save");
  assertTrue(dao.getRules().contains(rule));
}
