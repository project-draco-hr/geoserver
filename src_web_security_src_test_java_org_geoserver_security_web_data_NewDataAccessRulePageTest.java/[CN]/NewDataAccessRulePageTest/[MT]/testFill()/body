{
  initializeForXML();
  tester.startPage(page=new NewDataAccessRulePage());
  tester.assertRenderedPage(NewDataAccessRulePage.class);
  FormTester form=tester.newFormTester("form");
  int index=indexOf(page.workspaceChoice.getChoices(),MockData.CITE_PREFIX);
  form.select("workspace",index);
  tester.executeAjaxEvent("form:workspace","onchange");
  form=tester.newFormTester("form");
  index=indexOf(page.layerChoice.getChoices(),MockData.STREAMS.getLocalPart());
  form.select("layer",index);
  index=page.accessModeChoice.getChoices().indexOf(AccessMode.READ);
  form.select("accessMode",index);
  tester.assertComponent("form:roles:palette:recorder",Recorder.class);
  form.submit("roles:addRole");
  tester.assertRenderedPage(NewRolePage.class);
  form=tester.newFormTester("form");
  form.setValue("name","ROLE_NEW");
  form.submit("save");
  form=tester.newFormTester("form");
  tester.assertRenderedPage(NewDataAccessRulePage.class);
  form.setValue("roles:palette:recorder",gaService.getRoleByName("ROLE_NEW").getAuthority());
  form.submit("roles:addRole");
  tester.assertRenderedPage(NewRolePage.class);
  tester.clickLink("form:cancel");
  tester.assertRenderedPage(NewDataAccessRulePage.class);
  form=tester.newFormTester("form");
  form.submit("save");
  tester.assertErrorMessages(new String[0]);
  tester.assertRenderedPage(DataSecurityPage.class);
  DataAccessRule foundRule=null;
  for (  DataAccessRule rule : DataAccessRuleDAO.get().getRules()) {
    if (MockData.CITE_PREFIX.equals(rule.getWorkspace()) && MockData.STREAMS.getLocalPart().equals(rule.getLayer()) && AccessMode.READ.equals(rule.getAccessMode())) {
      foundRule=rule;
      break;
    }
  }
  assertNotNull(foundRule);
  assertEquals(1,foundRule.getRoles().size());
  assertEquals("ROLE_NEW",foundRule.getRoles().iterator().next());
}
