{
  layersById.clear();
  Resource baseDir=resourceLoader.get(baseDirectory);
  LOGGER.info("GeoServer TileLayer store base directory is: " + baseDir.path());
  final List<Resource> tileLayerFiles=Resources.list(baseDir,new Filter<Resource>(){
    @Override public boolean accept(    Resource res){
      return res.name().endsWith(".xml");
    }
  }
);
  LOGGER.info("Loading tile layers from " + baseDir.path());
  for (  Resource res : tileLayerFiles) {
    GeoServerTileLayerInfoImpl info;
    try {
      info=depersist(res);
    }
 catch (    Exception e) {
      LOGGER.log(Level.SEVERE,"Error depersisting tile layer information from file " + res.name(),e);
      continue;
    }
    layersById.put(info.getId(),info.getName());
    if (LOGGER.isLoggable(Level.FINER)) {
      LOGGER.finer("Loaded tile layer '" + info.getName() + "'");
    }
  }
  this.initialized=true;
}
