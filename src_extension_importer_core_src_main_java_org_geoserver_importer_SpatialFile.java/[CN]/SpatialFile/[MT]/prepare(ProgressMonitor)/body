{
  suppFiles=new ArrayList();
  prjFile=null;
  styleFile=null;
  final List<String> styleExtensions=Lists.transform(Styles.handlers(),new Function<StyleHandler,String>(){
    @Nullable @Override public String apply(    @Nullable StyleHandler input){
      return input.getFileExtension();
    }
  }
);
  final String baseName=getBaseName(file.getName());
  for (  File f : file.getParentFile().listFiles()) {
    if (f.equals(file)) {
      continue;
    }
    if (!f.getName().startsWith(baseName)) {
      continue;
    }
    if (!f.isFile()) {
      continue;
    }
    String ext=f.getName().substring(baseName.length());
    if (ext.charAt(0) == '.') {
      if (".prj".equalsIgnoreCase(ext)) {
        prjFile=f;
      }
 else       if (styleFile == null && styleExtensions.contains(ext.substring(1))) {
        styleFile=f;
      }
 else {
        suppFiles.add(f);
      }
    }
  }
  if (format == null) {
    format=DataFormat.lookup(file);
  }
  try {
    fixPrjFile();
  }
 catch (  Exception e) {
    LOGGER.log(Level.WARNING,"Error fixing prj file",e);
  }
}
