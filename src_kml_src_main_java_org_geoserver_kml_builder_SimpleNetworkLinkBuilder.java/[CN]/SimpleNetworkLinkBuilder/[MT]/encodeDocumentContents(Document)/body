{
  WMSMapContent mapContent=context.getMapContent();
  GetMapRequest request=context.getRequest();
  Map formatOptions=request.getFormatOptions();
  LookAtDecoratorFactory lookAtFactory=new LookAtDecoratorFactory();
  LookAtOptions lookAtOptions=new LookAtOptions(formatOptions);
  List<ReferencedEnvelope> layerBounds=new ArrayList<ReferencedEnvelope>(mapContent.layers().size());
  ReferencedEnvelope aggregatedBounds=computePerLayerQueryBounds(mapContent,layerBounds,null);
  if (aggregatedBounds != null) {
    LookAt la=lookAtFactory.buildLookAt(aggregatedBounds,lookAtOptions,false);
    container.setAbstractView(la);
  }
  final List<MapLayerInfo> layers=request.getLayers();
  final List<Style> styles=request.getStyles();
  for (int i=0; i < layers.size(); i++) {
    MapLayerInfo layerInfo=layers.get(i);
    NetworkLink nl=container.createAndAddNetworkLink();
    nl.setName(layerInfo.getLabel());
    if (layerInfo.getDescription() != null && layerInfo.getDescription().length() > 0) {
      nl.setDescription(layerInfo.getDescription());
    }
    if (formatOptions.get(VISIBLE_KEY) != null) {
      boolean visible=Boolean.parseBoolean(formatOptions.get(VISIBLE_KEY).toString());
      nl.setVisibility(visible);
    }
 else {
      nl.setVisibility(true);
    }
    nl.setOpen(true);
    Envelope requestBox=context.getRequestBoxWGS84();
    if (requestBox != null) {
      LookAt la=lookAtFactory.buildLookAt(requestBox,lookAtOptions,false);
      nl.setAbstractView(la);
    }
    GetMapRequest requestCopy=(GetMapRequest)request.clone();
    requestCopy.setBbox(null);
    String style=i < styles.size() ? styles.get(i).getName() : null;
    String href=WMSRequests.getGetMapUrl(requestCopy,layers.get(i).getName(),i,style,null,null);
    try {
      href=URLDecoder.decode(href,"UTF-8");
    }
 catch (    UnsupportedEncodingException e) {
      throw new RuntimeException(e);
    }
    Link url=nl.createAndSetUrl();
    url.setHref(href);
    url.setViewRefreshMode(ViewRefreshMode.ON_STOP);
    url.setViewRefreshTime(1);
    url.setViewBoundScale(1);
    if (formatOptions.get(REFRESH_KEY) != null) {
      String refreshValue=formatOptions.get(REFRESH_KEY).toString();
      if (refreshValue.equalsIgnoreCase("expires")) {
        url.setRefreshMode(RefreshMode.ON_EXPIRE);
      }
 else {
        int interval=Integer.parseInt(refreshValue);
        url.setRefreshInterval(interval);
        url.setRefreshMode(RefreshMode.ON_INTERVAL);
      }
    }
  }
}
