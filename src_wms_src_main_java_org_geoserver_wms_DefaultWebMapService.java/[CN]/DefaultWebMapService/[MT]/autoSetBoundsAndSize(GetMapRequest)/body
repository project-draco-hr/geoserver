{
  List<MapLayerInfo> layers=getMap.getLayers();
  String reqSRS=getMap.getSRS();
  boolean useNativeBounds=true;
  if (reqSRS == null) {
    reqSRS=guessCommonSRS(layers);
    forceSRS(getMap,reqSRS);
  }
  for (int i=0; useNativeBounds && i < layers.size(); i++) {
    if (layers.get(i) != null) {
      String layerSRS=layers.get(i).getSRS();
      useNativeBounds=reqSRS.equalsIgnoreCase(layerSRS) && layers.get(i).getResource().getNativeBoundingBox() != null;
    }
 else {
      useNativeBounds=false;
    }
  }
  CoordinateReferenceSystem reqCRS;
  try {
    reqCRS=CRS.decode(reqSRS);
  }
 catch (  Exception e) {
    throw new ServiceException(e);
  }
  Envelope aggregateBbox=getMap.getBbox();
  boolean specifiedBbox=true;
  if (aggregateBbox == null) {
    specifiedBbox=false;
    for (int i=0; i < layers.size(); i++) {
      MapLayerInfo layerInfo=layers.get(i);
      ReferencedEnvelope curbbox;
      try {
        curbbox=layerInfo.getLatLongBoundingBox();
        if (useNativeBounds) {
          ReferencedEnvelope nativeBbox=layerInfo.getBoundingBox();
          if (nativeBbox == null) {
            try {
              CoordinateReferenceSystem nativeCrs=layerInfo.getCoordinateReferenceSystem();
              nativeBbox=curbbox.transform(nativeCrs,true);
            }
 catch (            Exception e) {
              throw new ServiceException("Best effort native bbox computation failed",e);
            }
          }
          curbbox=nativeBbox;
        }
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
      if (aggregateBbox != null) {
        aggregateBbox.expandToInclude(curbbox);
      }
 else {
        aggregateBbox=curbbox;
      }
    }
    ReferencedEnvelope ref=null;
    if (!useNativeBounds && !reqSRS.equalsIgnoreCase(SRS)) {
      try {
        ref=new ReferencedEnvelope(aggregateBbox,CRS.decode("EPSG:4326"));
        aggregateBbox=ref.transform(reqCRS,true);
      }
 catch (      ProjectionException pe) {
        ref.expandBy(-1 * ref.getWidth() / 50,-1 * ref.getHeight() / 50);
        try {
          aggregateBbox=ref.transform(reqCRS,true);
        }
 catch (        FactoryException e) {
          e.printStackTrace();
        }
catch (        TransformException e) {
          e.printStackTrace();
        }
      }
catch (      NoSuchAuthorityCodeException e) {
        e.printStackTrace();
      }
catch (      TransformException e) {
        e.printStackTrace();
      }
catch (      FactoryException e) {
        e.printStackTrace();
      }
    }
  }
  if (aggregateBbox == null) {
    forceSRS(getMap,DefaultWebMapService.SRS);
    aggregateBbox=DefaultWebMapService.BBOX;
  }
  double bbheight=aggregateBbox.getHeight();
  double bbwidth=aggregateBbox.getWidth();
  double bbratio=bbwidth / bbheight;
  double mheight=getMap.getHeight();
  double mwidth=getMap.getWidth();
  if (mheight > 0.5 && mwidth > 0.5 && specifiedBbox) {
  }
 else {
    if (mheight > 0.5 && mwidth > 0.5) {
      double mratio=mwidth / mheight;
      if (bbratio > mratio) {
        double diff=((bbwidth / mratio) - bbheight) / 2;
        aggregateBbox.expandBy(0,diff);
      }
 else {
        double diff=((bbheight * mratio) - bbwidth) / 2;
        aggregateBbox.expandBy(diff,0);
      }
      adjustBounds(reqSRS,aggregateBbox);
    }
 else     if (mheight > 0.5) {
      mwidth=bbratio * mheight;
    }
 else {
      if (mwidth > 0.5) {
        mheight=(mwidth / bbratio >= 1) ? mwidth / bbratio : 1;
      }
 else {
        if (bbratio > 1) {
          mwidth=MAX_SIDE;
          mheight=(mwidth / bbratio >= 1) ? mwidth / bbratio : 1;
        }
 else {
          mheight=MAX_SIDE;
          mwidth=(mheight * bbratio >= 1) ? mheight * bbratio : 1;
        }
        if (mheight < MIN_OL_HEIGHT && ("application/openlayers".equalsIgnoreCase(getMap.getFormat()) || "openlayers".equalsIgnoreCase(getMap.getFormat()))) {
          mheight=MIN_OL_HEIGHT;
          mwidth=(mheight * bbratio >= 1) ? mheight * bbratio : 1;
        }
      }
    }
    getMap.setBbox(aggregateBbox);
    getMap.setWidth((int)mwidth);
    getMap.setHeight((int)mheight);
  }
}
