{
  Node shape=new Node("Shape");
  Node appearance=new Node("Appearance");
  Node material=new Node("Material");
  material.addAttribute(new Attribute("emissiveColor","0 0 0"));
  appearance.addNode(material);
  shape.addNode(appearance);
  Node indexedLineSet=new Node("IndexedLineSet");
  Node coordinate=new Node("GeoCoordinate");
  String coords="";
  String index="";
  int i=0;
  int size=coordinates.size();
  int d=coordinates.getDimension();
  for (i=0; i < size; i++) {
    index+=String.valueOf(i) + " ";
  }
  index+="-1";
  for (i=0; i < size - 1; i++) {
    coords+=String.valueOf(coordinates.getOrdinate(i,0)) + " ";
    coords+=String.valueOf(coordinates.getOrdinate(i,1)) + " ";
    if (d < 3) {
      coords+=String.valueOf(0) + " ";
    }
 else {
      coords+=String.valueOf(coordinates.getOrdinate(i,2)) + " ";
    }
  }
  coords+=String.valueOf(coordinates.getOrdinate(i,0)) + " ";
  coords+=String.valueOf(coordinates.getOrdinate(i,1)) + " ";
  if (d < 3) {
    coords+=String.valueOf(0);
  }
 else {
    coords+=String.valueOf(coordinates.getOrdinate(i,2));
  }
  coordinate.addAttribute(new Attribute("point",coords));
  coordinate.addAttribute(this.geoSystem);
  coordinate.addNode(this.origin);
  indexedLineSet.addNode(coordinate);
  indexedLineSet.addAttribute(new Attribute("coordIndex",index));
  shape.addNode(indexedLineSet);
  return shape;
}
