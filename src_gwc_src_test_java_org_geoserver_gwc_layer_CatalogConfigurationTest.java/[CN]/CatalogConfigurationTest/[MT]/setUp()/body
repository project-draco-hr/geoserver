{
  defaults=GWCConfig.getOldDefaults();
  defaults.getDefaultVectorCacheFormats().clear();
  defaults.getDefaultVectorCacheFormats().add("image/png8");
  defaults.getDefaultOtherCacheFormats().clear();
  defaults.getDefaultOtherCacheFormats().add("image/jpeg");
  defaults.setCacheLayersByDefault(false);
  defaults.setCacheNonDefaultStyles(true);
  layer1=mockLayer("layer1",new String[]{},PublishedType.RASTER);
  layer2=mockLayer("layer2",new String[]{},PublishedType.RASTER);
  layerWithNoTileLayer=mockLayer("layerWithNoTileLayer",new String[]{},PublishedType.RASTER);
  group1=mockGroup("group1",layer1,layer2);
  group2=mockGroup("group2",layer2,layer1);
  groupWithNoTileLayer=mockGroup("groupWithNoTileLayer",layerWithNoTileLayer,layer1,layer2);
  layerInfo1=TileLayerInfoUtil.loadOrCreate(layer1,defaults);
  layerInfo1.setMetaTilingX(1);
  layerInfo1.setMetaTilingY(1);
  layerInfo2=TileLayerInfoUtil.loadOrCreate(layer2,defaults);
  layerInfo2.setMetaTilingX(2);
  layerInfo2.setMetaTilingY(2);
  groupInfo1=TileLayerInfoUtil.loadOrCreate(group1,defaults);
  groupInfo1.setMetaTilingX(3);
  groupInfo1.setMetaTilingY(3);
  groupInfo2=TileLayerInfoUtil.loadOrCreate(group2,defaults);
  groupInfo2.setMetaTilingX(4);
  groupInfo2.setMetaTilingY(4);
  catalog=mock(Catalog.class);
  when(catalog.getLayers()).thenReturn(ImmutableList.of(layer1,layerWithNoTileLayer,layer2));
  when(catalog.getLayer(layer1.getId())).thenReturn(layer1);
  when(catalog.getLayer(layer2.getId())).thenReturn(layer2);
  when(catalog.getLayerGroup(group1.getId())).thenReturn(group1);
  when(catalog.getLayerGroup(group2.getId())).thenReturn(group2);
  when(catalog.getLayerGroups()).thenReturn(ImmutableList.of(group1,groupWithNoTileLayer,group2));
  when(catalog.getLayerByName(eq(tileLayerName(layer1)))).thenReturn(layer1);
  when(catalog.getLayerByName(eq(tileLayerName(layer2)))).thenReturn(layer2);
  when(catalog.getLayerByName(eq(tileLayerName(layerWithNoTileLayer)))).thenReturn(layerWithNoTileLayer);
  when(catalog.getLayerGroupByName(eq(tileLayerName(group1)))).thenReturn(group1);
  when(catalog.getLayerGroupByName(eq(tileLayerName(group2)))).thenReturn(group2);
  when(catalog.getLayerGroupByName(eq(tileLayerName(groupWithNoTileLayer)))).thenReturn(groupWithNoTileLayer);
  gridSetBroker=new GridSetBroker(true,true);
  Set<String> layerNames=ImmutableSet.of(tileLayerName(layer1),tileLayerName(layer2),tileLayerName(group1),tileLayerName(group2));
  tileLayerCatalog=mock(TileLayerCatalog.class);
  when(tileLayerCatalog.getLayerIds()).thenReturn(ImmutableSet.of(layer1.getId(),layer2.getId(),group1.getId(),group2.getId()));
  when(tileLayerCatalog.getLayerNames()).thenReturn(layerNames);
  when(tileLayerCatalog.getLayerById(layer1.getId())).thenReturn(layerInfo1);
  when(tileLayerCatalog.getLayerById(layer2.getId())).thenReturn(layerInfo2);
  when(tileLayerCatalog.getLayerById(group1.getId())).thenReturn(groupInfo1);
  when(tileLayerCatalog.getLayerById(group2.getId())).thenReturn(groupInfo2);
  when(tileLayerCatalog.exists(layer1.getId())).thenReturn(true);
  when(tileLayerCatalog.exists(layer2.getId())).thenReturn(true);
  when(tileLayerCatalog.exists(group1.getId())).thenReturn(true);
  when(tileLayerCatalog.exists(group2.getId())).thenReturn(true);
  when(tileLayerCatalog.getLayerByName(tileLayerName(layer1))).thenReturn(layerInfo1);
  when(tileLayerCatalog.getLayerByName(tileLayerName(layer2))).thenReturn(layerInfo2);
  when(tileLayerCatalog.getLayerByName(tileLayerName(group1))).thenReturn(groupInfo1);
  when(tileLayerCatalog.getLayerByName(tileLayerName(group2))).thenReturn(groupInfo2);
  when(tileLayerCatalog.getLayerId(tileLayerName(layer1))).thenReturn(layer1.getId());
  when(tileLayerCatalog.getLayerId(tileLayerName(layer2))).thenReturn(layer2.getId());
  when(tileLayerCatalog.getLayerId(tileLayerName(group1))).thenReturn(group1.getId());
  when(tileLayerCatalog.getLayerId(tileLayerName(group2))).thenReturn(group2.getId());
  config=new CatalogConfiguration(catalog,tileLayerCatalog,gridSetBroker);
  mockMediator=mock(GWC.class);
  GWC.set(mockMediator);
  when(mockMediator.getConfig()).thenReturn(defaults);
  when(mockMediator.getCatalog()).thenReturn(catalog);
}
