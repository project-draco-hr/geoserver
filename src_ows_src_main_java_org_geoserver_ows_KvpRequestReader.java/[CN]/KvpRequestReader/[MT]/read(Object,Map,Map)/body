{
  for (Iterator e=kvp.entrySet().iterator(); e.hasNext(); ) {
    Map.Entry entry=(Map.Entry)e.next();
    String property=(String)entry.getKey();
    Object value=entry.getValue();
    if (value == null) {
      continue;
    }
    if (filter(property)) {
      continue;
    }
    if (!hasRepeatedParameters) {
      Object rawValue=rawKvp.get(property);
      if (rawValue instanceof String[]) {
        throw new ServiceException("Found multiple, inconsistent values for parameter " + property + ": "+ Arrays.toString((String[])rawValue),ServiceException.INVALID_PARAMETER_VALUE,property);
      }
    }
    Class<? extends Object> targetClass=request.getClass();
    Class<? extends Object> valueClass=value.getClass();
    Method setter=OwsUtils.setter(targetClass,property,valueClass);
    if (setter == null) {
      setter=OwsUtils.setter(request.getClass(),property,null);
      if (setter != null) {
        Class target=setter.getParameterTypes()[0];
        Object converted=Converters.convert(value,target);
        if (converted != null) {
          value=converted;
        }
 else {
          setter=null;
        }
      }
    }
    if (setter != null) {
      setter.invoke(request,new Object[]{value});
    }
  }
  return request;
}
