{
  super.configureContext(context);
  context.registerComponentInstance(Ows10Factory.eINSTANCE);
  context.registerComponentInstance(WfsFactory.eINSTANCE);
  context.registerComponentInstance(new WFSHandlerFactory(catalog,schemaBuilder));
  context.registerComponentInstance(catalog);
  context.registerComponentImplementation(PropertyTypePropertyExtractor.class);
  FeatureTypeCache featureTypeCache=(FeatureTypeCache)context.getComponentInstanceOfType(FeatureTypeCache.class);
  Collection featureTypes=catalog.getFeatureTypes();
  for (Iterator f=featureTypes.iterator(); f.hasNext(); ) {
    FeatureTypeInfo meta=(FeatureTypeInfo)f.next();
    if (!meta.enabled()) {
      continue;
    }
    FeatureType featureType=null;
    try {
      featureType=meta.getFeatureType();
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,"Could not load underlying feature type for type " + meta.getName(),e);
      continue;
    }
    featureTypeCache.put(featureType);
  }
}
