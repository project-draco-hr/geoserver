{
  Color oldColor=g2d.getColor();
  Stroke oldStroke=g2d.getStroke();
  Font oldFont=g2d.getFont();
  Object oldAntialias=g2d.getRenderingHint(RenderingHints.KEY_ANTIALIASING);
  g2d.setFont(oldFont.deriveFont(this.fontSize));
  double scaleDenominator=RendererUtilities.calculateOGCScale(mapContext.getAreaOfInterest(),mapContext.getRequest().getWidth(),new HashMap());
  String curMapUnits="m";
  double normalizedScale=(scaleDenominator > 1.0) ? (1.0 / scaleDenominator) : scaleDenominator;
  double resolution=1 / (normalizedScale * INCHES_PER_UNIT.get(curMapUnits) * this.dpi);
  int maxWidth=suggestedWidth;
  if (maxWidth > paintArea.getWidth()) {
    maxWidth=(int)paintArea.getWidth();
  }
  maxWidth=maxWidth - 6;
  double maxSizeData=maxWidth * resolution * INCHES_PER_UNIT.get(curMapUnits);
  String topUnits;
  String bottomUnits;
  if (maxSizeData > 100000) {
    topUnits=topOutUnits;
    bottomUnits=bottomOutUnits;
  }
 else {
    topUnits=topInUnits;
    bottomUnits=bottomInUnits;
  }
  double topMax=maxSizeData / INCHES_PER_UNIT.get(topUnits);
  double bottomMax=maxSizeData / INCHES_PER_UNIT.get(bottomUnits);
  int topRounded=this.getBarLength(topMax);
  int bottomRounded=this.getBarLength(bottomMax);
  topMax=topRounded / INCHES_PER_UNIT.get(curMapUnits) * INCHES_PER_UNIT.get(topUnits);
  bottomMax=bottomRounded / INCHES_PER_UNIT.get(curMapUnits) * INCHES_PER_UNIT.get(bottomUnits);
  int topPx=(int)(topMax / resolution);
  int bottomPx=(int)(bottomMax / resolution);
  int centerY=(int)paintArea.getCenterY();
  int leftX=(int)paintArea.getMinX() + ((int)paintArea.getWidth() - Math.max(topPx,bottomPx)) / 2;
  FontMetrics metrics=g2d.getFontMetrics(g2d.getFont());
  int prongHeight=(int)metrics.getHeight() + metrics.getDescent();
  g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_OFF);
  Rectangle frame=new Rectangle(leftX - 4,centerY - prongHeight - 4,Math.max(topPx,bottomPx) + 8,8 + prongHeight * 2);
  g2d.setColor(bgcolor);
  g2d.fill(frame);
  ;
  frame.height-=1;
  frame.width-=1;
  g2d.setColor(fgcolor);
  g2d.setStroke(new BasicStroke(1));
  g2d.draw(frame);
  g2d.setStroke(new BasicStroke(2));
  g2d.drawLine(leftX,centerY,leftX + topPx,centerY);
  g2d.drawLine(leftX,centerY,leftX + bottomPx,centerY);
  g2d.drawLine(leftX,centerY + prongHeight,leftX,centerY - prongHeight);
  g2d.drawLine(leftX + topPx,centerY,leftX + topPx,centerY - prongHeight);
  g2d.drawLine(leftX + bottomPx,centerY,leftX + bottomPx,centerY + prongHeight);
  String topText=topRounded + " " + topUnits;
  String bottomText=bottomRounded + " " + bottomUnits;
  g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,oldAntialias);
  g2d.drawString(topText,leftX + (int)((topPx - metrics.stringWidth(topText)) / 2),centerY - prongHeight + metrics.getAscent());
  g2d.drawString(bottomText,leftX + (int)((bottomPx - metrics.stringWidth(bottomText)) / 2),centerY + metrics.getHeight());
  g2d.setColor(oldColor);
  g2d.setStroke(oldStroke);
  g2d.setFont(oldFont);
}
