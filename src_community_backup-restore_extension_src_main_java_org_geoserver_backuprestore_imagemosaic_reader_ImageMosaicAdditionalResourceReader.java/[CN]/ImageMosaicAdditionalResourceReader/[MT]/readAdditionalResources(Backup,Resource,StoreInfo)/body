{
  final Resource sourceBackupFolder=BackupUtils.dir(base.parent(),IMAGEMOSAIC_INDEXES_FOLDER);
  final CoverageStoreInfo mosaicCoverageStore=(CoverageStoreInfo)item;
  final String mosaicName=mosaicCoverageStore.getName();
  final String mosaicUrlBase=mosaicCoverageStore.getURL();
  final Resource mosaicIndexBase=Resources.fromURL(mosaicUrlBase);
  List<Resource> mosaicIndexerResources=Resources.list(sourceBackupFolder,resources.get("properties"),true);
  boolean datastorePresent=true;
  for (  Resource res : mosaicIndexerResources) {
    if (!FilenameUtils.getBaseName(res.name()).equals(mosaicName) && Resources.exists(res) && Resources.canRead(res)) {
      boolean result=copyFile(sourceBackupFolder,mosaicIndexBase,res,false);
      if (result && FilenameUtils.getBaseName(res.name()).equals("datastore")) {
        datastorePresent=false;
      }
    }
  }
  List<Resource> mosaicIndexerTemplateResources=Resources.list(sourceBackupFolder,resources.get("templates"),true);
  for (  Resource res : mosaicIndexerTemplateResources) {
    if (Resources.exists(res) && Resources.canRead(res)) {
      boolean result=copyFile(sourceBackupFolder,mosaicIndexBase,res,true);
      if (result) {
        resolveTemplate(sourceBackupFolder,mosaicIndexBase,res);
      }
    }
  }
  if (!datastorePresent) {
    final File indexerFile=new File(mosaicIndexBase.dir(),"indexer.properties");
    Properties indexerProperties=new Properties();
    if (indexerFile.exists() && indexerFile.canRead()) {
      indexerProperties.load(new FileInputStream(indexerFile));
    }
    indexerProperties.setProperty("CanBeEmpty","true");
    indexerProperties.store(new FileOutputStream(indexerFile),null);
  }
}
