{
  try {
    xmppClient.handleMemberLeave(packet);
  }
 catch (  Exception e) {
    final Set<RemoteProcessClientListener> remoteClientListeners=xmppClient.getRemoteClientListeners();
synchronized (remoteClientListeners) {
      for (      RemoteProcessClientListener listener : remoteClientListeners) {
        Map<String,Object> metadata=new HashMap<String,Object>();
        metadata.put("serviceJID",packet.getFrom());
        final String pID=(signalArgs != null ? signalArgs.get("id") : null);
        listener.exceptionOccurred(pID,e,metadata);
      }
    }
  }
}
