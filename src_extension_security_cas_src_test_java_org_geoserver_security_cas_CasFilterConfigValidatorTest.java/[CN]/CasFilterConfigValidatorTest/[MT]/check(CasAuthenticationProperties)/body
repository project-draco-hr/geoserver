{
  SecurityFilterConfig fconfig=(SecurityFilterConfig)config;
  config.setService(null);
  boolean failed=false;
  try {
    getSecurityManager().saveFilter(fconfig);
  }
 catch (  CasFilterConfigException ex) {
    assertEquals(CasFilterConfigException.CAS_SERVICE_URL_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setService("blabal");
  failed=false;
  try {
    getSecurityManager().saveFilter(fconfig);
  }
 catch (  CasFilterConfigException ex) {
    assertEquals(CasFilterConfigException.CAS_SERVICE_URL_MALFORMED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setService("http://localhost/service");
  config.setCasServerUrlPrefix(null);
  failed=false;
  try {
    getSecurityManager().saveFilter(fconfig);
  }
 catch (  CasFilterConfigException ex) {
    assertEquals(CasFilterConfigException.CAS_SERVER_URL_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setCasServerUrlPrefix("blabal");
  failed=false;
  try {
    getSecurityManager().saveFilter(fconfig);
  }
 catch (  CasFilterConfigException ex) {
    assertEquals(CasFilterConfigException.CAS_SERVER_URL_MALFORMED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setCasServerUrlPrefix("http://casserver/case");
  config.setProxyCallbackUrlPrefix("blabal");
  failed=false;
  try {
    getSecurityManager().saveFilter(fconfig);
  }
 catch (  CasFilterConfigException ex) {
    assertEquals(CasFilterConfigException.CAS_PROXYCALLBACK_MALFORMED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setProxyCallbackUrlPrefix("http://localhost/callback");
  failed=false;
  try {
    getSecurityManager().saveFilter(fconfig);
  }
 catch (  CasFilterConfigException ex) {
    assertEquals(CasFilterConfigException.CAS_PROXYCALLBACK_NOT_HTTPS,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setProxyCallbackUrlPrefix("https://myhost/callback");
  failed=false;
  try {
    getSecurityManager().saveFilter(fconfig);
  }
 catch (  CasFilterConfigException ex) {
    assertEquals(CasFilterConfigException.CAS_PROXYCALLBACK_HOST_UNEQUAL_SERVICE_HOST,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    failed=true;
  }
  assertTrue(failed);
  config.setProxyCallbackUrlPrefix("https://localhost/callback");
  getSecurityManager().saveFilter(fconfig);
}
