{
  GMLInfo gml=wfs.getGML().get(version);
  String prefix=featureType.getNamespace().getPrefix();
  String uri=featureType.getNamespace().getURI();
  start("FeatureType",attributes(new String[]{"xmlns:" + prefix,uri}));
  element("Name",featureType.getPrefixedName());
  element("Title",featureType.getTitle());
  element("Abstract",featureType.getAbstract());
  keywords(featureType.getKeywords());
  String srs=featureType.getSRS();
  srs=applySRSNameStyle(gml,srs);
  if (crs) {
    element("DefaultCRS",srs);
  }
 else {
    element("DefaultSRS",srs);
  }
  List<String> otherSRSes=getOtherSRS(featureType);
  for (  String otherSRS : otherSRSes) {
    if (otherSRS != null) {
      otherSRS=applySRSNameStyle(gml,otherSRS);
      if (!otherSRS.equals(srs)) {
        if (crs) {
          element("OtherCRS",otherSRS);
        }
 else {
          element("OtherSRS",otherSRS);
        }
      }
    }
  }
  Envelope bbox=null;
  bbox=featureType.getLatLonBoundingBox();
  start("ows:WGS84BoundingBox");
  element("ows:LowerCorner",bbox.getMinX() + " " + bbox.getMinY());
  element("ows:UpperCorner",bbox.getMaxX() + " " + bbox.getMaxY());
  end("ows:WGS84BoundingBox");
  List<MetadataLinkInfo> mlinks=featureType.getMetadataLinks();
  if (mlinks != null && !mlinks.isEmpty()) {
    for (    MetadataLinkInfo link : mlinks) {
      metadataLink(link);
    }
  }
  end("FeatureType");
}
