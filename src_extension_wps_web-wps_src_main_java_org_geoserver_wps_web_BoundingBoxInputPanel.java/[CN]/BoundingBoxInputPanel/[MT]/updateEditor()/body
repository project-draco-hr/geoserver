{
  if (get("editor") != null) {
    remove("editor");
  }
  valueModel.setObject(null);
  ParameterType pt=(ParameterType)typeChoice.getModelObject();
  if (pt == ParameterType.TEXT) {
    Fragment f=new Fragment("editor","text",this);
    DropDownChoice mimeChoice=new DropDownChoice("mime",new PropertyModel(getDefaultModel(),"mime"),mimeTypes);
    f.add(mimeChoice);
    f.add(new TextArea("textarea",valueModel));
    add(f);
  }
 else   if (pt == ParameterType.VECTOR_LAYER) {
    valueModel.setObject(new VectorLayerConfiguration());
    Fragment f=new Fragment("editor","vectorLayer",this);
    DropDownChoice layer=new DropDownChoice("layer",new PropertyModel(valueModel,"layerName"),getVectorLayerNames());
    f.add(layer);
    add(f);
  }
 else   if (pt == ParameterType.RASTER_LAYER) {
    valueModel.setObject(new RasterLayerConfiguration());
    Fragment f=new Fragment("editor","rasterLayer",this);
    final DropDownChoice layer=new DropDownChoice("layer",new PropertyModel(valueModel,"layerName"),getRasterLayerNames());
    f.add(layer);
    add(f);
    layer.add(new AjaxFormComponentUpdatingBehavior("onchange"){
      @Override protected void onUpdate(      AjaxRequestTarget target){
        String name=layer.getDefaultModelObjectAsString();
        LayerInfo li=GeoServerApplication.get().getCatalog().getLayerByName(name);
        ReferencedEnvelope spatialDomain=li.getResource().getNativeBoundingBox();
        ((RasterLayerConfiguration)valueModel.getObject()).setSpatialDomain(spatialDomain);
      }
    }
);
  }
 else {
    error("Unsupported parameter type");
  }
}
