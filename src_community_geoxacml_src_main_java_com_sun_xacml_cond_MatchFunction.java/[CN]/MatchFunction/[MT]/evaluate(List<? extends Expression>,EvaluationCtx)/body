{
  AttributeValue[] argValues=new AttributeValue[inputs.size()];
  EvaluationResult result=evalArgs(inputs,context,argValues);
  if (result != null)   return result;
  boolean boolResult=false;
switch (getFunctionId()) {
case ID_REGEXP_STRING_MATCH:
case ID_STRING_REGEXP_MATCH:
{
      String arg0=((StringAttribute)(argValues[0])).getValue();
      String arg1=((StringAttribute)(argValues[1])).getValue();
      boolResult=regexpHelper(arg0,arg1);
      break;
    }
case ID_X500NAME_MATCH:
{
    X500Principal arg0=((X500NameAttribute)(argValues[0])).getValue();
    X500Principal arg1=((X500NameAttribute)(argValues[1])).getValue();
    boolResult=arg1.getName(X500Principal.CANONICAL).endsWith(arg0.getName(X500Principal.CANONICAL));
    break;
  }
case ID_RFC822NAME_MATCH:
{
  String arg0=((StringAttribute)(argValues[0])).getValue();
  String arg1=((RFC822NameAttribute)(argValues[1])).getValue();
  if (arg0.indexOf('@') != -1) {
    String normalized=(new RFC822NameAttribute(arg0)).getValue();
    boolResult=normalized.equals(arg1);
  }
 else   if (arg0.charAt(0) == '.') {
    boolResult=arg1.endsWith(arg0.toLowerCase());
  }
 else {
    String mailDomain=arg1.substring(arg1.indexOf('@') + 1);
    boolResult=arg0.toLowerCase().equals(mailDomain);
  }
  break;
}
case ID_ANYURI_REGEXP_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((AnyURIAttribute)(argValues[1])).encode();
boolResult=regexpHelper(arg0,arg1);
break;
}
case ID_IPADDRESS_REGEXP_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((IPAddressAttribute)(argValues[1])).encode();
boolResult=regexpHelper(arg0,arg1);
break;
}
case ID_DNSNAME_REGEXP_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((DNSNameAttribute)(argValues[1])).encode();
boolResult=regexpHelper(arg0,arg1);
break;
}
case ID_RFC822NAME_REGEXP_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((RFC822NameAttribute)(argValues[1])).encode();
boolResult=regexpHelper(arg0,arg1);
break;
}
case ID_X500NAME_REGEXP_MATCH:
{
String arg0=((StringAttribute)(argValues[0])).getValue();
String arg1=((X500NameAttribute)(argValues[1])).encode();
boolResult=regexpHelper(arg0,arg1);
break;
}
}
return EvaluationResult.getInstance(boolResult);
}
