{
  AttributeDescriptor descriptor=(AttributeDescriptor)Types.findDescriptor(type,path[index]);
  if (descriptor == null) {
    throw new IllegalArgumentException("Cannot find descriptor for attribute " + path[index] + " in type "+ type.getName().toString());
  }
  if (index == path.length - 1) {
    SimpleTreeLeaf leaf=new SimpleTreeLeaf();
    leaf.descriptor=descriptor;
    leaf.values=new ArrayList(value);
    leaf.userData=userData;
    branch.children.put(path[index],leaf);
    leaf.userData=userData;
  }
 else   if (index == path.length - 2) {
    ComplexTreeLeaf leaf=(ComplexTreeLeaf)branch.children.get(path[index]);
    if (leaf == null) {
      leaf=new ComplexTreeLeaf();
      branch.children.put(path[index],leaf);
      leaf.descriptor=descriptor;
    }
    if (leaf.values.size() == 0) {
      for (int i=0; i < value.size(); i++) {
        leaf.values.add(new HashMap<String,Object>());
      }
    }
 else     if (leaf.values.size() == 1) {
      for (int i=1; i < value.size(); i++) {
        leaf.values.add(new HashMap<String,Object>(leaf.values.get(0)));
      }
    }
 else     if (value.size() != 1 && leaf.values.size() != value.size()) {
      throw new IllegalArgumentException("Error in mapping: Number of values not matching.");
    }
    for (int i=0; i < leaf.values.size(); i++) {
      leaf.values.get(i).put(path[index + 1],value.size() == 1 ? value.get(0) : value.get(i));
    }
    leaf.userData=userData;
  }
 else {
    TreeNode child=branch.children.get(path[index]);
    if (child == null) {
      child=new TreeBranch();
      child.descriptor=descriptor;
      branch.children.put(path[index],child);
    }
    createAttribute((TreeBranch)child,index + 1,(ComplexType)descriptor.getType(),path,value,userData);
  }
}
