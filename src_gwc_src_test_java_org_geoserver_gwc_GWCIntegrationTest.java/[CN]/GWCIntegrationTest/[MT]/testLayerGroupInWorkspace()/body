{
  String workspaceName=MockData.BASIC_POLYGONS.getPrefix();
  LayerGroupInfo lg=getCatalog().getFactory().createLayerGroup();
  lg.setName(WORKSPACED_LAYER_GROUP);
  String bpLayerId=getLayerId(MockData.BASIC_POLYGONS);
  String mpLayerId=getLayerId(MockData.LAKES);
  lg.getLayers().add(getCatalog().getLayerByName(bpLayerId));
  lg.getLayers().add(getCatalog().getLayerByName(mpLayerId));
  lg.setWorkspace(getCatalog().getWorkspaceByName(workspaceName));
  new CatalogBuilder(getCatalog()).calculateLayerGroupBounds(lg);
  getCatalog().add(lg);
  String request="gwc/service/wmts?request=GetTile&layer=" + workspaceName + ":"+ WORKSPACED_LAYER_GROUP+ "&format=image/png&tilematrixset=EPSG:4326&tilematrix=EPSG:4326:0&tilerow=0&tilecol=0";
  MockHttpServletResponse sr=getAsServletResponse(request);
  assertEquals(200,sr.getStatus());
  assertEquals("image/png",sr.getContentType());
  assertThat(sr.getHeader("geowebcache-cache-result"),equalToIgnoringCase("MISS"));
  sr=getAsServletResponse(request);
  assertEquals(200,sr.getStatus());
  assertEquals("image/png",sr.getContentType());
  assertThat(sr.getHeader("geowebcache-cache-result"),equalToIgnoringCase("HIT"));
  final GWC gwc=GWC.get();
  gwc.getConfig().setDirectWMSIntegrationEnabled(true);
  final TileLayer tileLayer=gwc.getTileLayerByName(lg.prefixedName());
  request=buildGetMap(true,lg.prefixedName(),"EPSG:4326",null,tileLayer) + "&tiled=true";
  sr=getAsServletResponse(request);
  assertEquals(200,sr.getStatus());
  assertEquals("image/png",sr.getContentType());
  assertEquals(lg.prefixedName(),sr.getHeader("geowebcache-layer"));
  assertThat(sr.getHeader("geowebcache-cache-result"),equalToIgnoringCase("HIT"));
  request=workspaceName + "/" + buildGetMap(true,lg.getName(),"EPSG:4326",null,tileLayer)+ "&tiled=true";
  sr=getAsServletResponse(request);
  assertEquals(200,sr.getStatus());
  assertEquals(lg.prefixedName(),sr.getHeader("geowebcache-layer"));
  assertThat(sr.getHeader("geowebcache-cache-result"),equalToIgnoringCase("HIT"));
  WorkspaceInfo ws=getCatalog().getWorkspaceByName(workspaceName);
  String newWorkspaceName=workspaceName + "_renamed";
  ws.setName(newWorkspaceName);
  getCatalog().save(ws);
  request="gwc/service/wmts?request=GetTile&layer=" + newWorkspaceName + ":"+ WORKSPACED_LAYER_GROUP+ "&format=image/png&tilematrixset=EPSG:4326&tilematrix=EPSG:4326:0&tilerow=0&tilecol=0";
  sr=getAsServletResponse(request);
  assertEquals(200,sr.getStatus());
  assertEquals("image/png",sr.getContentType());
  assertThat(sr.getHeader("geowebcache-cache-result"),equalToIgnoringCase("HIT"));
  String newQualifiedName=newWorkspaceName + ":" + lg.getName();
  request=buildGetMap(true,newQualifiedName,"EPSG:4326",null,tileLayer) + "&tiled=true";
  sr=getAsServletResponse(request);
  assertEquals(200,sr.getStatus());
  assertEquals("image/png",sr.getContentType());
  assertEquals(lg.prefixedName(),sr.getHeader("geowebcache-layer"));
  assertThat(sr.getHeader("geowebcache-cache-result"),equalToIgnoringCase("HIT"));
  request=newWorkspaceName + "/" + buildGetMap(true,lg.getName(),"EPSG:4326",null,tileLayer)+ "&tiled=true";
  sr=getAsServletResponse(request);
  assertEquals(200,sr.getStatus());
  assertEquals(newQualifiedName,sr.getHeader("geowebcache-layer"));
  assertThat(sr.getHeader("geowebcache-cache-result"),equalToIgnoringCase("HIT"));
}
