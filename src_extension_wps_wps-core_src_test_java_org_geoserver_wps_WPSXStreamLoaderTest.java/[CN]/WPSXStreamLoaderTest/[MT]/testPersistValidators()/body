{
  ProcessGroupInfo geoGroup=new ProcessGroupInfoImpl();
  geoGroup.setFactoryClass(GeometryProcessFactory.class);
  ProcessInfo area=new ProcessInfoImpl();
  area.setEnabled(true);
  area.setName(new NameImpl("geo","Area"));
  area.getValidators().put("geom",new MaxSizeValidator(10));
  geoGroup.getFilteredProcesses().add(area);
  ProcessGroupInfo rasGroup=new ProcessGroupInfoImpl();
  rasGroup.setFactoryClass(RasterProcessFactory.class);
  ProcessInfo contour=new ProcessInfoImpl();
  contour.setEnabled(true);
  contour.setName(new NameImpl("ras","Contour"));
  contour.getValidators().put("levels",new NumberRangeValidator(new NumberRange<Double>(Double.class,-8000d,8000d)));
  contour.getValidators().put("levels",new MultiplicityValidator(3));
  rasGroup.getFilteredProcesses().add(contour);
  File root=new File("./target");
  WPSXStreamLoader loader=new WPSXStreamLoader(new GeoServerResourceLoader(root));
  WPSInfo wps=loader.createServiceFromScratch(null);
  wps.getProcessGroups().add(geoGroup);
  wps.getProcessGroups().add(rasGroup);
  loader.save(wps,null,Files.asResource(root));
  String xml=FileUtils.readFileToString(new File(root,"wps.xml"));
  System.out.println(xml);
  Document dom=dom(xml);
  String baseGeomPath="/wps/processGroups/processGroup[factoryClass='" + GeometryProcessFactory.class.getName() + "']/filteredProcesses/accessInfo";
  XMLAssert.assertXpathExists(baseGeomPath,dom);
  String geoAreaBase=baseGeomPath + "[name='geo:Area']/validators/entry[@key='geom']";
  XMLAssert.assertXpathExists(geoAreaBase,dom);
  XMLAssert.assertXpathEvaluatesTo("10",geoAreaBase + "/maxSizeValidator/maxSizeMB",dom);
  String baseRasPath="/wps/processGroups/processGroup[factoryClass='" + RasterProcessFactory.class.getName() + "']/filteredProcesses/accessInfo";
  XMLAssert.assertXpathExists(baseRasPath,dom);
  String rasContourBase=baseRasPath + "[name='ras:Contour']";
  XMLAssert.assertXpathExists(rasContourBase,dom);
  XMLAssert.assertXpathEvaluatesTo("3",rasContourBase + "/validators/entry[@key='levels']/maxMultiplicityValidator/maxInstances",dom);
  XMLAssert.assertXpathEvaluatesTo("-8000.0",rasContourBase + "/validators/entry[@key='levels']/rangeValidator/range/minValue",dom);
  XMLAssert.assertXpathEvaluatesTo("8000.0",rasContourBase + "/validators/entry[@key='levels']/rangeValidator/range/maxValue",dom);
  WPSInfo wps2=loader.load(null,Files.asResource(root));
  assertEquals(wps,wps2);
}
