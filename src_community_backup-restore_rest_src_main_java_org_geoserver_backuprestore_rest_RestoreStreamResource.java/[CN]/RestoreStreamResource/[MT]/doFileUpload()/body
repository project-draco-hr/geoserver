{
  try {
    Form query=getRequest().getResourceRef().getQueryAsForm();
    Hints hints=null;
    final String options=query.getValues("options");
    if (options != null) {
      hints=new Hints(new HashMap(2));
      for (      String option : options.split(",")) {
switch (option) {
case Backup.PARAM_BEST_EFFORT_MODE:
          hints.add(new Hints(new Hints.OptionKey(Backup.PARAM_BEST_EFFORT_MODE),Backup.PARAM_BEST_EFFORT_MODE));
        break;
case Backup.PARAM_DRY_RUN_MODE:
      hints.add(new Hints(new Hints.OptionKey(Backup.PARAM_DRY_RUN_MODE),Backup.PARAM_DRY_RUN_MODE));
    break;
}
}
}
final String filter=query.getValues("filter");
Filter wsFilter=null;
if (filter != null) {
try {
wsFilter=ECQL.toFilter(filter);
}
 catch (Exception e) {
throw new RuntimeException(e);
}
}
getResponse().setStatus(Status.SUCCESS_ACCEPTED);
Resource directory=BackupUtils.tmpDir();
if (LOGGER.isLoggable(Level.INFO)) {
MediaType mediaType=getRequest().getEntity().getMediaType();
LOGGER.info("PUT file: mimetype=" + mediaType + ", path="+ directory.path());
}
Resource archiveFile=RESTUtils.handleBinUpload(getAttribute("restoreId") + ".zip",directory,false,getRequest());
if (archiveFile != null && Resources.exists(archiveFile) && FileUtils.sizeOf(archiveFile.file()) > 0) {
RestoreExecutionAdapter execution=getBackupFacade().runRestoreAsync(archiveFile,wsFilter,hints);
LOGGER.log(Level.INFO,"Restore file started: " + execution.getArchiveFile());
getResponse().redirectSeeOther(getPageInfo().rootURI("/br/restore/" + execution.getId()));
getResponse().setEntity(getFormatGet().toRepresentation(execution));
getResponse().setStatus(Status.SUCCESS_CREATED);
}
 else {
throw new IOException("Unable to perform restore: could not read backup ZIP archive!");
}
}
 catch (IOException e) {
throw new RestletException(e.getMessage(),Status.SERVER_ERROR_INTERNAL,e);
}
}
