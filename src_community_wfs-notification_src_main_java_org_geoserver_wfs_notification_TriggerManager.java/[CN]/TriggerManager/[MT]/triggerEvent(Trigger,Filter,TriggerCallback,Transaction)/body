{
  for (int i=0; i < t.getLink().size(); ++i) {
    if (current == null)     break;
    Link l=t.getLink().get(i);
    Link next=i + 1 == t.getLink().size() ? null : t.getLink().get(i + 1);
    FeatureTypeInfo info=catalog.getFeatureTypeByName(l.getDest().getNamespaceURI(),l.getDest().getLocalPart());
    if (info == null) {
      logger.debug("No such feature type: " + l.getDest());
      return;
    }
    FilterBuilder[] subFilters=new FilterBuilder[l.getTrigger().size()];
    FilterBuilder nextFilter=next == null ? null : new FilterBuilder();
    for (int j=0; j < l.getTrigger().size(); ++j) {
      subFilters[j]=new FilterBuilder();
    }
    if (logger.isTraceEnabled()) {
      logger.trace("Triggering with filter " + current + " to type "+ info.getQualifiedName());
    }
    FeatureSource<? extends FeatureType,? extends Feature> featureSource=info.getFeatureSource(null,null);
    if (featureSource instanceof ContentFeatureSource) {
      ((JDBCFeatureSource)featureSource).setTransaction(transaction);
    }
 else     if (featureSource instanceof FeatureStore) {
      ((FeatureStore)featureSource).setTransaction(transaction);
    }
    FeatureCollection<? extends FeatureType,? extends Feature> features=featureSource.getFeatures(current);
    FeatureIterator<? extends Feature> it=features.features();
    try {
      while (it.hasNext()) {
        Feature f=it.next();
        for (int j=0; j < l.getTrigger().size(); ++j) {
          subFilters[j].addFeature(f,l.getTrigger().get(j).getLink().get(0));
        }
        if (next != null) {
          nextFilter.addFeature(f,next);
        }
 else         if (!t.isSilent()) {
          cb.triggerEvent(f);
        }
      }
    }
  finally {
      it.close();
    }
    for (int j=0; j < l.getTrigger().size(); ++j) {
      triggerEvent(l.getTrigger().get(j),subFilters[j].build(),cb,transaction);
    }
    if (next != null) {
      current=nextFilter.build();
    }
  }
}
