{
  WFSInfo wfs=getWFS();
  boolean oldFeatureBounding=wfs.isFeatureBounding();
  wfs.setFeatureBounding(true);
  getGeoServer().save(wfs);
  try {
    String q="wfs?request=getfeature&service=wfs&version=1.1&typeName=" + SystemTestData.POLYGONS.getLocalPart();
    Document dom=getAsDOM(q);
    Element envelope=getFirstElementByTagName(dom,"gml:Envelope");
    String lc=getFirstElementByTagName(envelope,"gml:lowerCorner").getFirstChild().getNodeValue();
    String uc=getFirstElementByTagName(envelope,"gml:upperCorner").getFirstChild().getNodeValue();
    double[] c=new double[]{Double.parseDouble(lc.split(" ")[0]),Double.parseDouble(lc.split(" ")[1]),Double.parseDouble(uc.split(" ")[0]),Double.parseDouble(uc.split(" ")[1])};
    String targetCrsCode="AUTO:42004,9001,0,33";
    CoordinateReferenceSystem epsgAUTO=CRS.decode(targetCrsCode);
    MathTransform txAuto=CRS.findMathTransform(epsg32615,epsgAUTO);
    System.out.println(Arrays.toString(c));
    double[] cr=new double[4];
    txAuto.transform(c,0,cr,0,2);
    q+="&bbox=" + cr[0] + ","+ cr[1]+ ","+ cr[2]+ ","+ cr[3]+ ","+ targetCrsCode;
    dom=getAsDOM(q);
    assertEquals(1,dom.getElementsByTagName(SystemTestData.POLYGONS.getPrefix() + ":" + SystemTestData.POLYGONS.getLocalPart()).getLength());
  }
  finally {
    wfs.setFeatureBounding(oldFeatureBounding);
    getGeoServer().save(wfs);
  }
}
