{
  File dataDir=this.getTestData().getDataDirectoryRoot();
  Document doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.1.0&typename=gsml:MappedFeature");
  LOGGER.info("WFS DescribeFeatureType, typename=gsml:MappedFeature response:\n" + prettyString(doc));
  assertEquals("xsd:schema",doc.getDocumentElement().getNodeName());
  assertXpathEvaluatesTo(AbstractAppSchemaMockData.GSML_URI,"//@targetNamespace",doc);
  assertXpathCount(1,"//xsd:include",doc);
  assertXpathCount(0,"//xsd:import",doc);
  assertXpathEvaluatesTo(AbstractAppSchemaMockData.GSML_SCHEMA_LOCATION_URL,"//xsd:include/@schemaLocation",doc);
  assertXpathCount(0,"//xsd:complexType",doc);
  assertXpathCount(0,"//xsd:element",doc);
  doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.1.0&typename=gsml:GeologicUnit");
  LOGGER.info("WFS DescribeFeatureType, typename=gsml:GeologicUnit response:\n" + prettyString(doc));
  assertEquals("xsd:schema",doc.getDocumentElement().getNodeName());
  assertXpathEvaluatesTo(AbstractAppSchemaMockData.GSML_URI,"//@targetNamespace",doc);
  assertXpathCount(1,"//xsd:include",doc);
  assertXpathCount(0,"//xsd:import",doc);
  assertXpathEvaluatesTo(AbstractAppSchemaMockData.GSML_SCHEMA_LOCATION_URL,"//xsd:include/@schemaLocation",doc);
  assertXpathCount(0,"//xsd:complexType",doc);
  assertXpathCount(0,"//xsd:element",doc);
  doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.1.0&typeName=ex:FirstParentFeature,ex:SecondParentFeature");
  LOGGER.info("WFS DescribeFeatureType, typename=ex:FirstParentFeature," + "ex:SecondParentFeature response:\n" + prettyString(doc));
  assertXpathEvaluatesTo(FeatureChainingMockData.EX_URI,"//@targetNamespace",doc);
  assertXpathCount(1,"//xsd:include",doc);
  assertXpathCount(0,"//xsd:import",doc);
  File exSchemaOne=findFile("featureTypes/ex_FirstParentFeature/simpleContent.xsd",dataDir);
  assertNotNull(exSchemaOne);
  assertTrue(exSchemaOne.exists());
  String exSchemaOneLocation=exSchemaOne.toURI().toString();
  File exSchemaTwo=findFile("featureTypes/ex_SecondParentFeature/simpleContent.xsd",dataDir);
  assertNotNull(exSchemaTwo);
  assertTrue(exSchemaTwo.exists());
  String exSchemaTwoLocation=exSchemaTwo.toURI().toString();
  String schemaLocation=evaluate("//xsd:include/@schemaLocation",doc);
  if (!schemaLocation.equals(exSchemaOneLocation)) {
    assertEquals(exSchemaTwoLocation,schemaLocation);
  }
  assertXpathCount(0,"//xsd:complexType",doc);
  assertXpathCount(0,"//xsd:element",doc);
  doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.1.0&typename=om:Observation");
  LOGGER.info("WFS DescribeFeatureType, typename=om:Observation response:\n" + prettyString(doc));
  assertEquals("xsd:schema",doc.getDocumentElement().getNodeName());
  assertXpathEvaluatesTo(FeatureChainingMockData.OM_URI,"//@targetNamespace",doc);
  assertXpathCount(1,"//xsd:include",doc);
  assertXpathCount(1,"//xsd:import",doc);
  assertXpathEvaluatesTo(AbstractAppSchemaMockData.GSML_URI,"//xsd:import/@namespace",doc);
  assertXpathEvaluatesTo(AbstractAppSchemaMockData.GSML_SCHEMA_LOCATION_URL,"//xsd:import/@schemaLocation",doc);
  assertXpathEvaluatesTo(FeatureChainingMockData.OM_SCHEMA_LOCATION_URL,"//xsd:include/@schemaLocation",doc);
  assertXpathCount(0,"//xsd:complexType",doc);
  assertXpathCount(0,"//xsd:element",doc);
  doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.1.0&typeName=gsml:MappedFeature,ex:FirstParentFeature");
  LOGGER.info("WFS DescribeFeatureType, typename=gsml:MappedFeature,ex:FirstParentFeature response:\n" + prettyString(doc));
  checkDescribeFeatureTypeReferences(doc,exSchemaOneLocation,null,null);
  doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.1.0&typeName=gsml:MappedFeature,gsml:GeologicUnit,ex:FirstParentFeature,ex:SecondParentFeature");
  LOGGER.info("WFS DescribeFeatureType, typename=gsml:MappedFeature,gsml:GeologicUnit,ex:FirstParentFeature,ex:SecondParentFeature response:\n" + prettyString(doc));
  checkDescribeFeatureTypeReferences(doc,exSchemaOneLocation,exSchemaTwoLocation,null);
  doc=getAsDOM("wfs?request=DescribeFeatureType&version=1.1.0");
  LOGGER.info("WFS DescribeFeatureType response:\n" + prettyString(doc));
  checkDescribeFeatureTypeReferences(doc,exSchemaOneLocation,exSchemaTwoLocation,FeatureChainingMockData.OM_SCHEMA_LOCATION_URL);
}
