{
  Map<String,String> map=createFromArray(new String[][]{{"node1",null},{"node11","node1"},{"node12","node1"},{"node111","node11"},{"node112","node11"}});
  RoleHierarchyHelper helper=new RoleHierarchyHelper(map);
  assertFalse(helper.containsRole("abc"));
  assertTrue(helper.containsRole("node11"));
  assertFalse(helper.isRoot("node11"));
  assertTrue(helper.isRoot("node1"));
  assertEquals(1,helper.getRootRoles().size());
  assertTrue(helper.getRootRoles().contains("node1"));
  assertEquals(3,helper.getLeafRoles().size());
  assertTrue(helper.getLeafRoles().contains("node111"));
  assertTrue(helper.getLeafRoles().contains("node112"));
  assertTrue(helper.getLeafRoles().contains("node12"));
  assertEquals("node1",helper.getParent("node11"));
  assertNull(helper.getParent("node1"));
  assertEquals(0,helper.getAncestors("node1").size());
  assertEquals(1,helper.getAncestors("node12").size());
  assertTrue(helper.getAncestors("node12").contains("node1"));
  assertEquals(2,helper.getAncestors("node112").size());
  assertTrue(helper.getAncestors("node112").contains("node11"));
  assertTrue(helper.getAncestors("node112").contains("node1"));
  assertEquals(2,helper.getChildren("node1").size());
  assertTrue(helper.getChildren("node1").contains("node11"));
  assertTrue(helper.getChildren("node1").contains("node12"));
  assertEquals(0,helper.getChildren("node12").size());
  assertEquals(2,helper.getChildren("node11").size());
  assertTrue(helper.getChildren("node11").contains("node111"));
  assertTrue(helper.getChildren("node11").contains("node112"));
  assertEquals(4,helper.getDescendants("node1").size());
  assertTrue(helper.getDescendants("node1").contains("node11"));
  assertTrue(helper.getDescendants("node1").contains("node12"));
  assertTrue(helper.getDescendants("node1").contains("node111"));
  assertTrue(helper.getDescendants("node1").contains("node112"));
  assertEquals(0,helper.getDescendants("node12").size());
  assertEquals(2,helper.getDescendants("node11").size());
  assertTrue(helper.getDescendants("node11").contains("node111"));
  assertTrue(helper.getDescendants("node11").contains("node112"));
  assertTrue(helper.isValidParent("node11",null));
  assertTrue(helper.isValidParent("node11","node12"));
  assertFalse(helper.isValidParent("node11","node11"));
  assertFalse(helper.isValidParent("node1","node111"));
  boolean fail=true;
  try {
    helper.isRoot("abc");
  }
 catch (  RuntimeException e) {
    fail=false;
  }
  if (fail)   Assert.fail("No Exception");
}
