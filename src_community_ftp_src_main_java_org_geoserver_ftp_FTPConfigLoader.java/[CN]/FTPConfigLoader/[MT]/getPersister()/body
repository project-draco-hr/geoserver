{
  Map<String,String> comments=new HashMap<String,String>();
  comments.put("enabled","true to enable the FTP service, false to disable it");
  comments.put("ftpPort","Port where the FTP Service listens for connections");
  comments.put("idleTimeout","number of seconds during which no network activity " + "is allowed before a session is closed due to inactivity");
  comments.put("serverAddress","IP Address used for binding the local socket. If unset, the server binds " + "to all available network interfaces");
  comments.put("passivePorts","Ports to be used for PASV data connections. Ports can " + "be defined as single ports, closed or open ranges:\n" + " Multiple definitions can be separated by commas, for example:\n"+ "  2300 : only use port 2300 as the passive port\n"+ "  2300-2399 : use all ports in the range\n"+ "  2300- : use all ports larger than 2300\n"+ "  2300, 2305, 2400- : use 2300 or 2305 or any port larger than 2400\n");
  comments.put("passiveAddress","Address on which the server will listen to passive data connections, \n" + "  if not set defaults to the same address as the control " + "socket for the session.");
  comments.put("passiveExternalAddress","the address the server will claim to be listening on in the PASV reply.\n" + " Useful when the server is behind a NAT firewall and the client sees a different address than the server is using.");
  HierarchicalStreamDriver streamDriver=new CommentingStaxWriter(comments);
  XStream xStream=new XStream(streamDriver);
  xStream.alias("ftp",FTPConfig.class);
  return xStream;
}
