{
  String prefix=UUID.randomUUID().toString();
  adminService.insert(new Rule(5,prefix + "-user5",prefix + "-role1",null,null,null,null,null,null,GrantType.ALLOW));
  adminService.insert(new Rule(2,prefix + "-user2",prefix + "-role1",null,null,null,null,null,null,GrantType.ALLOW));
  adminService.insert(new Rule(1,prefix + "-user1",prefix + "-role1",null,null,null,null,null,null,GrantType.ALLOW));
  adminService.insert(new Rule(4,prefix + "-user4",prefix + "-role2",null,null,null,null,null,null,GrantType.ALLOW));
  adminService.insert(new Rule(3,prefix + "-user3",prefix + "-role2",null,null,null,null,null,null,GrantType.ALLOW));
  adminService.insert(new Rule(6,prefix + "-user6",prefix + "-role6",null,null,null,null,null,null,GrantType.ALLOW));
  JaxbRuleList originalRules=controller.get(0,6,false,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
  validateRules(originalRules,prefix,"user1","user2","user3","user4","user5","user6");
  validateRules(0,prefix,"user1","user2");
  validateRules(0,1,2);
  validateRules(1,prefix,"user3","user4");
  validateRules(1,3,4);
  validateRules(2,prefix,"user5","user6");
  validateRules(2,5,6);
  ResponseEntity<JaxbRuleList> result=controller.move(7,originalRules.getRules().get(0).getId() + "," + originalRules.getRules().get(1).getId());
  validateResult(result,HttpStatus.OK,2);
  validateRules(result.getBody(),prefix,"user1","user2");
  validateRules(result.getBody(),7L,8L);
  validateRules(0,prefix,"user3","user4");
  validateRules(0,3,4);
  validateRules(1,prefix,"user5","user6");
  validateRules(1,5,6);
  validateRules(2,prefix,"user1","user2");
  validateRules(2,7,8);
  result=controller.move(7,originalRules.getRules().get(2).getId() + "," + originalRules.getRules().get(3).getId());
  validateResult(result,HttpStatus.OK,2);
  validateRules(result.getBody(),prefix,"user3","user4");
  validateRules(result.getBody(),7L,8L);
  validateRules(0,prefix,"user5","user6");
  validateRules(0,5,6);
  validateRules(1,prefix,"user3","user4");
  validateRules(1,7,8);
  validateRules(2,prefix,"user1","user2");
  validateRules(2,9,10);
  result=controller.move(5,String.valueOf(originalRules.getRules().get(0).getId()));
  validateResult(result,HttpStatus.OK,1);
  validateRules(result.getBody(),prefix,"user1");
  validateRules(result.getBody(),5L);
  validateRules(0,prefix,"user1","user5");
  validateRules(0,5,6);
  validateRules(1,prefix,"user6","user3");
  validateRules(1,7,8);
  validateRules(2,prefix,"user4","user2");
  validateRules(2,9,11);
  result=controller.move(6,originalRules.getRules().get(1).getId() + "," + originalRules.getRules().get(2).getId());
  validateResult(result,HttpStatus.OK,2);
  validateRules(result.getBody(),prefix,"user3","user2");
  validateRules(result.getBody(),6L,7L);
  validateRules(0,prefix,"user1","user3");
  validateRules(0,5,6);
  validateRules(1,prefix,"user2","user5");
  validateRules(1,7,8);
  validateRules(2,prefix,"user6","user4");
  validateRules(2,9,11);
}
