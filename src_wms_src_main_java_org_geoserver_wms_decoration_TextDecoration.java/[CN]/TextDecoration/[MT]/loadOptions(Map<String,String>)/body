{
  this.messageTemplate=options.get("message");
  if (messageTemplate == null) {
    messageTemplate="You forgot to set the 'message' option";
  }
  this.fontFamily=options.get("font-family");
  if (options.get("font-italic") != null) {
    this.fontItalic=Boolean.parseBoolean(options.get("font-italic"));
  }
  if (options.get("font-bold") != null) {
    this.fontBold=Boolean.parseBoolean(options.get("font-bold"));
  }
  if (options.get("font-size") != null) {
    try {
      this.fontSize=Float.parseFloat(options.get("font-size"));
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,"'font-size' must be a float.",e);
    }
  }
  if (options.get("font-color") != null) {
    try {
      this.fontColor=MapDecorationLayout.parseColor(options.get("font-color"));
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,"'font-color' must be a color in #RRGGBB[AA] format.",e);
    }
  }
  if (fontColor == null) {
    fontColor=Color.BLACK;
  }
  if (options.get("halo-radius") != null) {
    try {
      this.haloRadius=Float.parseFloat(options.get("halo-radius"));
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,"'halo-radius' must be a float.",e);
    }
  }
  if (options.get("halo-color") != null) {
    try {
      this.haloColor=MapDecorationLayout.parseColor(options.get("halo-color"));
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,"'halo-color' must be a color in #RRGGBB[AA] format.",e);
    }
  }
  if (haloRadius > 0 && haloColor == null) {
    haloColor=Color.WHITE;
  }
}
