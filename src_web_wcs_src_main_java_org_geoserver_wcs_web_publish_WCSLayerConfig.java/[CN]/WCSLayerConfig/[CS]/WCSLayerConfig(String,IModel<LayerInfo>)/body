{
  super(id,model);
  final CoverageInfo coverage=(CoverageInfo)getPublishedInfo().getResource();
  add(new ListMultipleChoice<String>("requestSRS",new PropertyModel<List<String>>(this,"selectedRequestSRSs"),coverage.getRequestSRS()));
  add(new TextField<String>("newRequestSRS",new PropertyModel<String>(this,"newRequestSRS")));
  add(new Button("deleteSelectedRequestSRSs"){
    private static final long serialVersionUID=8363252127939759315L;
    public void onSubmit(){
      coverage.getRequestSRS().removeAll(selectedRequestSRSs);
      selectedRequestSRSs.clear();
    }
  }
);
  add(new Button("addNewRequestSRS"){
    private static final long serialVersionUID=-3493317500980471055L;
    public void onSubmit(){
      coverage.getRequestSRS().add(newRequestSRS);
      newRequestSRS="";
    }
  }
);
  add(new ListMultipleChoice<String>("responseSRS",new PropertyModel<List<String>>(this,"selectedResponseSRSs"),coverage.getResponseSRS()));
  add(new TextField<String>("newResponseSRS",new PropertyModel<String>(this,"newResponseSRS")));
  add(new Button("deleteSelectedResponseSRSs"){
    private static final long serialVersionUID=-8727831157546262491L;
    public void onSubmit(){
      coverage.getResponseSRS().removeAll(selectedResponseSRSs);
      selectedResponseSRSs.clear();
    }
  }
);
  add(new Button("addNewResponseSRS"){
    private static final long serialVersionUID=-2888152896129259019L;
    public void onSubmit(){
      coverage.getResponseSRS().add(newResponseSRS);
      newResponseSRS="";
    }
  }
);
  add(new DropDownChoice<String>("defaultInterpolationMethod",new PropertyModel<String>(coverage,"defaultInterpolationMethod"),new WCSInterpolationModel()));
  Palette<String> interpolationMethods=new Palette<String>("interpolationMethods",LiveCollectionModel.list(new PropertyModel<String>(coverage,"interpolationMethods")),new WCSInterpolationModel(),new SimpleChoiceRenderer(),7,false){
    private static final long serialVersionUID=6815545819673802290L;
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newSelectedHeader(    final String componentId){
      return new Label(componentId,new ResourceModel("InterpolationMethodsPalette.selectedHeader"));
    }
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newAvailableHeader(    final String componentId){
      return new Label(componentId,new ResourceModel("InterpolationMethodsPalette.availableHeader"));
    }
  }
;
  add(interpolationMethods);
  TextField<String> nativeFormat=new TextField<String>("nativeFormat",new PropertyModel<String>(coverage,"nativeFormat"));
  nativeFormat.setEnabled(false);
  add(nativeFormat);
  Palette<String> formatPalette=new Palette<String>("formatPalette",LiveCollectionModel.list(new PropertyModel<String>(coverage,"supportedFormats")),new WCSFormatsModel(),new SimpleChoiceRenderer(),10,false){
    private static final long serialVersionUID=-2463012775305597908L;
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newSelectedHeader(    final String componentId){
      return new Label(componentId,new ResourceModel("FormatsPalette.selectedHeader"));
    }
    /** 
 * Override otherwise the header is not i18n'ized
 */
    @Override public Component newAvailableHeader(    final String componentId){
      return new Label(componentId,new ResourceModel("FormatsPalette.availableHeader"));
    }
  }
;
  add(formatPalette);
}
