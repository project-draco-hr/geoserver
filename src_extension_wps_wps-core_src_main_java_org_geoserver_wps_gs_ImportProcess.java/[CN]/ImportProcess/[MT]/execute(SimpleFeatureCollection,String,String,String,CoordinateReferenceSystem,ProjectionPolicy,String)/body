{
  WorkspaceInfo ws;
  if (workspace != null) {
    ws=catalog.getWorkspaceByName(workspace);
    if (ws == null) {
      throw new ProcessException("Could not find workspace " + workspace);
    }
  }
 else {
    ws=catalog.getDefaultWorkspace();
    if (ws == null) {
      throw new ProcessException("The catalog is empty, could not find a default workspace");
    }
  }
  DataStoreInfo storeInfo;
  if (store != null) {
    storeInfo=catalog.getDataStoreByName(ws.getName(),store);
    if (storeInfo == null) {
      throw new ProcessException("Could not find store " + store + " in workspace "+ workspace);
    }
  }
 else {
    storeInfo=catalog.getDefaultDataStore(ws);
    if (storeInfo == null) {
      throw new ProcessException("Could not find a default store in workspace " + ws.getName());
    }
  }
  String tentativeTargetName=null;
  if (name != null) {
    tentativeTargetName=ws.getName() + ":" + name;
  }
 else {
    tentativeTargetName=ws.getName() + ":" + features.getSchema().getTypeName();
  }
  if (catalog.getLayer(tentativeTargetName) != null) {
    throw new ProcessException("Target layer " + tentativeTargetName + " already exists");
  }
  StyleInfo targetStyle=null;
  if (styleName != null) {
    targetStyle=catalog.getStyleByName(styleName);
    if (targetStyle == null) {
      throw new ProcessException("Could not find style " + styleName);
    }
  }
  String targetSRSCode=null;
  if (srs != null) {
    try {
      Integer code=CRS.lookupEpsgCode(srs,true);
      if (code == null) {
        throw new WPSException("Could not find a EPSG code for " + srs);
      }
      targetSRSCode="EPSG:" + code;
    }
 catch (    Exception e) {
      throw new ProcessException("Could not lookup the EPSG code for the provided srs",e);
    }
  }
 else {
    GeometryDescriptor gd=features.getSchema().getGeometryDescriptor();
    if (gd == null) {
      targetSRSCode="EPSG:4326";
      srsHandling=ProjectionPolicy.FORCE_DECLARED;
    }
 else {
      CoordinateReferenceSystem nativeCrs=gd.getCoordinateReferenceSystem();
      if (nativeCrs == null) {
        throw new ProcessException("The original data has no native CRS, " + "you need to specify the srs parameter");
      }
 else {
        try {
          Integer code=CRS.lookupEpsgCode(nativeCrs,true);
          if (code == null) {
            throw new ProcessException("Could not find an EPSG code for data " + "native spatial reference system: " + nativeCrs);
          }
 else {
            targetSRSCode="EPSG:" + code;
          }
        }
 catch (        Exception e) {
          throw new ProcessException("Failed to loookup an official EPSG code for " + "the source data native " + "spatial reference system",e);
        }
      }
    }
  }
  SimpleFeatureType targetType;
  try {
    targetType=importDataIntoStore(features,name,storeInfo);
  }
 catch (  IOException e) {
    throw new ProcessException("Failed to import data into the target store",e);
  }
  try {
    CatalogBuilder cb=new CatalogBuilder(catalog);
    cb.setStore(storeInfo);
    FeatureTypeInfo typeInfo=cb.buildFeatureType(targetType.getName());
    if (targetSRSCode != null) {
      typeInfo.setSRS(targetSRSCode);
    }
    if (srsHandling != null) {
      typeInfo.setProjectionPolicy(srsHandling);
    }
    cb.setupBounds(typeInfo);
    LayerInfo layerInfo=cb.buildLayer(typeInfo);
    if (targetStyle != null) {
      layerInfo.setDefaultStyle(targetStyle);
    }
    catalog.add(typeInfo);
    catalog.add(layerInfo);
    return typeInfo.getPrefixedName();
  }
 catch (  Exception e) {
    throw new ProcessException("Failed to complete the import inside the GeoServer catalog",e);
  }
}
