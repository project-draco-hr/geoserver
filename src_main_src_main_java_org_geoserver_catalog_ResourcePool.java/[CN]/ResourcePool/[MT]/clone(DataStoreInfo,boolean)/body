{
  DataStoreInfo target;
  try {
    target=(DataStoreInfo)SerializationUtils.clone(source);
    if (target instanceof StoreInfoImpl && target.getCatalog() == null) {
      ((StoreInfoImpl)target).setCatalog(catalog);
    }
  }
 catch (  Exception e) {
    target=catalog.getFactory().createDataStore();
    target.setEnabled(source.isEnabled());
    target.setName(source.getName());
    target.setDescription(source.getDescription());
    target.setWorkspace(source.getWorkspace());
    target.setType(source.getType());
  }
  final GeoServerEnvironment gsEnvironment=GeoServerExtensions.bean(GeoServerEnvironment.class);
  if (source.getConnectionParameters() != null && !source.getConnectionParameters().isEmpty()) {
    target.getConnectionParameters().clear();
    if (!allowEnvParametrization) {
      target.getConnectionParameters().putAll(source.getConnectionParameters());
    }
 else {
      if (source != null && source.getConnectionParameters() != null) {
        for (        Entry<String,Serializable> param : source.getConnectionParameters().entrySet()) {
          String key=param.getKey();
          Object value=param.getValue();
          if (gsEnvironment != null && GeoServerEnvironment.ALLOW_ENV_PARAMETRIZATION) {
            value=gsEnvironment.resolveValue(value);
          }
          target.getConnectionParameters().put(key,(Serializable)value);
        }
      }
    }
  }
  return target;
}
