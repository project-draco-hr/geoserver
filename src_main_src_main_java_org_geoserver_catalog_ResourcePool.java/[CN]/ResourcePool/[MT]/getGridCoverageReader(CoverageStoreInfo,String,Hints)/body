{
  final AbstractGridFormat gridFormat=info.getFormat();
  if (gridFormat == null) {
    throw new IOException("Could not find the raster plugin for format " + info.getType());
  }
  GridCoverageReader reader=null;
  Object key;
  if (hints != null && info.getId() != null) {
    final String formatName=gridFormat.getName();
    if (formatName.equalsIgnoreCase(IMAGE_MOSAIC) || formatName.equalsIgnoreCase(IMAGE_PYRAMID)) {
      if (coverageExecutor != null) {
        if (hints != null) {
          hints=new Hints(hints);
          hints.add(new RenderingHints(Hints.EXECUTOR_SERVICE,coverageExecutor));
        }
 else {
          hints=new Hints(new RenderingHints(Hints.EXECUTOR_SERVICE,coverageExecutor));
        }
      }
    }
    key=new CoverageHintReaderKey(info.getId(),hints);
    reader=(GridCoverage2DReader)hintCoverageReaderCache.get(key);
  }
 else {
    key=info.getId();
    if (key != null) {
      reader=(GridCoverageReader)coverageReaderCache.get(key);
    }
  }
  if (reader != null) {
    return reader;
  }
synchronized (hints != null ? hintCoverageReaderCache : coverageReaderCache) {
    if (key != null) {
      if (hints != null) {
        reader=(GridCoverageReader)hintCoverageReaderCache.get(key);
      }
 else {
        reader=(GridCoverageReader)coverageReaderCache.get(key);
      }
    }
    if (reader == null) {
      final File obj=GeoserverDataDirectory.findDataFile(info.getURL());
      reader=gridFormat.getReader(obj,new Hints(hints));
      if (key != null) {
        if (hints != null) {
          hintCoverageReaderCache.put((CoverageHintReaderKey)key,reader);
        }
 else {
          coverageReaderCache.put((String)key,reader);
        }
      }
    }
  }
  if (coverageName != null) {
    return new SingleGridCoverage2DReader((GridCoverage2DReader)reader,coverageName);
  }
 else {
    return (GridCoverage2DReader)reader;
  }
}
