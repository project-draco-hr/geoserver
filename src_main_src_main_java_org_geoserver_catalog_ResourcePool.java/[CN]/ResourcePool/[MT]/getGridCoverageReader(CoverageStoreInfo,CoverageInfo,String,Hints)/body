{
  CoverageStoreInfo expandedStore=clone(info,true);
  final AbstractGridFormat gridFormat=info.getFormat();
  if (gridFormat == null) {
    throw new IOException("Could not find the raster plugin for format " + info.getType());
  }
  GridCoverageReader reader=null;
  Object key;
  if (hints != null && info.getId() != null) {
    final String formatName=gridFormat.getName();
    if (formatName.equalsIgnoreCase(IMAGE_MOSAIC) || formatName.equalsIgnoreCase(IMAGE_PYRAMID)) {
      if (coverageExecutor != null) {
        if (hints != null) {
          hints=new Hints(hints);
          hints.add(new RenderingHints(Hints.EXECUTOR_SERVICE,coverageExecutor));
        }
 else {
          hints=new Hints(new RenderingHints(Hints.EXECUTOR_SERVICE,coverageExecutor));
        }
      }
    }
    key=new CoverageHintReaderKey(info.getId(),hints);
    reader=hintCoverageReaderCache.get(key);
  }
 else {
    key=info.getId();
    if (key != null) {
      reader=coverageReaderCache.get(key);
    }
  }
  if (reader == null) {
synchronized (hints != null ? hintCoverageReaderCache : coverageReaderCache) {
      if (key != null) {
        if (hints != null) {
          reader=hintCoverageReaderCache.get(key);
        }
 else {
          reader=coverageReaderCache.get(key);
        }
      }
      if (reader == null) {
        final String url=expandedStore.getURL();
        GeoServerResourceLoader loader=catalog.getResourceLoader();
        final File obj=loader.url(url);
        final Object input=obj != null ? obj : url;
        reader=gridFormat.getReader(input,new Hints(hints));
        if (reader == null) {
          throw new IOException("Failed to create reader from " + url + " and hints "+ hints);
        }
        if (key != null) {
          if (hints != null) {
            hintCoverageReaderCache.put((CoverageHintReaderKey)key,reader);
          }
 else {
            coverageReaderCache.put((String)key,reader);
          }
        }
      }
    }
  }
  if (coverageInfo == null && coverageName != null) {
    coverageInfo=getCoverageInfo(coverageName,info);
  }
  if (coverageInfo != null) {
    MetadataMap metadata=coverageInfo.getMetadata();
    if (metadata != null && metadata.containsKey(CoverageView.COVERAGE_VIEW)) {
      CoverageView coverageView=(CoverageView)metadata.get(CoverageView.COVERAGE_VIEW);
      reader=CoverageViewReader.wrap((GridCoverage2DReader)reader,coverageView,coverageInfo,hints);
    }
  }
  if (coverageName != null) {
    return CoverageDimensionCustomizerReader.wrap((GridCoverage2DReader)reader,coverageName,coverageInfo);
  }
 else {
    final int numCoverages=((GridCoverage2DReader)reader).getGridCoverageCount();
    if (numCoverages == 1) {
      return CoverageDimensionCustomizerReader.wrap((GridCoverage2DReader)reader,null,coverageInfo);
    }
    return reader;
  }
}
