{
  DataAccess<? extends FeatureType,? extends Feature> dataStore=null;
  try {
    String id=info.getId();
    dataStore=dataStoreCache.get(id);
    if (dataStore == null) {
synchronized (dataStoreCache) {
        dataStore=dataStoreCache.get(id);
        if (dataStore == null) {
          Map<String,Serializable> connectionParameters=info.getConnectionParameters();
          connectionParameters=ResourcePool.getParams(connectionParameters,catalog.getResourceLoader());
          DataAccessFactory factory=null;
          try {
            factory=getDataStoreFactory(info);
          }
 catch (          IOException e) {
            throw new IOException("Failed to find the datastore factory for " + info.getName() + ", did you forget to install the store extension jar?");
          }
          Param[] params=factory.getParametersInfo();
          if (!connectionParameters.containsKey("namespace") && params != null) {
            boolean supportsNamespace=true;
            supportsNamespace=false;
            for (            Param p : params) {
              if ("namespace".equalsIgnoreCase(p.key)) {
                supportsNamespace=true;
                break;
              }
            }
            if (supportsNamespace) {
              WorkspaceInfo ws=info.getWorkspace();
              NamespaceInfo ns=info.getCatalog().getNamespaceByPrefix(ws.getName());
              if (ns == null) {
                ns=info.getCatalog().getDefaultNamespace();
              }
              if (ns != null) {
                connectionParameters.put("namespace",ns.getURI());
              }
            }
          }
          if (params != null) {
            for (            Param p : params) {
              if (Repository.class.equals(p.getType())) {
                connectionParameters.put(p.getName(),repository);
              }
            }
          }
          dataStore=DataStoreUtils.getDataAccess(connectionParameters);
          if (dataStore == null) {
            dataStore=DataAccessFinder.getDataStore(connectionParameters);
          }
          if (dataStore == null) {
            throw new NullPointerException("Could not acquire data access '" + info.getName() + "'");
          }
          if (id != null) {
            dataStoreCache.put(id,dataStore);
          }
        }
      }
    }
    return dataStore;
  }
 catch (  Exception e) {
    if (dataStore != null) {
      try {
        dataStore.dispose();
      }
 catch (      Exception ex) {
      }
    }
    if (e instanceof IOException) {
      throw (IOException)e;
    }
 else {
      throw (IOException)new IOException().initCause(e);
    }
  }
}
