{
  Configuration cfg=super.createConfiguration(data,clazz);
  cfg.setClassForTemplateLoading(getClass(),"templates");
  cfg.setObjectWrapper(new ObjectToMapWrapper<WFSInfo>(WFSInfo.class){
    @Override protected void wrapInternal(    Map properties,    SimpleHash model,    WFSInfo wfsInfo){
      WorkspaceInfo workspaceInfo=wfsInfo.getWorkspace();
      properties.put("workspaceName",workspaceInfo != null ? workspaceInfo.getName() : "NO_WORKSPACE");
      properties.put("enabled",wfsInfo.isEnabled() ? "true" : "false");
      properties.put("name",wfsInfo.getName());
      properties.put("title",wfsInfo.getTitle());
      properties.put("maintainer",wfsInfo.getMaintainer());
      properties.put("abstract",wfsInfo.getAbstract());
      properties.put("accessConstraints",wfsInfo.getAccessConstraints());
      properties.put("fees",wfsInfo.getFees());
      properties.put("versions",wfsInfo.getVersions());
      properties.put("keywords",wfsInfo.getKeywords());
      properties.put("metadataLink",wfsInfo.getMetadataLink());
      properties.put("citeCompliant",wfsInfo.isCiteCompliant() ? "true" : "false");
      properties.put("onlineResource",wfsInfo.getOnlineResource());
      properties.put("schemaBaseURL",wfsInfo.getSchemaBaseURL());
      properties.put("verbose",wfsInfo.isVerbose() ? "true" : "false");
      properties.put("maxFeatures",String.valueOf(wfsInfo.getMaxFeatures()));
      properties.put("isFeatureBounding",wfsInfo.isFeatureBounding() ? "true" : "false");
      properties.put("hitsIgnoreMaxFeatures",wfsInfo.isHitsIgnoreMaxFeatures() ? "true" : "false");
      properties.put("maxNumberOfFeaturesForPreview",wfsInfo.getMaxNumberOfFeaturesForPreview());
      properties.put("serviceLevel",wfsInfo.getServiceLevel());
      properties.put("isCanonicalSchemaLocation",wfsInfo.isCanonicalSchemaLocation() ? "true" : "false");
      properties.put("encodeFeatureMember",wfsInfo.isEncodeFeatureMember() ? "true" : "false");
    }
  }
);
  return cfg;
}
