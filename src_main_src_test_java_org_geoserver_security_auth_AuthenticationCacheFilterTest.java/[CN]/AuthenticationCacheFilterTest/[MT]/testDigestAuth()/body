{
  DigestAuthenticationFilterConfig config=new DigestAuthenticationFilterConfig();
  config.setClassName(GeoServerDigestAuthenticationFilter.class.getName());
  config.setName(testFilterName2);
  config.setUserGroupServiceName("ug1");
  getSecurityManager().saveFilter(config);
  prepareFilterChain(pattern,GeoServerSecurityFilterChain.SECURITY_CONTEXT_NO_ASC_FILTER,testFilterName2,GeoServerSecurityFilterChain.DYNAMIC_EXCEPTION_TRANSLATION_FILTER,GeoServerSecurityFilterChain.FILTER_SECURITY_INTERCEPTOR);
  SecurityContextHolder.getContext().setAuthentication(null);
  MockHttpServletRequest request=createRequest("/foo/bar");
  MockHttpServletResponse response=new MockHttpServletResponse();
  MockFilterChain chain=new MockFilterChain();
  getProxy().doFilter(request,response,chain);
  assertEquals(HttpServletResponse.SC_UNAUTHORIZED,response.getErrorCode());
  String tmp=response.getHeader("WWW-Authenticate");
  assertNotNull(tmp);
  assert(tmp.indexOf(GeoServerSecurityManager.REALM) != -1);
  assert(tmp.indexOf("Digest") != -1);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  request=createRequest("/foo/bar");
  response=new MockHttpServletResponse();
  chain=new MockFilterChain();
  String headerValue=clientDigestString(tmp,testUserName,testPassword,request.getMethod());
  request.addHeader("Authorization",headerValue);
  getProxy().doFilter(request,response,chain);
  assertEquals(HttpServletResponse.SC_OK,response.getErrorCode());
  Authentication auth=getAuth(testFilterName2,testUserName,300,300);
  assertNotNull(auth);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  checkForAuthenticatedRole(auth);
  assertEquals(testUserName,((UserDetails)auth.getPrincipal()).getUsername());
  assertTrue(auth.getAuthorities().contains(new GeoServerRole(rootRole)));
  assertTrue(auth.getAuthorities().contains(new GeoServerRole(derivedRole)));
  request=createRequest("/foo/bar");
  response=new MockHttpServletResponse();
  chain=new MockFilterChain();
  headerValue=clientDigestString(tmp,"unknown",testPassword,request.getMethod());
  request.addHeader("Authorization",headerValue);
  getProxy().doFilter(request,response,chain);
  tmp=response.getHeader("WWW-Authenticate");
  assertNotNull(tmp);
  assert(tmp.indexOf(GeoServerSecurityManager.REALM) != -1);
  assert(tmp.indexOf("Digest") != -1);
  assertEquals(HttpServletResponse.SC_UNAUTHORIZED,response.getErrorCode());
  auth=getAuth(testFilterName2,"unknown",300,300);
  assertNull(auth);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  request=createRequest("/foo/bar");
  response=new MockHttpServletResponse();
  chain=new MockFilterChain();
  headerValue=clientDigestString(tmp,GeoServerUser.ROOT_USERNAME,getMasterPassword(),request.getMethod());
  request.addHeader("Authorization",headerValue);
  getProxy().doFilter(request,response,chain);
  assertEquals(HttpServletResponse.SC_OK,response.getErrorCode());
  auth=getAuth(testFilterName2,GeoServerUser.ROOT_USERNAME,300,300);
  assertNull(auth);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  request=createRequest("/foo/bar");
  response=new MockHttpServletResponse();
  chain=new MockFilterChain();
  headerValue=clientDigestString(tmp,GeoServerUser.ROOT_USERNAME,"geoserver1",request.getMethod());
  request.addHeader("Authorization",headerValue);
  getProxy().doFilter(request,response,chain);
  tmp=response.getHeader("WWW-Authenticate");
  assertNotNull(tmp);
  assert(tmp.indexOf(GeoServerSecurityManager.REALM) != -1);
  assert(tmp.indexOf("Digest") != -1);
  assertEquals(HttpServletResponse.SC_UNAUTHORIZED,response.getErrorCode());
  auth=getAuth(testFilterName2,GeoServerUser.ROOT_USERNAME,300,300);
  assertNull(auth);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  updateUser("ug1",testUserName,false);
  request=createRequest("/foo/bar");
  response=new MockHttpServletResponse();
  chain=new MockFilterChain();
  headerValue=clientDigestString(tmp,testUserName,testPassword,request.getMethod());
  request.addHeader("Authorization",headerValue);
  getProxy().doFilter(request,response,chain);
  assertEquals(HttpServletResponse.SC_OK,response.getErrorCode());
  auth=getAuth(testFilterName2,testUserName,300,300);
  assertNotNull(auth);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  checkForAuthenticatedRole(auth);
  assertEquals(testUserName,((UserDetails)auth.getPrincipal()).getUsername());
  assertTrue(auth.getAuthorities().contains(new GeoServerRole(rootRole)));
  assertTrue(auth.getAuthorities().contains(new GeoServerRole(derivedRole)));
  getCache().removeAll();
  request=createRequest("/foo/bar");
  response=new MockHttpServletResponse();
  chain=new MockFilterChain();
  headerValue=clientDigestString(tmp,"unknown",testPassword,request.getMethod());
  request.addHeader("Authorization",headerValue);
  getProxy().doFilter(request,response,chain);
  tmp=response.getHeader("WWW-Authenticate");
  assertNotNull(tmp);
  assert(tmp.indexOf(GeoServerSecurityManager.REALM) != -1);
  assert(tmp.indexOf("Digest") != -1);
  assertEquals(HttpServletResponse.SC_UNAUTHORIZED,response.getErrorCode());
  auth=getAuth(testFilterName2,testUserName,300,300);
  assertNull(auth);
  assertNull(SecurityContextHolder.getContext().getAuthentication());
  updateUser("ug1",testUserName,true);
  insertAnonymousFilter(GeoServerSecurityFilterChain.DYNAMIC_EXCEPTION_TRANSLATION_FILTER);
  request=createRequest("/foo/bar");
  response=new MockHttpServletResponse();
  chain=new MockFilterChain();
  getProxy().doFilter(request,response,chain);
  assertEquals(HttpServletResponse.SC_OK,response.getErrorCode());
  removeAnonymousFilter();
}
