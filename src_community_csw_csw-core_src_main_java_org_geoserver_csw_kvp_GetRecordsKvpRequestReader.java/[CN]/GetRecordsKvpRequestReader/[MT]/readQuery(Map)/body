{
  Csw20Factory factory=Csw20Factory.eINSTANCE;
  QueryType query=factory.createQueryType();
  String typeNamesString=(String)kvp.get("typeNames");
  NamespaceSupport namespaces=(NamespaceSupport)kvp.get("namespace");
  if (namespaces == null) {
    namespaces=CSWRecordDescriptor.NAMESPACES;
  }
  List<QName> typeNames=resolver.parseQNames(typeNamesString,namespaces);
  query.setTypeNames(typeNames);
  ElementSetType elementSet=(ElementSetType)kvp.remove("ELEMENTSETNAME");
  if (elementSet != null) {
    ElementSetNameType esn=Csw20Factory.eINSTANCE.createElementSetNameType();
    esn.setValue(elementSet);
    esn.setTypeNames(typeNames);
    query.setElementSetName(esn);
  }
  String elementNamesString=(String)kvp.remove("elementName");
  if (elementNamesString != null) {
    List<QName> elementNames=resolver.parseQNames(elementNamesString,namespaces);
    query.getElementName().addAll(elementNames);
  }
  if (kvp.get(CONSTRAINT) != null) {
    query.setConstraint(factory.createQueryConstraintType());
    Object language=kvp.get(CONSTRAINTLANGUAGE);
    String constraint=(String)kvp.get(CONSTRAINT);
    if (CQL_TEXT.equals(language) || language == null) {
      Filter filter=null;
      try {
        filter=CQL.toFilter(constraint);
      }
 catch (      Exception e) {
        ServiceException se=new ServiceException("Invalid CQL expression: " + constraint,ServiceException.INVALID_PARAMETER_VALUE,CONSTRAINT);
        se.initCause(e);
        throw se;
      }
      query.getConstraint().setCqlText(constraint);
      query.getConstraint().setFilter(filter);
    }
 else     if (FILTER.equals(language)) {
      try {
        Parser parser=new Parser(new OGCConfiguration());
        parser.setFailOnValidationError(true);
        parser.setValidating(true);
        parser.getNamespaces().declarePrefix("ogc",OGC.NAMESPACE);
        Filter filter=(Filter)parser.parse(new StringReader(constraint));
        query.getConstraint().setFilter(filter);
        query.getConstraint().setVersion("1.1.0");
      }
 catch (      Exception e) {
        ServiceException se=new ServiceException("Invalid FILTER 1.1 expression: " + constraint,ServiceException.INVALID_PARAMETER_VALUE,CONSTRAINT);
        se.initCause(e);
        throw se;
      }
    }
 else {
      throw new ServiceException("Invalid constraint language: " + language + ", valid values are "+ CQL_TEXT+ " and "+ FILTER,ServiceException.INVALID_PARAMETER_VALUE,CONSTRAINTLANGUAGE);
    }
  }
  if (query.getConstraint() != null && query.getConstraint().getFilter() != null) {
    for (    QName typeName : typeNames) {
      RecordDescriptor rd=descriptors.get(typeName);
      if (rd != null) {
        Filter filter=query.getConstraint().getFilter();
        Filter adapted=rd.adaptFilter(filter);
        query.getConstraint().setFilter(adapted);
        break;
      }
    }
  }
  return query;
}
