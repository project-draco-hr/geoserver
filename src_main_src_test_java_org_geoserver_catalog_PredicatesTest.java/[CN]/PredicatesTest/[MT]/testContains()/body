{
  assertTrue(contains("URI","example").evaluate(ns));
  assertFalse(contains("resource.ns.URI","example").evaluate(vectorLayer));
  assertTrue(contains("resource.namespace.URI","example").evaluate(vectorLayer));
  assertTrue(contains("id","vectorLayerId").evaluate(vectorLayer));
  assertTrue(contains("id","vectorLayerID").evaluate(vectorLayer));
  assertTrue(contains("id","torLAY").evaluate(vectorLayer));
  assertTrue(contains("styles.name","style2").evaluate(vectorLayer));
  assertTrue(contains("styles.name","Style2").evaluate(vectorLayer));
  assertTrue(contains("styles.name","YL").evaluate(vectorLayer));
  assertFalse(contains("styles.name","style3").evaluate(vectorLayer));
  String name=featureType.getName();
  assertTrue(contains("resource.name",name).evaluate(vectorLayer));
  assertFalse(contains("resource.name","?").evaluate(vectorLayer));
  featureType.setName("name?.*$[]&()");
  assertTrue(contains("resource.name","?").evaluate(vectorLayer));
  assertTrue(contains("resource.name",".").evaluate(vectorLayer));
  assertTrue(contains("resource.name","*").evaluate(vectorLayer));
  featureType.setName(null);
  assertFalse(contains("resource.name",name).evaluate(vectorLayer));
}
