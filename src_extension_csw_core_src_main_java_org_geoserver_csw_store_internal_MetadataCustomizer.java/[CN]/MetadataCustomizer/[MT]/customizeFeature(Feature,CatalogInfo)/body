{
  PropertyName parentPropertyName=ff.property(ONLINE_PARENT_NODE,MetaDataDescriptor.NAMESPACES);
  Property parentProperty=(Property)parentPropertyName.evaluate(feature);
  if (parentProperty == null) {
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine("Unable to get the specified property for the current feature: " + ONLINE_PARENT_NODE + "\n No customization will be applied");
    }
    return;
  }
  Object value=parentProperty.getValue();
  if (value == null || !(value instanceof Collection)) {
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine("Unable to get a value for the current property: " + parentPropertyName.getPropertyName() + "\n No customization will be applied");
    }
    return;
  }
  Collection<ComplexAttribute> onlineValues=(Collection<ComplexAttribute>)value;
  Collection<ComplexAttribute> updatedOnlineResources=new ArrayList<ComplexAttribute>((Collection<ComplexAttribute>)onlineValues);
  CloseableIterator<String> links=null;
  String link=null;
  try {
    links=downloadLinkHandler.generateDownloadLinks(resource);
    if (links != null) {
      while (links.hasNext()) {
        link=links.next();
        updatedOnlineResources.add(createOnlineResourceElement(link));
      }
      updatedOnlineResources.add(createOnlineResourceElement(downloadLinkHandler.extractFullDownloadLink(link)));
    }
  }
  finally {
    if (links != null) {
      try {
        links.close();
      }
 catch (      IOException e) {
      }
    }
  }
  parentProperty.setValue(updatedOnlineResources);
}
