{
  try {
    StringWriter sw=new StringWriter(MAX_XMLDECL_SIZE);
    int c;
    int count=0;
    for (; (6 > count) && (-1 != (c=reader.read())); count++) {
      sw.write(c);
    }
    if ((6 > count) || (!"<?xml ".equals(sw.toString()))) {
      if (LOGGER.isLoggable(Level.FINER)) {
        LOGGER.finer("Invalid(?) XML declaration: " + sw.toString() + ".");
      }
      return null;
    }
    for (; (MAX_XMLDECL_SIZE > count) && (-1 != (c=reader.read())) && (RIGHT_ANGLE_BRACKET != (char)c); count++) {
      sw.write(c);
    }
    Matcher m=ENCODING_PATTERN.matcher(sw.toString());
    if (m.find()) {
      String result=m.group(1);
      return result;
    }
 else {
      return null;
    }
  }
 catch (  IOException e) {
    if (LOGGER.isLoggable(Level.WARNING)) {
      LOGGER.warning("Failed to extract charset info from XML " + "declaration due to IOException: " + e.getMessage());
    }
    return null;
  }
}
