{
  super.initializeFromConfig(config);
  CasAuthenticationFilterConfig authConfig=(CasAuthenticationFilterConfig)config;
  ServiceProperties props=new ServiceProperties();
  props.setSendRenew(authConfig.isSendRenew());
  casAuthenticationDetailsSource=new ServiceAuthenticationDetailsSource(props,GeoServerCasConstants.ARTIFACT_PARAMETER);
  validator=new Cas20ProxyTicketValidator(authConfig.getCasServerUrlPrefix());
  validator.setAcceptAnyProxy(true);
  validator.setProxyGrantingTicketStorage(pgtStorageFilter);
  validator.setRenew(authConfig.isSendRenew());
  if (StringUtils.hasLength(authConfig.getProxyCallbackUrlPrefix()))   validator.setProxyCallbackUrl(GeoServerCasConstants.createProxyCallBackURl(authConfig.getProxyCallbackUrlPrefix()));
  casLogoutURL=GeoServerCasConstants.createCasURl(authConfig.getCasServerUrlPrefix(),GeoServerCasConstants.LOGOUT_URI);
  if (StringUtils.hasLength(authConfig.getUrlInCasLogoutPage()))   casLogoutURL+="?" + GeoServerCasConstants.LOGOUT_URL_PARAM + "="+ URLEncoder.encode(authConfig.getUrlInCasLogoutPage(),"utf-8");
  singleSignOut=authConfig.isSingleSignOut();
  aep=new GeoServerCasAuthenticationEntryPoint(authConfig);
}
