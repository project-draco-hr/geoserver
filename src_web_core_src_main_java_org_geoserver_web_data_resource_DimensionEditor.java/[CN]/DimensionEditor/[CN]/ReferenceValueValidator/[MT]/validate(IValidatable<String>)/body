{
  if (((strategyModel.getObject() == Strategy.FIXED) || (strategyModel.getObject() == Strategy.NEAREST)) && value.getValue() == null) {
    value.error(new ValidationError("emptyReferenceValue"));
  }
 else   if (dimension.equals("time")) {
    try {
      DateUtil.parseDateTime(value.getValue());
    }
 catch (    IllegalArgumentException iae) {
      if (strategyModel.getObject() == Strategy.NEAREST) {
        if (!DimensionDefaultValueSetting.TIME_CURRENT.equalsIgnoreCase(value.getValue())) {
          IValidationError err=new ValidationError("invalidNearestTimeReferenceValue " + Collections.singletonMap("value",(Object)value.getValue()));
          value.error(err);
        }
      }
 else {
        IValidationError err=new ValidationError("invalidTimeReferenceValue" + Collections.singletonMap("value",(Object)value.getValue()));
        value.error(err);
      }
    }
  }
 else   if (dimension.equals("elevation")) {
    try {
      Double.parseDouble(value.getValue());
    }
 catch (    NumberFormatException nfe) {
      IValidationError err=new ValidationError("invalidElevationReferenceValue " + Collections.singletonMap("value",(Object)value.getValue()));
      value.error(err);
    }
  }
}
