{
  T service=infoModel.getObject();
  dialog=new GeoServerDialog("dialog");
  add(dialog);
  Form form=new Form("form",new CompoundPropertyModel(infoModel));
  add(form);
  if (service.getWorkspace() == null) {
    form.add(new GlobalWorkspacePanel("workspace"));
  }
 else {
    form.add(new LocalWorkspacePanel("workspace",service));
  }
  form.add(new HelpLink("workspaceHelp").setDialog(dialog));
  form.add(new Label("service.enabled",new StringResourceModel("service.enabled",this).setParameters(getServiceName())));
  form.add(new TextField("maintainer"));
  TextField onlineResource=new TextField("onlineResource");
  final GeoServerEnvironment gsEnvironment=GeoServerExtensions.bean(GeoServerEnvironment.class);
  if (gsEnvironment == null || !GeoServerEnvironment.ALLOW_ENV_PARAMETRIZATION) {
    onlineResource.add(new UrlValidator());
  }
  form.add(onlineResource);
  form.add(new CheckBox("enabled"));
  form.add(new CheckBox("citeCompliant"));
  form.add(new TextField("title"));
  form.add(new TextArea("abstract"));
  form.add(new KeywordsEditor("keywords",LiveCollectionModel.list(new PropertyModel(infoModel,"keywords"))));
  form.add(new TextField("fees"));
  form.add(new TextField("accessConstraints"));
  build(infoModel,form);
  ListView extensionPanels=createExtensionPanelList("extensions",infoModel);
  extensionPanels.setReuseItems(true);
  form.add(extensionPanels);
  SubmitLink submit=new SubmitLink("submit",new StringResourceModel("save",(Component)null,null)){
    @Override public void onSubmit(){
      try {
        handleSubmit((T)infoModel.getObject());
        doReturn();
      }
 catch (      Exception e) {
        error(e);
      }
    }
  }
;
  form.add(submit);
  Button cancel=new Button("cancel",new StringResourceModel("cancel",(Component)null,null)){
    public void onSubmit(){
      doReturn();
    }
  }
;
  form.add(cancel);
}
