{
  this.chainWrapper=wrapper;
  this.isNew=isNew;
  this.secMgrConfig=secMgrConfig;
  form=theForm;
  add(form);
  boolean isAdmin=getSecurityManager().checkAuthenticationForAdminRole();
  setEnabled(isAdmin);
  form.add(new Label("message",isAdmin ? new Model() : new StringResourceModel("notAdmin",this,null)));
  if (!isAdmin) {
    form.get("message").add(new AttributeAppender("class",new Model("info-link")," "));
  }
  setOutputMarkupId(true);
  form.add(new TextField<String>("name").setEnabled(isNew));
  form.add(new TextField<String>("patternString"));
  form.add(new CheckBox("disabled"));
  form.add(new CheckBox("allowSessionCreation"));
  form.add(new CheckBox("requireSSL"));
  form.add(new CheckBox("matchHTTPMethod").add(new OnChangeAjaxBehavior(){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      for (      CheckBox cb : methodList) {
        cb.setEnabled(chainWrapper.isMatchHTTPMethod());
        target.add(cb);
      }
    }
  }
));
  List<String> filterNames=new ArrayList<String>();
  try {
    filterNames.addAll(getSecurityManager().listFilters(GeoServerRoleFilter.class));
    for (    GeoServerRoleFilter filter : GeoServerExtensions.extensions(GeoServerRoleFilter.class)) {
      filterNames.add(filter.getName());
    }
    form.add(new DropDownChoice<String>("roleFilterName",new PropertyModel<String>(chainWrapper.getChain(),"roleFilterName"),filterNames).setNullValid(true));
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  form.add(methodList[0]=new CheckBox("GET"));
  form.add(methodList[1]=new CheckBox("POST"));
  form.add(methodList[2]=new CheckBox("PUT"));
  form.add(methodList[3]=new CheckBox("DELETE"));
  form.add(methodList[4]=new CheckBox("OPTIONS"));
  form.add(methodList[5]=new CheckBox("HEAD"));
  form.add(methodList[6]=new CheckBox("TRACE"));
  for (  CheckBox cb : methodList) {
    cb.setOutputMarkupPlaceholderTag(true);
    cb.setEnabled(chain.isMatchHTTPMethod());
  }
  form.add(dialog=new GeoServerDialog("dialog"));
  form.add(new HelpLink("chainConfigHelp").setDialog(dialog));
  form.add(new HelpLink("chainConfigMethodHelp").setDialog(dialog));
  form.add(new SubmitLink("close",form){
    @Override public void onSubmit(){
      handleSubmit(getForm());
    }
  }
);
  form.add(new Link("cancel"){
    @Override public void onClick(){
      doReturn();
    }
  }
);
}
