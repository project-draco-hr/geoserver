{
  template=new RestTemplate();
  mockServer=MockRestServiceServer.createServer(template);
  mockServer.expect(requestTo(uri + "/api/roles")).andRespond(withSuccess("{\"groups\": [\"anonymous\", \"test\", \"admin\"]}",MediaType.APPLICATION_JSON));
  mockServer.expect(requestTo(uri + "/api/adminRole")).andRespond(withSuccess("{\"adminRole\": \"admin\"}",MediaType.APPLICATION_JSON));
  mockServer.expect(requestTo(uri + "/api/users/test")).andRespond(withSuccess("{\"users\": [{\"username\": \"test\", \"groups\": [\"test\"]}]}",MediaType.APPLICATION_JSON));
  mockServer.expect(requestTo(uri + "/api/adminRole")).andRespond(withSuccess("{\"adminRole\": \"admin\"}",MediaType.APPLICATION_JSON));
  mockServer.expect(requestTo(uri + "/api/users/test@geoserver.org")).andRespond(withSuccess("{\"users\": [{\"username\": \"test\", \"groups\": [\"test\"]}]}",MediaType.APPLICATION_JSON));
  mockServer.expect(requestTo(uri + "/api/adminRole")).andRespond(withSuccess("{\"adminRole\": \"admin\"}",MediaType.APPLICATION_JSON));
  mockServer.expect(requestTo(uri + "/api/users/admin")).andRespond(withSuccess("{\"users\": [{\"username\": \"admin\", \"groups\": [\"admin\"]}]}",MediaType.APPLICATION_JSON));
  mockServer.expect(requestTo(uri + "/api/adminRole")).andRespond(withSuccess("{\"adminRole\": \"admin\"}",MediaType.APPLICATION_JSON));
}
