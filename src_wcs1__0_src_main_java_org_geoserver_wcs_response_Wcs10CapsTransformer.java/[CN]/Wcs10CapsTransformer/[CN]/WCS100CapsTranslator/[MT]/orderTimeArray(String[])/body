{
  List finalArray=Arrays.asList(originalArray);
  Collections.sort(finalArray,new Comparator<String>(){
    /** 
 * All patterns that are correct regarding the ISO-8601 norm.
 */
    final String[] PATTERNS={"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","yyyy-MM-dd'T'HH:mm:sss'Z'","yyyy-MM-dd'T'HH:mm:ss'Z'","yyyy-MM-dd'T'HH:mm'Z'","yyyy-MM-dd'T'HH'Z'","yyyy-MM-dd","yyyy-MM","yyyy"};
    public int compare(    String o1,    String o2){
      if (o1.equals(o2))       return 0;
      Date d1=getDate(o1);
      Date d2=getDate(o2);
      if (d1 == null || d2 == null)       return 0;
      return (d1.getTime() > d2.getTime() ? 1 : -1);
    }
    private Date getDate(    final String value){
      if (value.equalsIgnoreCase("current"))       return null;
      for (int i=0; i < PATTERNS.length; i++) {
        SimpleDateFormat format=new SimpleDateFormat(PATTERNS[i],Locale.CANADA);
        ParsePosition pos=new ParsePosition(0);
        Date time=format.parse(value,pos);
        if (pos.getIndex() == value.length()) {
          return time;
        }
      }
      return null;
    }
  }
);
  return (String[])finalArray.toArray(new String[1]);
}
