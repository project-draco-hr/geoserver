{
  Class<? extends CatalogInfo> sourceClass=object.getClass();
  Class result=CATALOGINFO_INTERFACE_CACHE.get(sourceClass);
  if (result == null) {
    List<Class<?>> interfaces=ClassUtils.getAllInterfaces(sourceClass);
    List<Class> cis=new ArrayList<Class>();
    for (    Class clazz : interfaces) {
      if (CatalogInfo.class.isAssignableFrom(clazz)) {
        cis.add(clazz);
      }
    }
    if (cis.size() == 0) {
      result=null;
    }
 else     if (cis.size() == 1) {
      result=cis.get(0);
    }
 else {
      Collections.sort(cis,new Comparator<Class>(){
        @Override public int compare(        Class c1,        Class c2){
          if (c1.isAssignableFrom(c2)) {
            return 1;
          }
 else           if (c2.isAssignableFrom(c1)) {
            return -1;
          }
 else {
            return 0;
          }
        }
      }
);
      result=cis.get(0);
    }
    CATALOGINFO_INTERFACE_CACHE.put(sourceClass,result);
  }
  return result;
}
