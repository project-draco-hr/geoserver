{
  java.util.Map hints=new HashMap();
  if (considerDPI) {
    if (request.getFormatOptions().get("dpi") != null) {
      hints.put(StreamingRenderer.DPI_KEY,(request.getFormatOptions().get("dpi")));
    }
  }
  if (request.getScaleMethod() == ScaleComputationMethod.Accurate) {
    if (request.getAngle() != 0) {
      throw new ServiceException("Accurate scale computation is not supported when using the angle parameter. " + "This functionality could be added, please provide a pull request for it ;-)");
    }
    try {
      return RendererUtilities.calculateScale(getViewport().getBounds(),getMapWidth(),getMapHeight(),hints);
    }
 catch (    Exception e) {
      throw new ServiceException("Failed to compute accurate scale denominator",e);
    }
  }
 else {
    AffineTransform at=getRenderingTransform();
    if (Math.abs(XAffineTransform.getRotation(at)) != 0.0) {
      return RendererUtilities.calculateOGCScaleAffine(getCoordinateReferenceSystem(),at,hints);
    }
 else {
      return RendererUtilities.calculateOGCScale(getViewport().getBounds(),getMapWidth(),hints);
    }
  }
}
