{
  String workspace=getAttribute("workspace");
  String datastore=getAttribute("datastore");
  DataStoreInfo info=catalog.getDataStoreByName(workspace,datastore);
  if (info == null) {
    throw new RestletException("No such datastore: " + datastore,Status.CLIENT_ERROR_NOT_FOUND);
  }
  boolean skipNoGeom="available_with_geom".equalsIgnoreCase(getQueryStringValue("list"));
  List<String> available=new ArrayList<String>();
  try {
    DataStore ds=(DataStore)info.getDataStore(null);
    String[] featureTypeNames=ds.getTypeNames();
    for (    String featureTypeName : featureTypeNames) {
      FeatureTypeInfo ftinfo=catalog.getFeatureTypeByDataStore(info,featureTypeName);
      if (ftinfo == null) {
        if (skipNoGeom) {
          try {
            FeatureType featureType=ds.getSchema(featureTypeName);
            if (featureType.getGeometryDescriptor() == null) {
              continue;
            }
          }
 catch (          IOException e) {
            LOGGER.log(Level.WARNING,"Unable to load schema for feature type " + featureTypeName,e);
          }
        }
        available.add(featureTypeName);
      }
    }
  }
 catch (  IOException e) {
    throw new RestletException("Could not load datastore: " + datastore,Status.SERVER_ERROR_INTERNAL,e);
  }
  return available;
}
