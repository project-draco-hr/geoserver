{
  lineStyle=getCatalog().getStyleByName("Streams");
  polygonStyle=getCatalog().getStyleByName("Buildings");
  pointStyle=getCatalog().getStyleByName("Bridges");
  pondsStyle=getCatalog().getStyleByName("Ponds");
  lakesLayer=buildLayer(MockData.LAKES);
  neatlineLayer=buildLayer(MockData.MAP_NEATLINE);
  lakesNeatline=buildGroup("lakesNeatline",lakesLayer,neatlineLayer);
  lakesNeatline.setMode(Mode.EO);
  roadSegmentsLayer=buildLayer(MockData.ROAD_SEGMENTS);
  lakesNeatline.setRootLayer(roadSegmentsLayer);
  lakesNeatline.setRootLayerStyle(lineStyle);
  lakesNeatline.getStyles().add(polygonStyle);
  lakesNeatline.getStyles().add(pointStyle);
  pondsLayer=buildLayer(MockData.PONDS);
  ponds=buildGroup("ponds",pondsLayer);
  ponds.getStyles().add(null);
  forestLayer=buildLayer(MockData.FORESTS);
  buildingsLayer=buildLayer(MockData.BUILDINGS);
  nested=buildGroup("nested",forestLayer,lakesNeatline,buildingsLayer,ponds);
  nested.getStyles().add(polygonStyle);
  nested.getStyles().add(null);
  nested.getStyles().add(polygonStyle);
  nested.getStyles().add(null);
  loop1=buildGroup("loop1",forestLayer);
  loop1.getLayers().add(loop1);
  loop2=buildGroup("loop2",forestLayer);
  loop2Child=buildGroup("ponds",pondsLayer,loop2);
  loop2.getLayers().add(loop2Child);
  container=buildGroup("container",forestLayer);
  container.getStyles().add(polygonStyle);
  container.setMode(LayerGroupInfo.Mode.CONTAINER);
  containerParent=buildGroup("containerParent",container);
  containerParent.getStyles().add(null);
}
