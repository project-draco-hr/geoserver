{
  SENTINEL.start();
  if (SENTINEL.isOutermostRequest()) {
    blockedRequests.incrementAndGet();
    try {
      List<FlowController> controllers=null;
      try {
        controllers=provider.getFlowControllers(request);
      }
 catch (      Exception e) {
        LOGGER.log(Level.SEVERE,"An error occurred setting up the flow controllers to this request",e);
        return operation;
      }
      if (controllers.size() == 0) {
        LOGGER.info("Control-flow inactive for , there are no configured rules");
      }
 else {
        long timeout=provider.getTimeout(request);
        CallbackContext context=new CallbackContext(controllers,timeout);
        REQUEST_CONTROLLERS.set(context);
        long maxTime=timeout > 0 ? System.currentTimeMillis() + timeout : -1;
        for (        FlowController flowController : controllers) {
          if (timeout > 0) {
            long maxWait=maxTime - System.currentTimeMillis();
            if (!flowController.requestIncoming(request,maxWait))             throw new HttpErrorCodeException(503,"Requested timeout out while waiting to be executed");
          }
 else {
            flowController.requestIncoming(request,-1);
          }
        }
      }
    }
  finally {
      blockedRequests.decrementAndGet();
      runningRequests.incrementAndGet();
    }
  }
  return operation;
}
