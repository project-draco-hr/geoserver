{
  final String layerName=MockData.BASIC_POLYGONS.getPrefix() + ":" + MockData.BASIC_POLYGONS.getLocalPart();
  final String titleName=MockData.BASIC_POLYGONS.getLocalPart();
  final String abstractValue="abstract about " + titleName;
  String requestUrl="wms/kml?mode=refresh&layers=" + layerName + ","+ layerName+ "&styles=Default,Default&cql_filter=att1<10;att1>1000";
  Document dom=getAsDOM(requestUrl);
  assertEquals("kml",dom.getDocumentElement().getLocalName());
  assertXpathEvaluatesTo("2","count(kml:kml/kml:Document/kml:NetworkLink)",dom);
  assertXpathEvaluatesTo(titleName,"kml:kml/kml:Document/kml:NetworkLink[1]/kml:name",dom);
  assertXpathEvaluatesTo(abstractValue,"kml:kml/kml:Document/kml:NetworkLink[1]/kml:description",dom);
  assertXpathEvaluatesTo(titleName,"kml:kml/kml:Document/kml:NetworkLink[2]/kml:name",dom);
  assertXpathEvaluatesTo(abstractValue,"kml:kml/kml:Document/kml:NetworkLink[2]/kml:description",dom);
  XpathEngine xpath=XMLUnit.newXpathEngine();
  String url1=xpath.evaluate("/kml:kml/kml:Document/kml:NetworkLink[1]/kml:Url/kml:href",dom);
  String url2=xpath.evaluate("/kml:kml/kml:Document/kml:NetworkLink[2]/kml:Url/kml:href",dom);
  assertNotNull(url1);
  assertNotNull(url2);
  Map<String,Object> kvp1=KvpUtils.parseQueryString(url1);
  Map<String,Object> kvp2=KvpUtils.parseQueryString(url2);
  assertEquals(layerName,kvp1.get("layers"));
  assertEquals(layerName,kvp2.get("layers"));
  assertEquals("Default",kvp1.get("styles"));
  assertEquals("Default",kvp2.get("styles"));
  assertEquals("att1<10",kvp1.get("cql_filter"));
  assertEquals("att1>1000",kvp2.get("cql_filter"));
}
