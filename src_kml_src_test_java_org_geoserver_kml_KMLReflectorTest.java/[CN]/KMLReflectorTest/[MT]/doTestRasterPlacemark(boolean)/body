{
  final String requestUrl="wms/reflect?layers=" + getLayerId(MockData.BASIC_POLYGONS) + "&styles=&format_options=mode:refresh;kmscore:0;kmplacemark:"+ doPlacemarks+ "&format="+ KMZMapOutputFormat.MIME_TYPE;
  MockHttpServletResponse response=getAsServletResponse(requestUrl);
  assertEquals(KMZMapOutputFormat.MIME_TYPE,response.getContentType());
  ZipFile zipFile=null;
  try {
    File tempDir=org.geoserver.data.util.IOUtils.createRandomDirectory("./target","kmplacemark","test");
    tempDir.deleteOnExit();
    File zip=new File(tempDir,"kmz.zip");
    zip.deleteOnExit();
    FileOutputStream output=new FileOutputStream(zip);
    FileUtils.writeByteArrayToFile(zip,getBinary(response));
    output.flush();
    output.close();
    assertTrue(zip.exists());
    zipFile=new ZipFile(zip);
    ZipEntry entry=zipFile.getEntry("wms.kml");
    assertNotNull(entry);
    assertNotNull(zipFile.getEntry("images/layers_0.png"));
    byte[] buffer=new byte[1024];
    int len;
    InputStream inStream=zipFile.getInputStream(entry);
    File temp=File.createTempFile("test_out","kmz",tempDir);
    temp.deleteOnExit();
    BufferedOutputStream outStream=new BufferedOutputStream(new FileOutputStream(temp));
    while ((len=inStream.read(buffer)) >= 0)     outStream.write(buffer,0,len);
    inStream.close();
    outStream.close();
    Document document=dom(new BufferedInputStream(new FileInputStream(temp)));
    assertEquals("kml",document.getDocumentElement().getNodeName());
    if (doPlacemarks) {
      assertEquals(getFeatureSource(MockData.BASIC_POLYGONS).getFeatures().size(),document.getElementsByTagName("Placemark").getLength());
      XMLAssert.assertXpathEvaluatesTo("3","count(//kml:Placemark//kml:Point)",document);
    }
 else {
      assertEquals(0,document.getElementsByTagName("Placemark").getLength());
    }
  }
  finally {
    if (zipFile != null) {
      zipFile.close();
    }
  }
}
