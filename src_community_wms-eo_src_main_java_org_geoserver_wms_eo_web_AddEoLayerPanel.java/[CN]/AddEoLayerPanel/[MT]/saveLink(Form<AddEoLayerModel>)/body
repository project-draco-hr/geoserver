{
  return new AjaxSubmitLink("save",paramsForm){
    @Override protected void onError(    AjaxRequestTarget target,    Form<?> paramsForm){
      super.onError(target,paramsForm);
      target.addComponent(paramsForm);
    }
    @Override protected void onSubmit(    AjaxRequestTarget target,    Form<?> paramsForm){
      AddEoLayerModel model=(AddEoLayerModel)paramsForm.getModelObject();
      LayerGroupInfo group=model.getGroup();
      EoCatalogBuilder builder=new EoCatalogBuilder(getCatalog());
      if (StringUtils.isEmpty(model.getBitmaskName()) && !StringUtils.isEmpty(model.getBitmaskUrl())) {
        paramsForm.error("Field '" + EoPage.BITMASK.getObject() + " Name' is required.");
      }
      if (StringUtils.isEmpty(model.getParameterName()) && !StringUtils.isEmpty(model.getParameterUrl())) {
        paramsForm.error("Field '" + EoPage.GEOPHYSICAL_PARAMETER.getObject() + " Name' is required.");
      }
      if (paramsForm.hasError()) {
        target.addComponent(paramsForm);
      }
 else {
        try {
          LayerInfo maskLayer=builder.createEoMasksLayer(group.getWorkspace(),group.getName(),model.getBitmaskName(),model.getBitmaskUrl());
          LayerInfo paramsLayer=builder.createEoParametersLayer(group.getWorkspace(),group.getName(),model.getParameterName(),model.getParameterUrl());
          AddEoLayerPanel.this.onSubmit(target,maskLayer,paramsLayer);
        }
 catch (        RuntimeException e) {
          if (LOGGER.isLoggable(Level.INFO)) {
            LOGGER.log(Level.INFO,e.getMessage(),e);
          }
          paramsForm.error(e.getMessage());
          target.addComponent(paramsForm);
        }
catch (        Exception e) {
          if (LOGGER.isLoggable(Level.INFO)) {
            LOGGER.log(Level.INFO,e.getMessage(),e);
          }
          paramsForm.error(e.getMessage());
          target.addComponent(paramsForm);
        }
      }
    }
  }
;
}
