{
  final boolean jsonp=JSONType.isJsonpMimeType(getMimeType(featureTypeInfos,describeFeatureType));
  Writer outWriter=new BufferedWriter(new OutputStreamWriter(output,gs.getSettings().getCharset()));
  if (jsonp) {
    outWriter.write(getCallbackFunction() + "(");
  }
  GeoJSONBuilder jw=new GeoJSONBuilder(outWriter);
  jw.array();
  for (  FeatureTypeInfo ft : featureTypeInfos) {
    jw.object();
    jw.key("name").value(ft.getNamespace().getPrefix() + ":" + ft.getName());
    jw.key("description").value(ft.getTitle());
    jw.key("type").value("object");
    jw.key("extends").value("Feature");
    SimpleFeatureType schema=(SimpleFeatureType)ft.getFeatureType();
    jw.key("properties").object();
    if (schema.getGeometryDescriptor() != null) {
      describeProperty("geometry",schema.getGeometryDescriptor(),jw);
    }
    if (schema.getAttributeDescriptors().size() > 0) {
      jw.key("properties").object();
      jw.key("type").value("object");
      jw.key("properties").object();
      for (      AttributeDescriptor ad : schema.getAttributeDescriptors()) {
        if (ad == schema.getGeometryDescriptor()) {
          continue;
        }
        describeProperty(ad.getLocalName(),ad,jw);
      }
      jw.endObject();
      jw.endObject();
    }
    jw.endObject();
    jw.endObject();
  }
  jw.endArray();
  if (jsonp) {
    outWriter.write(")");
  }
  outWriter.flush();
}
