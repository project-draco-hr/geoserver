{
  try {
    File fileToLock=File.createTempFile("test",".xml");
    fileToLock.deleteOnExit();
    LockFile lf1=new LockFile(fileToLock);
    LockFile lf2=new LockFile(fileToLock);
    assertFalse(lf1.hasWriteLock());
    assertFalse(lf1.hasForeignWriteLock());
    lf2.writeLock();
    assertFalse(lf1.hasWriteLock());
    assertTrue(lf1.hasForeignWriteLock());
    assertTrue(lf2.hasWriteLock());
    assertFalse(lf2.hasForeignWriteLock());
    lf2.writeUnLock();
    assertFalse(lf1.hasWriteLock());
    assertFalse(lf1.hasForeignWriteLock());
    assertFalse(lf2.hasWriteLock());
    assertFalse(lf2.hasForeignWriteLock());
    lf2.writeLock();
    boolean fail=true;
    try {
      lf1.writeLock();
    }
 catch (    IOException ex) {
      fail=false;
      LOGGER.info(ex.getMessage());
    }
    if (fail) {
      Assert.fail("IOException not thrown for concurrent write lock");
    }
    lf2.writeUnLock();
    lf1.writeLock();
    assertTrue(lf1.hasWriteLock());
    assertFalse(lf1.hasForeignWriteLock());
    assertFalse(lf2.hasWriteLock());
    assertTrue(lf2.hasForeignWriteLock());
    lf1.finalize();
    assertFalse(lf1.hasWriteLock());
    assertFalse(lf1.hasForeignWriteLock());
    assertFalse(lf2.hasWriteLock());
    assertFalse(lf2.hasForeignWriteLock());
  }
 catch (  Throwable ex) {
    Assert.fail(ex.getMessage());
  }
}
