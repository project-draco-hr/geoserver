{
  SecurityManagerConfig config=getSecurityManager().getSecurityConfig();
  GeoServerPasswordEncoder encoder=getPlainTextPasswordEncoder();
  String plainprefix=encoder.getPrefix() + GeoServerPasswordEncoder.PREFIX_DELIMTER;
  config.setConfigPasswordEncrypterName(encoder.getName());
  getSecurityManager().saveSecurityConfig(config);
  String serviceName="testEncrypt";
  String cryptprefix=getPBEPasswordEncoder().getPrefix() + GeoServerPasswordEncoder.PREFIX_DELIMTER;
  MemoryRoleServiceConfigImpl roleConfig=getRoleConfig(serviceName);
  MemoryUserGroupServiceConfigImpl ugConfig=getUserGroupConfg(serviceName,getPlainTextPasswordEncoder().getName());
  getSecurityManager().saveRoleService(roleConfig);
  getSecurityManager().saveUserGroupService(ugConfig);
  File roleDir=new File(getSecurityManager().getRoleRoot(),serviceName);
  File ugDir=new File(getSecurityManager().getUserGroupRoot(),serviceName);
  File roleFile=new File(roleDir,GeoServerSecurityManager.CONFIG_FILENAME);
  File ugFile=new File(ugDir,GeoServerSecurityManager.CONFIG_FILENAME);
  assertTrue(roleFile.exists());
  assertTrue(ugFile.exists());
  Document ugDoc=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(ugFile);
  Document roleDoc=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(roleFile);
  Element roleElem=(Element)roleDoc.getDocumentElement().getElementsByTagName("toBeEncrypted").item(0);
  Element ugElem=(Element)ugDoc.getDocumentElement().getElementsByTagName("toBeEncrypted").item(0);
  assertEquals(plainprefix + plainTextRole,roleElem.getTextContent());
  assertEquals(plainprefix + plainTextUserGroup,ugElem.getTextContent());
  MemoryRoleService roleService=(MemoryRoleService)getSecurityManager().loadRoleService(serviceName);
  assertEquals(plainTextRole,roleService.getToBeEncrypted());
  MemoryUserGroupService ugService=(MemoryUserGroupService)getSecurityManager().loadUserGroupService(serviceName);
  assertEquals(plainTextUserGroup,ugService.getToBeEncrypted());
  config=getSecurityManager().getSecurityConfig();
  config.setConfigPasswordEncrypterName(getPBEPasswordEncoder().getName());
  getSecurityManager().saveSecurityConfig(config);
  getSecurityManager().updateConfigurationFilesWithEncryptedFields();
  ugDoc=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(ugFile);
  roleDoc=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(roleFile);
  roleElem=(Element)roleDoc.getDocumentElement().getElementsByTagName("toBeEncrypted").item(0);
  ugElem=(Element)ugDoc.getDocumentElement().getElementsByTagName("toBeEncrypted").item(0);
  assertTrue(roleElem.getTextContent().startsWith(cryptprefix));
  assertTrue(ugElem.getTextContent().startsWith(cryptprefix));
  roleService=(MemoryRoleService)getSecurityManager().loadRoleService(serviceName);
  assertEquals(plainTextRole,roleService.getToBeEncrypted());
  ugService=(MemoryUserGroupService)getSecurityManager().loadUserGroupService(serviceName);
  assertEquals(plainTextUserGroup,ugService.getToBeEncrypted());
}
