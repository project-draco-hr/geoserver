{
  MemoryRoleServiceConfigImpl config=new MemoryRoleServiceConfigImpl();
  config.setName("testAdminRole");
  config.setAdminRoleName("adminRole");
  config.setGroupAdminRoleName("groupAdminRole");
  config.setClassName(MemoryRoleService.class.getName());
  GeoServerRoleService service=new MemoryRoleService();
  service.initializeFromConfig(config);
  GeoServerSecurityManager manager=GeoServerExtensions.bean(GeoServerSecurityManager.class);
  service.setSecurityManager(manager);
  manager.setActiveRoleService(service);
  manager.saveRoleService(config);
  GeoServerRoleStore store=service.createStore();
  GeoServerRole adminRole=store.createRoleObject("adminRole");
  GeoServerRole groupAdminRole=store.createRoleObject("groupAdminRole");
  GeoServerRole role1=store.createRoleObject("role1");
  store.addRole(adminRole);
  store.addRole(groupAdminRole);
  store.addRole(role1);
  store.associateRoleToUser(adminRole,"user1");
  store.associateRoleToUser(groupAdminRole,"user1");
  store.associateRoleToUser(adminRole,"user2");
  store.associateRoleToUser(role1,"user3");
  store.store();
  MemoryUserGroupServiceConfigImpl ugconfig=new MemoryUserGroupServiceConfigImpl();
  ugconfig.setName("testAdminRole");
  ugconfig.setClassName(MemoryUserGroupService.class.getName());
  ugconfig.setPasswordEncoderName(getPBEPasswordEncoder().getName());
  ugconfig.setPasswordPolicyName(PasswordValidator.DEFAULT_NAME);
  GeoServerUserGroupService ugService=new MemoryUserGroupService();
  ugService.setSecurityManager(GeoServerExtensions.bean(GeoServerSecurityManager.class));
  ugService.initializeFromConfig(ugconfig);
  RoleCalculator calc=new RoleCalculator(ugService,service);
  SortedSet<GeoServerRole> roles;
  roles=calc.calculateRoles(ugService.createUserObject("user1","abc",true));
  assertTrue(roles.size() == 4);
  assertTrue(roles.contains(adminRole));
  assertTrue(roles.contains(GeoServerRole.ADMIN_ROLE));
  assertTrue(roles.contains(groupAdminRole));
  assertTrue(roles.contains(GeoServerRole.GROUP_ADMIN_ROLE));
  roles=calc.calculateRoles(ugService.createUserObject("user2","abc",true));
  assertTrue(roles.size() == 2);
  assertTrue(roles.contains(adminRole));
  assertTrue(roles.contains(GeoServerRole.ADMIN_ROLE));
  roles=calc.calculateRoles(ugService.createUserObject("user3","abc",true));
  assertTrue(roles.size() == 1);
  assertTrue(roles.contains(role1));
}
