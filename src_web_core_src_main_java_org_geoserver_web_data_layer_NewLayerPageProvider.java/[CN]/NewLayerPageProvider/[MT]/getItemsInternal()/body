{
  try {
    List<Resource> result;
    StoreInfo store=getCatalog().getStore(storeId,StoreInfo.class);
    Map<String,Resource> resources=new HashMap<String,Resource>();
    if (store instanceof DataStoreInfo) {
      DataStoreInfo dstore=(DataStoreInfo)store;
      DataStoreInfo expandedStore=getCatalog().getResourcePool().clone(dstore,true);
      List<Name> names=expandedStore.getDataStore(null).getNames();
      for (      Name name : names) {
        FeatureTypeInfo fti=getCatalog().getFeatureTypeByDataStore(expandedStore,name.getLocalPart());
        if (fti == null || fti.getMetadata().get(FeatureTypeInfo.JDBC_VIRTUAL_TABLE) == null) {
          resources.put(name.getLocalPart(),new Resource(name));
        }
      }
    }
 else     if (store instanceof CoverageStoreInfo) {
      CoverageStoreInfo cstore=(CoverageStoreInfo)store;
      CoverageStoreInfo expandedStore=getCatalog().getResourcePool().clone(cstore,true);
      NamespaceInfo ns=getCatalog().getNamespaceByPrefix(expandedStore.getWorkspace().getName());
      GridCoverageReader reader=expandedStore.getGridCoverageReader(null,null);
      try {
        String[] names=reader.getGridCoverageNames();
        for (        String name : names) {
          Name qualified=new NameImpl(ns.getURI(),name);
          Resource resource=new Resource(qualified);
          resource.setMultiCoverageReader(true);
          resources.put(name,resource);
        }
      }
 catch (      UnsupportedOperationException e) {
        CatalogBuilder builder=new CatalogBuilder(getCatalog());
        builder.setStore(store);
        CoverageInfo ci=builder.buildCoverage();
        Name name=ci.getQualifiedName();
        resources.put(name.getLocalPart(),new Resource(name));
      }
    }
 else     if (store instanceof WMSStoreInfo) {
      WMSStoreInfo wmsInfo=(WMSStoreInfo)store;
      WMSStoreInfo expandedStore=getCatalog().getResourcePool().clone(wmsInfo,true);
      CatalogBuilder builder=new CatalogBuilder(getCatalog());
      builder.setStore(store);
      List<Layer> layers=expandedStore.getWebMapServer(null).getCapabilities().getLayerList();
      for (      Layer l : layers) {
        if (l.getName() == null) {
          continue;
        }
        resources.put(l.getName(),new Resource(new NameImpl(l.getName())));
      }
    }
    List<ResourceInfo> configuredTypes=getCatalog().getResourcesByStore(store,ResourceInfo.class);
    for (    ResourceInfo type : configuredTypes) {
      Resource resource;
      if (type instanceof CoverageInfo) {
        CoverageInfo ci=(CoverageInfo)type;
        if (ci.getNativeCoverageName() != null) {
          resource=resources.get(ci.getNativeCoverageName());
        }
 else {
          resource=resources.get(type.getNativeName());
        }
      }
 else {
        resource=resources.get(type.getNativeName());
      }
      if (resource != null) {
        resource.setPublished(true);
      }
    }
    result=new ArrayList<Resource>(resources.values());
    Collections.sort(result);
    return result;
  }
 catch (  Exception e) {
    throw new RuntimeException("Could not list layers for this store, " + "an error occurred retrieving them: " + e.getMessage(),e);
  }
}
