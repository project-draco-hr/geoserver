{
  if (StringUtils.hasLength(config.getUrlInCasLogoutPage())) {
    try {
      new URL(config.getCasServerUrlPrefix());
    }
 catch (    MalformedURLException ex) {
      throw createFilterException(CasFilterConfigException.CAS_URL_IN_LOGOUT_PAGE_MALFORMED);
    }
  }
  URL serviceUrl=null;
  if (StringUtils.hasLength(config.getService()) == false)   throw createFilterException(CasFilterConfigException.CAS_SERVICE_URL_REQUIRED);
  try {
    serviceUrl=new URL(config.getService());
  }
 catch (  MalformedURLException ex) {
    throw createFilterException(CasFilterConfigException.CAS_SERVICE_URL_MALFORMED);
  }
  if (StringUtils.hasLength(config.getProxyCallbackUrlPrefix())) {
    URL callBackUrl=null;
    try {
      callBackUrl=new URL(config.getProxyCallbackUrlPrefix());
    }
 catch (    MalformedURLException ex) {
      throw createFilterException(CasFilterConfigException.CAS_PROXYCALLBACK_MALFORMED);
    }
    if (callBackUrl.getHost().equals(serviceUrl.getHost()) == false)     throw createFilterException(CasFilterConfigException.CAS_PROXYCALLBACK_HOST_UNEQUAL_SERVICE_HOST);
  }
  checkExistingUGService(config.getUserGroupServiceName());
  validateFilterConfig((CasAuthenticationProperties)config);
}
