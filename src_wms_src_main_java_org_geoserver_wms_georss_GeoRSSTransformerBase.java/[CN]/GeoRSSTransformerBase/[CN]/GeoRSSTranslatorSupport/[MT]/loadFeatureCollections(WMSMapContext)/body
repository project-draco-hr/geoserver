{
  ReferencedEnvelope mapArea=map.getAreaOfInterest();
  CoordinateReferenceSystem wgs84=null;
  FilterFactory ff=CommonFactoryFinder.getFilterFactory(GeoTools.getDefaultHints());
  try {
    wgs84=CRS.decode("EPSG:4326");
  }
 catch (  Exception e) {
    throw (IOException)(new IOException("Unable to decode WGS84...").initCause(e));
  }
  List featureCollections=new ArrayList();
  for (  Layer layer : map.layers()) {
    Query query=layer.getQuery();
    SimpleFeatureCollection features=null;
    try {
      SimpleFeatureSource source;
      source=(SimpleFeatureSource)layer.getFeatureSource();
      GeometryDescriptor gd=source.getSchema().getGeometryDescriptor();
      if (gd == null) {
        features=source.getFeatures(query);
      }
 else {
        ReferencedEnvelope env=new ReferencedEnvelope(mapArea);
        CoordinateReferenceSystem sourceCRS=gd.getCoordinateReferenceSystem();
        if (sourceCRS != null && !CRS.equalsIgnoreMetadata(mapArea.getCoordinateReferenceSystem(),sourceCRS)) {
          env=env.transform(sourceCRS,true);
        }
        Filter original=query.getFilter();
        Filter bbox=ff.bbox(gd.getLocalName(),env.getMinX(),env.getMinY(),env.getMaxX(),env.getMaxY(),null);
        query.setFilter(ff.and(original,bbox));
        features=source.getFeatures(query);
        if (sourceCRS != null && !CRS.equalsIgnoreMetadata(wgs84,sourceCRS)) {
          ReprojectingFeatureCollection coll=new ReprojectingFeatureCollection(features,wgs84);
          coll.setDefaultSource(sourceCRS);
          features=coll;
        }
        if (features == null)         throw new NullPointerException();
        featureCollections.add(features);
      }
    }
 catch (    Exception e) {
      String msg="Unable to encode map layer: " + layer;
      LOGGER.log(Level.SEVERE,msg,e);
    }
  }
  return featureCollections;
}
