{
  this.pfi=pfi;
  Class<? extends ProcessFactory> factoryClass=pfi.getFactoryClass();
  ProcessFactory pf=GeoServerProcessors.getProcessFactory(factoryClass,false);
  if (pf == null) {
    throw new IllegalArgumentException("Failed to locate the process factory " + factoryClass);
  }
  this.title=pf.getTitle().toString(getLocale());
  Form form=new Form("form");
  add(form);
  final FilteredProcessesProvider provider=new FilteredProcessesProvider(pfi,getLocale());
  processSelector=new GeoServerTablePanel<FilteredProcess>("selectionTable",provider,true){
    @Override protected Component getComponentForProperty(    String id,    final IModel itemModel,    Property<FilteredProcess> property){
      if (property.getName().equals("title")) {
        return new Label(id,property.getModel(itemModel));
      }
 else       if (property.getName().equals("description")) {
        return new Label(id,property.getModel(itemModel));
      }
      return null;
    }
  }
;
  processSelector.setFilterable(false);
  processSelector.setPageable(false);
  processSelector.setOutputMarkupId(true);
  List<FilteredProcess> processes=provider.getItems();
  boolean allSelected=true;
  for (int i=0; i < processes.size(); i++) {
    FilteredProcess process=processes.get(i);
    if (!pfi.getFilteredProcesses().contains(process.getName())) {
      processSelector.selectIndex(i);
    }
 else {
      allSelected=false;
    }
  }
  if (allSelected) {
    processSelector.selectAll();
  }
  form.add(processSelector);
  SubmitLink apply=new SubmitLink("apply"){
    @Override public void onSubmit(){
      super.onSubmit();
      pfi.getFilteredProcesses().clear();
      pfi.getFilteredProcesses().addAll(getFilteredProcesses());
      setResponsePage(origin);
    }
  }
;
  form.add(apply);
  Link cancel=new Link("cancel"){
    @Override public void onClick(){
      setResponsePage(origin);
    }
  }
;
  form.add(cancel);
}
