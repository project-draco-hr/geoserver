{
  final Logger log=createMock("log",Logger.class);
  Description desc=createMock("desc",Description.class);
  Statement base=createMock("base",Statement.class);
  expect(log.getLevel()).andReturn(Level.OFF);
  log.setLevel(Level.FINE);
  expectLastCall().once();
  final Capture<Handler> handlerCap=new Capture<>();
  log.addHandler(capture(handlerCap));
  expectLastCall().once();
  base.evaluate();
  expectLastCall().andAnswer(new IAnswer<Void>(){
    @Override public Void answer() throws Throwable {
      verify(log);
      reset(log);
      log.removeHandler(handlerCap.getValue());
      expectLastCall().once();
      log.setLevel(Level.OFF);
      expectLastCall().once();
      replay(log);
      return null;
    }
  }
);
  replay(log,desc,base);
  LoggerRule rule=new LoggerRule(log,Level.FINE);
  Statement s=rule.apply(base,desc);
  s.evaluate();
  verify(log,desc,base);
}
