{
  return new AjaxSubmitLink("save",paramsForm){
    @Override protected void onError(    AjaxRequestTarget target,    Form<?> paramsForm){
      super.onError(target,paramsForm);
      target.addComponent(paramsForm);
    }
    @Override protected void onSubmit(    AjaxRequestTarget target,    Form<?> paramsForm){
      WmsEoCreateGroupModel model=(WmsEoCreateGroupModel)paramsForm.getModelObject();
      if (getCatalog().getLayerGroupByName(model.getWorkspace(),model.getName()) != null) {
        paramsForm.error("Layer Group '" + model.getName() + "' already exists in workspace '"+ model.getWorkspace().getName()+ "'");
        target.addComponent(paramsForm);
        return;
      }
      String groupName=model.getName();
      String outlineLayerName=getParameter(model.getOutlineLayerName(),groupName + " " + OUTLINE.getObject());
      String productLayerName=getParameter(model.getProductLayerName(),groupName + " " + PRODUCT.getObject());
      String bandLayerName=getParameter(model.getBandLayerName(),groupName + " " + BAND.getObject());
      String bitmaskLayerName=getParameter(model.getBitmaskLayerName(),groupName + " " + BITMASK.getObject());
      String parameterLayerName=getParameter(model.getParameterLayerName(),groupName + " " + GEOPHYSICAL_PARAMETER.getObject());
      EoCatalogBuilder builder=new EoCatalogBuilder(getCatalog());
      try {
        LayerGroupInfo eoGroup=builder.createEoLayerGroup(model.getWorkspace(),groupName,outlineLayerName,productLayerName,model.getProductUrl(),bandLayerName,model.getBandUrl(),bitmaskLayerName,model.getBitmaskUrl(),parameterLayerName,model.getParameterUrl());
        Map<String,String> parameters=new HashMap<String,String>();
        parameters.put(LayerGroupEditPage.WORKSPACE,model.getWorkspace().getName());
        parameters.put(LayerGroupEditPage.GROUP,eoGroup.getName());
        setResponsePage(new LayerGroupEditPage(new PageParameters(parameters)));
      }
 catch (      RuntimeException e) {
        if (LOGGER.isLoggable(Level.INFO)) {
          LOGGER.log(Level.INFO,e.getMessage(),e);
        }
        paramsForm.error(e.getMessage());
        target.addComponent(paramsForm);
      }
catch (      Exception e) {
        if (LOGGER.isLoggable(Level.INFO)) {
          LOGGER.log(Level.INFO,e.getMessage(),e);
        }
        paramsForm.error(e.getMessage());
        target.addComponent(paramsForm);
      }
    }
  }
;
}
