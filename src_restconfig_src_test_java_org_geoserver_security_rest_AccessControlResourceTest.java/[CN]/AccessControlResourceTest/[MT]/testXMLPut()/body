{
  String[][] rules=getDefaultLayerRules();
  String[][] toBeModified={rules[0],{"ws.layer1.r",TEST_ROLELIST}};
  assertEquals(409,putAsServletResponse(DATA_URI_XML,createXMLBody(toBeModified),"text/xml").getStatus());
  Document dom=getAsDOM(DATA_URI_XML);
  checkXMLResponse(dom,rules);
  String[][] toBeModified2={{rules[0][0],TEST_ROLE1},{rules[1][0],TEST_ROLELIST}};
  assertEquals(200,putAsServletResponse(DATA_URI_XML,createXMLBody(toBeModified2),"text/xml").getStatus());
  dom=getAsDOM(DATA_URI_XML);
  checkXMLResponse(dom,toBeModified2);
  rules=getDefaultServiceRules();
  toBeModified2=new String[][]{{"ws.*",TEST_ROLE1},{"ws2.GetFeature",TEST_ROLELIST}};
  assertEquals(409,putAsServletResponse(SERVICE_URI_XML,createXMLBody(toBeModified2),"text/xml").getStatus());
  dom=getAsDOM(SERVICE_URI_XML);
  checkXMLResponse(dom,rules);
  assertEquals(200,putAsServletResponse(SERVICE_URI_XML,createXMLBody(new String[][]{}),"text/xml").getStatus());
  rules=getDefaultRestRules();
  toBeModified=new String[][]{rules[0],{"/myworkspace/**:GET",TEST_ROLELIST}};
  assertEquals(409,putAsServletResponse(REST_URI_XML,createXMLBody(toBeModified),"text/xml").getStatus());
  dom=getAsDOM(REST_URI_XML);
  checkXMLResponse(dom,rules);
  toBeModified2=new String[][]{{rules[0][0],TEST_ROLE1},{rules[1][0],TEST_ROLELIST}};
  assertEquals(200,putAsServletResponse(REST_URI_XML,createXMLBody(toBeModified2),"text/xml").getStatus());
  dom=getAsDOM(REST_URI_XML);
  checkXMLResponse(dom,toBeModified2);
}
