{
  String[][] rules=getDefaultLayerRules();
  String[][] toBeAdded={rules[0],{"ws.layer1.r",TEST_ROLELIST}};
  assertEquals(409,postAsServletResponse(DATA_URI_JSON,createJSONBody(toBeAdded),"text/json").getStatusCode());
  JSONObject json=(JSONObject)getAsJSON(DATA_URI_JSON);
  checkJSONResponse(json,rules);
  String[][] toBeAdded2={{"ws.layer1.w",TEST_ROLE1},{"ws.layer1.r",TEST_ROLELIST}};
  String[][] expected={rules[0],rules[1],toBeAdded2[0],toBeAdded2[1]};
  assertEquals(200,postAsServletResponse(DATA_URI_JSON,createJSONBody(toBeAdded2),"text/json").getStatusCode());
  json=(JSONObject)getAsJSON(DATA_URI_JSON);
  checkJSONResponse(json,expected);
  rules=getDefaultServiceRules();
  toBeAdded2=new String[][]{{"ws.*",TEST_ROLE1},{"ws2.GetFeature",TEST_ROLELIST}};
  assertEquals(200,postAsServletResponse(SERVICE_URI_JSON,createJSONBody(toBeAdded2),"text/json").getStatusCode());
  expected=new String[][]{rules[0],toBeAdded2[0],toBeAdded2[1]};
  json=(JSONObject)getAsJSON(SERVICE_URI_JSON);
  checkJSONResponse(json,expected);
  assertEquals(409,postAsServletResponse(SERVICE_URI_JSON,createJSONBody(toBeAdded2),"text/json").getStatusCode());
  rules=getDefaultRestRules();
  toBeAdded=new String[][]{rules[0],{"/myworkspace/**:GET",TEST_ROLELIST}};
  assertEquals(409,postAsServletResponse(REST_URI_JSON,createJSONBody(toBeAdded),"text/json").getStatusCode());
  json=(JSONObject)getAsJSON(REST_URI_JSON);
  checkJSONResponse(json,rules);
  toBeAdded2=new String[][]{{"/myworkspace/**:PUT,POST",TEST_ROLE1},{"/myworkspace/**:GET",TEST_ROLELIST}};
  expected=new String[][]{rules[0],rules[1],toBeAdded2[0],toBeAdded2[1]};
  assertEquals(200,postAsServletResponse(REST_URI_JSON,createJSONBody(toBeAdded2),"text/json").getStatusCode());
  json=(JSONObject)getAsJSON(REST_URI_JSON);
  checkJSONResponse(json,expected);
}
