{
  GetMapRequest request=mapContent.getRequest();
  if (NetworkLinkMapOutputFormat.KML_MIME_TYPE.equals(request.getFormat())) {
    request.setFormat(KMLMapOutputFormat.MIME_TYPE);
  }
 else {
    request.setFormat(KMZMapOutputFormat.MIME_TYPE);
  }
  Kml kml=new Kml();
  Document document=kml.createAndSetDocument();
  String kmltitle=(String)request.getFormatOptions().get("kmltitle");
  Folder folder=document.createAndAddFolder();
  folder.setName(kmltitle);
  LookAtDecoratorFactory lookAtFactory=new LookAtDecoratorFactory();
  LookAtOptions lookAtOptions=new LookAtOptions(request.getFormatOptions());
  List<ReferencedEnvelope> layerBounds=new ArrayList<ReferencedEnvelope>(mapContent.layers().size());
  ReferencedEnvelope aggregatedBounds=computePerLayerQueryBounds(mapContent,layerBounds,null);
  if (aggregatedBounds != null) {
    LookAt la=lookAtFactory.buildLookAt(aggregatedBounds,lookAtOptions,false);
    folder.setAbstractView(la);
  }
  final List<MapLayerInfo> layers=request.getLayers();
  final List<Style> styles=request.getStyles();
  for (int i=0; i < layers.size(); i++) {
    MapLayerInfo layerInfo=layers.get(i);
    NetworkLink nl=folder.createAndAddNetworkLink();
    nl.setName(layerInfo.getName());
    nl.setVisibility(true);
    nl.setOpen(true);
    ReferencedEnvelope latLongBoundingBox=layerBounds.get(i);
    if (latLongBoundingBox != null) {
      LookAt la=lookAtFactory.buildLookAt(latLongBoundingBox,lookAtOptions,false);
      nl.setAbstractView(la);
    }
    request.setBbox(null);
    String style=i < styles.size() ? styles.get(i).getName() : null;
    String href=WMSRequests.getGetMapUrl(request,layers.get(i).getName(),i,style,null,null);
    try {
      href=URLDecoder.decode(href,"UTF-8");
    }
 catch (    UnsupportedEncodingException e) {
      throw new RuntimeException(e);
    }
    Link url=nl.createAndSetUrl();
    url.setHref(href);
    url.setViewRefreshMode(ViewRefreshMode.ON_STOP);
    url.setViewRefreshTime(1);
  }
  boolean kmz=request.getFormat().equals(KMZ_MIME_TYPE) || request.getFormat().equals(KMZMapOutputFormat.MIME_TYPE);
  String mime=kmz ? KMZMapOutputFormat.MIME_TYPE : KMLMapOutputFormat.MIME_TYPE;
  KMLMap map=new KMLMap(mapContent,null,kml,mime);
  map.setContentDispositionHeader(mapContent,".kml");
  return map;
}
