{
  Catalog cat=createMock(Catalog.class);
  cat.addListener((CatalogListener)anyObject());
  expectLastCall();
  NamespaceInfo ns=createNiceMock(NamespaceInfo.class);
  expect(ns.getPrefix()).andReturn("foo");
  expect(ns.getURI()).andReturn("http://foo.org");
  WorkspaceInfo ws=createNiceMock(WorkspaceInfo.class);
  expect(cat.getWorkspaceByName("foo")).andReturn(ws);
  DataStoreInfo ds=createNiceMock(DataStoreInfo.class);
  expect(cat.getDataStoresByWorkspace(ws)).andReturn(Arrays.asList(ds));
  HashMap params=new HashMap();
  params.put("namespace","http://bar.org");
  expect(ds.getConnectionParameters()).andReturn(params).anyTimes();
  cat.save(hasNamespace("http://foo.org"));
  expectLastCall();
  CatalogPostModifyEvent e=createNiceMock(CatalogPostModifyEvent.class);
  expect(e.getSource()).andReturn(ns).anyTimes();
  replay(ds,ws,ns,e,cat);
  new NamespaceWorkspaceConsistencyListener(cat).handlePostModifyEvent(e);
  verify(cat);
}
