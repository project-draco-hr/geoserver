{
  start("gmlcov:metadata");
  start("gmlcov:Extension");
  if (timeHelper != null) {
    start("wcsgs:TimeDomain");
    DimensionPresentation presentation=timeHelper.getPresentation();
switch (presentation) {
case CONTINUOUS_INTERVAL:
      String id0=timeHelper.getCoverageId() + "_tp_0";
    encodeTimePeriod(timeHelper.getBeginPosition(),timeHelper.getEndPosition(),id0,null,null);
  break;
case DISCRETE_INTERVAL:
String id1=timeHelper.getCoverageId() + "_tp_0";
encodeTimePeriod(timeHelper.getBeginPosition(),timeHelper.getEndPosition(),id1,timeHelper.getResolutionUnit(),timeHelper.getResolutionValue());
break;
default :
TreeSet<Object> domain=timeHelper.getTimeDomain();
int i=0;
for (Object item : domain) {
final AttributesImpl atts=new AttributesImpl();
atts.addAttribute("","gml:id","gml:id","",timeHelper.getCoverageId() + "_td_" + i);
if (item instanceof Date) {
start("gml:TimeInstant",atts);
element("gml:timePosition",timeHelper.format((Date)item));
end("gml:TimeInstant");
}
 else if (item instanceof DateRange) {
DateRange range=(DateRange)item;
start("gml:TimePeriod",atts);
element("gml:beginPosition",timeHelper.format(range.getMinValue()));
element("gml:endPosition",timeHelper.format(range.getMaxValue()));
end("gml:TimePeriod");
}
i++;
}
break;
}
end("wcsgs:TimeDomain");
}
end("gmlcov:Extension");
end("gmlcov:metadata");
}
