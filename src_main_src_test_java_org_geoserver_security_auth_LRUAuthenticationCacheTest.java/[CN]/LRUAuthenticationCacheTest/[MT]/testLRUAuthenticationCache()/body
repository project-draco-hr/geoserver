{
  LRUAuthenticationCacheImpl cache=new LRUAuthenticationCacheImpl(5,10,3);
  fillCache(cache);
  UsernamePasswordAuthenticationToken token;
  assertNull(cache.get("filtera","key1"));
  assertNotNull(token=(UsernamePasswordAuthenticationToken)cache.get("filtera","key2"));
  assertEquals("user2",token.getPrincipal());
  assertNotNull(token=(UsernamePasswordAuthenticationToken)cache.get("filterb","key3"));
  assertEquals("user3",token.getPrincipal());
  assertNotNull(token=(UsernamePasswordAuthenticationToken)cache.get("filterb","key4"));
  assertEquals("user4",token.getPrincipal());
  cache=new LRUAuthenticationCacheImpl(5,10,4);
  fillCache(cache);
  cache.removeAll();
  assertNull(cache.get("filtera","key1"));
  assertNull(cache.get("filtera","key2"));
  assertNull(cache.get("filterb","key3"));
  assertNull(cache.get("filterb","key4"));
  cache=new LRUAuthenticationCacheImpl(5,10,4);
  fillCache(cache);
  cache.removeAll("filtera");
  assertNull(cache.get("filtera","key1"));
  assertNull(cache.get("filtera","key2"));
  assertNotNull(cache.get("filterb","key3"));
  assertNotNull(cache.get("filterb","key4"));
  cache=new LRUAuthenticationCacheImpl(5,10,4);
  fillCache(cache);
  cache.remove("filtera","key1");
  assertNull(cache.get("filtera","key1"));
  assertNotNull(cache.get("filtera","key2"));
  assertNotNull(cache.get("filterb","key3"));
  assertNotNull(cache.get("filterb","key4"));
  cache=new LRUAuthenticationCacheImpl(5,10,4);
  fillCache(cache);
  cache.removeAll("filterz");
  cache.remove("filterz","key999");
  assertNotNull(cache.get("filtera","key1"));
  assertNotNull(cache.get("filtera","key2"));
  assertNotNull(cache.get("filterb","key3"));
  assertNotNull(cache.get("filterb","key4"));
  cache=new LRUAuthenticationCacheImpl(5,0,4);
  fillCache(cache);
  waitForMilliSecs(10);
  assertNull(cache.get("filtera","key1"));
  assertNull(cache.get("filtera","key2"));
  assertNull(cache.get("filterb","key3"));
  assertNull(cache.get("filterb","key4"));
  cache=new LRUAuthenticationCacheImpl(0,10,4);
  fillCache(cache);
  waitForMilliSecs(10);
  assertNull(cache.get("filtera","key1"));
  assertNull(cache.get("filtera","key2"));
  assertNull(cache.get("filterb","key3"));
  assertNull(cache.get("filterb","key4"));
  cache=new LRUAuthenticationCacheImpl(1,10,4);
  fillCache(cache);
  waitForMilliSecs(1);
  assertNotNull(cache.get("filtera","key1"));
  assertNotNull(cache.get("filtera","key2"));
  assertNotNull(cache.get("filterb","key3"));
  assertNotNull(cache.get("filterb","key4"));
  waitForMilliSecs(1500);
  assertNull(cache.get("filtera","key1"));
  assertNull(cache.get("filtera","key2"));
  assertNull(cache.get("filterb","key3"));
  assertNull(cache.get("filterb","key4"));
}
