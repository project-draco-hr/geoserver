{
  File temp=null;
  try {
    if (validateSchema) {
      temp=File.createTempFile("getMapPost","xml");
      FileOutputStream fos=new FileOutputStream(temp);
      BufferedOutputStream out=new BufferedOutputStream(fos);
      int c;
      while (-1 != (c=xml.read())) {
        out.write(c);
      }
      xml.close();
      out.flush();
      out.close();
      xml=new BufferedReader(new FileReader(temp));
    }
    javax.xml.parsers.DocumentBuilderFactory dbf=javax.xml.parsers.DocumentBuilderFactory.newInstance();
    dbf.setExpandEntityReferences(false);
    dbf.setValidating(false);
    dbf.setNamespaceAware(true);
    javax.xml.parsers.DocumentBuilder db=dbf.newDocumentBuilder();
    EntityResolver entityResolver=wms.getCatalog().getResourcePool().getEntityResolver();
    if (entityResolver != null) {
      db.setEntityResolver(entityResolver);
    }
    InputSource input=new InputSource(xml);
    org.w3c.dom.Document dom=db.parse(input);
    SLDParser sldParser=new SLDParser(styleFactory);
    Node rootNode=dom.getDocumentElement();
    Node nodeGetMap=rootNode;
    if (!(nodeNameEqual(nodeGetMap,"getmap"))) {
      if (nodeNameEqual(nodeGetMap,"StyledLayerDescriptor")) {
        if (validateSchema) {
          validateSchemaSLD(temp,getMapRequest);
        }
        handlePostGet(rootNode,sldParser,getMapRequest);
        return;
      }
      throw new Exception("GetMap XML parser - start node isnt 'GetMap' or 'StyledLayerDescriptor' tag");
    }
    if (validateSchema) {
      validateSchemaGETMAP(temp,getMapRequest);
    }
    NamedNodeMap atts=nodeGetMap.getAttributes();
    Node wmsVersion=atts.getNamedItem("version");
    if (wmsVersion == null) {
      throw new Exception("GetMap XML parser - couldnt find attribute 'version' in GetMap tag");
    }
    getMapRequest.setVersion(wmsVersion.getNodeValue());
    parseBBox(getMapRequest,nodeGetMap);
    StyledLayerDescriptor sld=sldParser.parseDescriptor(getNode(rootNode,"StyledLayerDescriptor"));
    processStyles(getMapRequest,sld);
    parseXMLOutput(nodeGetMap,getMapRequest);
    getMapRequest.setExceptions(getNodeValue(nodeGetMap,"Exceptions"));
  }
  finally {
    if (temp != null) {
      temp.delete();
    }
  }
}
