{
  super(id,model);
  final Component defaultValue;
  defaultValue=new TextField<String>("defaultValue",new PropertyModel<String>(model,"defaultValue"));
  add(defaultValue);
  final TextArea<List<Float>> values;
  values=new TextArea<List<Float>>("values",new PropertyModel<List<Float>>(model,"values")){
    /** 
 * serialVersionUID 
 */
    private static final long serialVersionUID=1L;
    @SuppressWarnings("unchecked") @Override public <S>IConverter<S> getConverter(    Class<S> type){
      if (List.class.isAssignableFrom(type)) {
        return (IConverter<S>)CONVERT;
      }
      return super.getConverter(type);
    }
  }
;
  values.setConvertEmptyInputStringToNull(false);
  add(values);
  final Component threshold;
  threshold=new TextField<Float>("threshold",new PropertyModel<Float>(model,"threshold")){
    /** 
 * serialVersionUID 
 */
    private static final long serialVersionUID=1L;
    @SuppressWarnings("unchecked") @Override public <S>IConverter<S> getConverter(    Class<S> type){
      if (Float.class.isAssignableFrom(type)) {
        return (IConverter<S>)FLOAT;
      }
      return super.getConverter(type);
    }
  }
;
  add(threshold);
}
