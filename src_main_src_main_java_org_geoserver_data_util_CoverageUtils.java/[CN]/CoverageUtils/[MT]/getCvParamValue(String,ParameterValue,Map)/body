{
  Object value=null;
  try {
    if (key.equalsIgnoreCase("crs")) {
      if ((params.get(key) != null) && (((String)params.get(key)).length() > 0)) {
        value=CRS.parseWKT((String)params.get(key));
      }
 else {
        LOGGER.info("Unable to find a crs for the coverage param, using EPSG:4326");
        value=CRS.decode("EPSG:4326");
      }
    }
 else     if (key.equalsIgnoreCase("envelope")) {
      if ((params.get(key) != null) && (((String)params.get(key)).length() > 0)) {
        String tmp=(String)params.get(key);
        if ((tmp.indexOf("[") > 0) && (tmp.indexOf("]") > tmp.indexOf("["))) {
          tmp=tmp.substring(tmp.indexOf("[") + 1,tmp.indexOf("]")).trim();
          tmp=tmp.replaceAll(",","");
          String[] strCoords=tmp.split(" ");
          double[] coords=new double[strCoords.length];
          if (strCoords.length == 4) {
            for (int iT=0; iT < 4; iT++) {
              coords[iT]=Double.parseDouble(strCoords[iT].trim());
            }
            value=(org.opengis.geometry.Envelope)new GeneralEnvelope(new double[]{coords[0],coords[1]},new double[]{coords[2],coords[3]});
          }
        }
      }
    }
 else     if (key.equalsIgnoreCase(AbstractGridFormat.READ_GRIDGEOMETRY2D.getName().toString())) {
      if ((params.get(key) != null) && params.get(key) instanceof String && (((String)params.get(key)).length() > 0)) {
        String tmp=(String)params.get(key);
        if ((tmp.indexOf("[") > 0) && (tmp.indexOf("]") > tmp.indexOf("["))) {
          tmp=tmp.substring(tmp.indexOf("[") + 1,tmp.indexOf("]")).trim();
          tmp=tmp.replaceAll(",","");
          String[] strCoords=tmp.split(" ");
          double[] coords=new double[strCoords.length];
          if (strCoords.length == 4) {
            for (int iT=0; iT < 4; iT++) {
              coords[iT]=Double.parseDouble(strCoords[iT].trim());
            }
            value=(org.opengis.geometry.Envelope)new GeneralEnvelope(new double[]{coords[0],coords[1]},new double[]{coords[2],coords[3]});
          }
        }
      }
 else       if ((params.get(key) != null) && params.get(key) instanceof GeneralGridGeometry) {
        value=params.get(key);
      }
    }
 else     if (key.equalsIgnoreCase("InputTransparentColor") || key.equalsIgnoreCase("OutputTransparentColor")) {
      if (params.get(key) != null) {
        value=Color.decode((String)params.get(key));
      }
 else {
        Class[] clArray={Color.class};
        Object[] inArray={params.get(key)};
        value=param.getValue().getClass().getConstructor(clArray).newInstance(inArray);
      }
    }
 else     if (key.equalsIgnoreCase("BackgroundValues")) {
      if (params.get(key) != null) {
        String temp=(String)params.get(key);
        String[] elements=temp.split(",");
        final double[] backgroundValues=new double[elements.length];
        for (int i=0; i < elements.length; i++)         backgroundValues[i]=Double.valueOf(elements[i]);
        value=backgroundValues;
      }
    }
 else     if (key.equalsIgnoreCase("InputImageThresholdValue")) {
      if (params.get(key) != null) {
        String temp=(String)params.get(key);
        value=Double.valueOf(temp);
      }
    }
 else {
      Class[] clArray={String.class};
      Object[] inArray={params.get(key)};
      value=param.getValue().getClass().getConstructor(clArray).newInstance(inArray);
    }
  }
 catch (  Exception e) {
    value=param.getValue();
  }
  return value;
}
