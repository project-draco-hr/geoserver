{
  if (task.getState() == ImportTask.State.COMPLETE) {
    return true;
  }
  DataFormat format=task.getData().getFormat();
  if (format == null) {
    task.setState(State.NO_FORMAT);
    return false;
  }
  if (task.getStore() == null) {
    task.setError(new Exception("No target store for task"));
    task.setState(State.ERROR);
    return false;
  }
  if (!formatMatchesStore(format,task.getStore())) {
    String msg=task.getStore() instanceof DataStoreInfo ? "Unable to import raster data into vector store" : "Unable to import vector data into raster store";
    task.setError(new Exception(msg));
    task.setState(State.BAD_FORMAT);
    return false;
  }
  if (task.getLayer() == null || task.getLayer().getResource() == null) {
    task.setError(new Exception("Task has no layer configuration"));
    task.setState(State.ERROR);
    return false;
  }
  LayerInfo l=task.getLayer();
  ResourceInfo r=l.getResource();
  r.setStore(task.getStore());
  r.setNamespace(catalog.getNamespaceByPrefix(task.getStore().getWorkspace().getName()));
  if (l.getDefaultStyle() == null) {
    try {
      StyleInfo style=null;
      if (r instanceof FeatureTypeInfo) {
        FeatureType featureType=(FeatureType)task.getMetadata().get(FeatureType.class);
        if (featureType != null) {
          style=styleGen.createStyle((FeatureTypeInfo)r,featureType);
        }
 else {
          throw new RuntimeException("Unable to compute style");
        }
      }
 else       if (r instanceof CoverageInfo) {
        style=styleGen.createStyle((CoverageInfo)r);
      }
 else {
        throw new RuntimeException("Unknown resource type :" + r.getClass());
      }
      l.setDefaultStyle(style);
    }
 catch (    Exception e) {
      task.setError(e);
      task.setState(ImportTask.State.ERROR);
      return false;
    }
  }
  if (r.getSRS() == null) {
    task.setState(ImportTask.State.NO_CRS);
    return false;
  }
 else   if (task.getState() == ImportTask.State.NO_CRS) {
    try {
      computeLatLonBoundingBox(task,false);
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,"Error computing lat long bounding box",e);
      task.setState(ImportTask.State.ERROR);
      task.setError(e);
      return false;
    }
    task.getLayer().getResource().setProjectionPolicy(ProjectionPolicy.FORCE_DECLARED);
  }
  if (r.getNativeBoundingBox() == null) {
    task.setState(ImportTask.State.NO_BOUNDS);
    return false;
  }
  task.setState(ImportTask.State.READY);
  return true;
}
