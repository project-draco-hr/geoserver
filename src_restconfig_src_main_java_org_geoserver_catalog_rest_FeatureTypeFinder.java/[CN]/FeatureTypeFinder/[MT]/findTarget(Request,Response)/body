{
  String ws=getAttribute(request,"workspace");
  String ds=getAttribute(request,"datastore");
  String ft=getAttribute(request,"featuretype");
  if (ws != null && catalog.getWorkspaceByName(ws) == null) {
    throw new RestletException("No such workspace: " + ws,Status.CLIENT_ERROR_NOT_FOUND);
  }
  if (ds != null && catalog.getDataStoreByName(ws,ds) == null) {
    throw new RestletException("No such datastore: " + ws + ","+ ds,Status.CLIENT_ERROR_NOT_FOUND);
  }
  if (ft != null) {
    if (ds != null && catalog.getFeatureTypeByDataStore(catalog.getDataStoreByName(ws,ds),ft) == null) {
      throw new RestletException("No such feature type: " + ws + ","+ ds+ ","+ ft,Status.CLIENT_ERROR_NOT_FOUND);
    }
 else {
      NamespaceInfo ns=catalog.getNamespaceByPrefix(ws);
      if (ns == null || catalog.getFeatureTypeByName(ns,ft) == null) {
        throw new RestletException("No such feature type: " + ws + ","+ ft,Status.CLIENT_ERROR_NOT_FOUND);
      }
    }
  }
 else {
    Form form=request.getResourceRef().getQueryAsForm();
    String list=form.getFirstValue("list");
    if ("available".equalsIgnoreCase(list) || "available_with_geom".equalsIgnoreCase(list)) {
      return new AvailableFeatureTypeResource(null,request,response,catalog);
    }
    if (request.getMethod() == Method.GET) {
      return new FeatureTypeListResource(getContext(),request,response,catalog);
    }
  }
  return new FeatureTypeResource(null,request,response,catalog);
}
