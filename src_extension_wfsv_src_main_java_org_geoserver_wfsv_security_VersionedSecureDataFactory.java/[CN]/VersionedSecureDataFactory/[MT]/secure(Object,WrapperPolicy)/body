{
  if (object == null)   return null;
  Class clazz=object.getClass();
  if (VersioningDataStore.class.isAssignableFrom(clazz)) {
    return new ReadOnlyVersioningDataStore((VersioningDataStore)object,policy);
  }
  if (VersioningFeatureSource.class.isAssignableFrom(clazz)) {
    if (policy.response != Response.CHALLENGE) {
      return new ReadOnlyVersioningFeatureSource((VersioningFeatureSource)object,policy);
    }
 else     if (VersioningFeatureLocking.class.isAssignableFrom(clazz)) {
      return new ReadOnlyVersioningFeatureLocking((VersioningFeatureLocking)object,policy);
    }
 else     if (VersioningFeatureStore.class.isAssignableFrom(clazz)) {
      return new ReadOnlyVersioningFeatureStore((VersioningFeatureStore)object,policy);
    }
 else     if (VersioningFeatureSource.class.isAssignableFrom(clazz)) {
      return new ReadOnlyVersioningFeatureSource((VersioningFeatureSource)object,policy);
    }
  }
  throw new IllegalArgumentException("Cannot wrap objects of class " + clazz);
}
