{
  Catalog catalog=getCatalog();
  LayerGroupInfo singleGroup=createLakesPlacesLayerGroup(catalog,"singleGroup",LayerGroupInfo.Mode.SINGLE,null);
  try {
    LayerGroupInfo namedGroup=createLakesPlacesLayerGroup(catalog,"namedGroup",LayerGroupInfo.Mode.NAMED,null);
    try {
      LayerGroupInfo eoGroup=createLakesPlacesLayerGroup(catalog,"eoGroup",LayerGroupInfo.Mode.EO,catalog.getLayerByName(getLayerId(MockData.LAKES)));
      try {
        String requestURL="wms/animate?BBOX=0.0000,-0.0020,0.0035,0.0010&width=512&aparam=layers&avalues=" + singleGroup.getName() + ","+ namedGroup.getName()+ ","+ eoGroup.getName();
        MockHttpServletResponse resp=getAsServletResponse(requestURL);
        assertEquals("image/gif",resp.getContentType());
        ByteArrayInputStream bis=getBinaryInputStream(resp);
        ImageInputStream iis=ImageIO.createImageInputStream(bis);
        ImageReader reader=ImageIO.getImageReadersBySuffix("gif").next();
        reader.setInput(iis);
        assertEquals(3,reader.getNumImages(true));
        BufferedImage image=reader.read(0);
        assertPixel(image,300,270,Color.WHITE);
        assertPixel(image,380,30,COLOR_PLACES_GRAY);
        assertPixel(image,180,350,COLOR_LAKES_BLUE);
        image=reader.read(1);
        assertPixel(image,300,270,Color.WHITE);
        assertPixel(image,380,30,COLOR_PLACES_GRAY);
        assertPixel(image,180,350,COLOR_LAKES_BLUE);
        image=reader.read(2);
        assertPixel(image,300,270,Color.WHITE);
        assertPixel(image,380,30,Color.WHITE);
        assertPixel(image,180,350,COLOR_LAKES_BLUE);
      }
  finally {
        catalog.remove(eoGroup);
      }
    }
  finally {
      catalog.remove(namedGroup);
    }
  }
  finally {
    catalog.remove(singleGroup);
  }
}
