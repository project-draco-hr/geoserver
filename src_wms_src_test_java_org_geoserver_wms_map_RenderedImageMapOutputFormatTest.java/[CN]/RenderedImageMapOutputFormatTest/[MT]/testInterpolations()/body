{
  final Catalog catalog=getCatalog();
  CoverageInfo coverageInfo=catalog.getCoverageByName(MockData.TASMANIA_DEM.getNamespaceURI(),MockData.TASMANIA_DEM.getLocalPart());
  Envelope env=coverageInfo.boundingBox();
  double shift=env.getWidth() / 6;
  env=new Envelope(env.getMinX() - shift,env.getMaxX() + shift,env.getMinY() - shift,env.getMaxY() + shift);
  GetMapRequest request=new GetMapRequest();
  WMSMapContent map=new WMSMapContent();
  int w=400;
  int h=(int)Math.round((env.getHeight() * w) / env.getWidth());
  map.setMapWidth(w);
  map.setMapHeight(h);
  map.setBgColor(BG_COLOR);
  map.setTransparent(true);
  map.setRequest(request);
  addRasterToMap(map,MockData.TASMANIA_DEM);
  map.getViewport().setBounds(new ReferencedEnvelope(env,DefaultGeographicCRS.WGS84));
  request.setInterpolations(Arrays.asList(Interpolation.getInstance(Interpolation.INTERP_NEAREST)));
  request.setFormat(getMapFormat());
  RenderedImageMap imageMap=this.rasterMapProducer.produceMap(map);
  RenderedOp op=(RenderedOp)imageMap.getImage();
  BufferedImage imageNearest=op.getAsBufferedImage();
  imageMap.dispose();
  assertNotBlank("testInterpolationsNearest",imageNearest);
  request=new GetMapRequest();
  map=new WMSMapContent();
  map.setMapWidth(w);
  map.setMapHeight(h);
  map.setBgColor(BG_COLOR);
  map.setTransparent(true);
  map.setRequest(request);
  addRasterToMap(map,MockData.TASMANIA_DEM);
  map.getViewport().setBounds(new ReferencedEnvelope(env,DefaultGeographicCRS.WGS84));
  request.setInterpolations(Arrays.asList(Interpolation.getInstance(Interpolation.INTERP_BICUBIC)));
  request.setFormat(getMapFormat());
  imageMap=this.rasterMapProducer.produceMap(map);
  op=(RenderedOp)imageMap.getImage();
  BufferedImage imageBicubic=op.getAsBufferedImage();
  imageMap.dispose();
  assertNotBlank("testInterpolationsBicubic",imageBicubic);
  assertNotEquals(getPixelColor(imageNearest,200,200).getRGB(),getPixelColor(imageBicubic,200,200).getRGB());
  assertNotEquals(getPixelColor(imageNearest,300,300).getRGB(),getPixelColor(imageBicubic,300,300).getRGB());
}
