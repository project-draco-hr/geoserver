{
  Catalog catalog=getCatalog();
  Style style=catalog.getStyleByName("Default").getStyle();
  FeatureTypeInfo typeInfo=catalog.getFeatureTypeByName(MockData.LAKES.getNamespaceURI(),MockData.LAKES.getLocalPart());
  Envelope env=typeInfo.getFeatureSource(null,null).getBounds();
  env.expandToInclude(fSource.getBounds());
  int w=400;
  int h=(int)Math.round((env.getHeight() * w) / env.getWidth());
  double shift=env.getWidth() / 6;
  env=new Envelope(env.getMinX() - shift,env.getMaxX() + shift,env.getMinY() - shift,env.getMaxY() + shift);
  WMSMapContext map=new WMSMapContext();
  GetMapRequest request=new GetMapRequest();
  map.setRequest(request);
  map.addLayer(fSource,style);
  map.setAreaOfInterest(new ReferencedEnvelope(env,DefaultGeographicCRS.WGS84));
  map.setMapWidth(w);
  map.setMapHeight(h);
  map.setBgColor(BG_COLOR);
  map.setTransparent(false);
  request.setFormat(getMapFormat());
  RenderedImageMap imageMap=this.rasterMapProducer.produceMap(map);
  RenderedImage image=imageMap.getImage();
  imageMap.dispose();
  assertNotNull(image);
  String typeName=fSource.getSchema().getName().getLocalPart();
  assertNotBlank("testDefaultStyle " + typeName,(BufferedImage)image);
}
