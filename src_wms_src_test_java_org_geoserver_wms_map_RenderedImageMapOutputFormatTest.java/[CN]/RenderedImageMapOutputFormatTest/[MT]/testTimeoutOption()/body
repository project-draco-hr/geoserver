{
  Catalog catalog=getCatalog();
  GetMapRequest request=new GetMapRequest();
  final WMSMapContent map=new WMSMapContent();
  StyleInfo styleByName=catalog.getStyleByName("Default");
  Style basicStyle=styleByName.getStyle();
  SimpleFeatureSource fs=(SimpleFeatureSource)catalog.getFeatureTypeByName(MockData.BASIC_POLYGONS.getPrefix(),MockData.BASIC_POLYGONS.getLocalPart()).getFeatureSource(null,null);
  Envelope env=fs.getBounds();
  SimpleFeatureCollection features=fs.getFeatures();
  SimpleFeatureCollection delayedCollection=new DelayedFeatureCollection(features,10);
  map.addLayer(new FeatureLayer(delayedCollection,basicStyle));
  LOGGER.info("about to create map ctx for " + map.layers().size() + " layers with bounds "+ env);
  map.getViewport().setBounds(new ReferencedEnvelope(env,DefaultGeographicCRS.WGS84));
  map.setMapWidth(1000);
  map.setMapHeight(1000);
  map.setRequest(request);
  request.setFormat(getMapFormat());
  Map formatOptions=new HashMap();
  formatOptions.put("timeout",1);
  request.setFormatOptions(formatOptions);
  try {
    RenderedImageMap imageMap=this.rasterMapProducer.produceMap(map);
    fail("Timeout was not reached");
  }
 catch (  ServiceException e) {
    assertTrue(e.getMessage().startsWith("This request used more time than allowed"));
  }
  Map rawKvp=new HashMap();
  rawKvp.put("EXCEPTIONS","PARTIALMAP");
  request.setRawKvp(rawKvp);
  try {
    RenderedImageMap imageMap=this.rasterMapProducer.produceMap(map);
    fail("Timeout was not reached");
  }
 catch (  ServiceException e) {
    assertTrue(e instanceof WMSPartialMapException);
    assertTrue(e.getCause().getMessage().startsWith("This request used more time than allowed"));
    RenderedImageMap partialMap=(RenderedImageMap)((WMSPartialMapException)e).getMap();
    assertNotNull(partialMap);
    assertNotNull(partialMap.getImage());
  }
}
