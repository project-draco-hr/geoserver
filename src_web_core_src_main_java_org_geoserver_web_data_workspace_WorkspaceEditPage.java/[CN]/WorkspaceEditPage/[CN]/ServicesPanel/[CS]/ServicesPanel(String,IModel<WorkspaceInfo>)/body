{
  super(id,new Model<>());
  services=services(wsModel);
  ListView<Service> serviceList=new ListView<Service>("services",services){
    private static final long serialVersionUID=-4142739871430618450L;
    @Override protected void populateItem(    ListItem<Service> item){
      Service service=item.getModelObject();
      final Link<Service> link=new Link<Service>("link",new Model<Service>(service)){
        private static final long serialVersionUID=1111536301891090436L;
        @Override public void onClick(){
          Service s=getModelObject();
          Page page=null;
          if (s.model instanceof ExistingServiceModel) {
            PageParameters pp=new PageParameters().add("workspace",wsModel.getObject().getName());
            try {
              page=s.adminPage.getComponentClass().getConstructor(PageParameters.class).newInstance(pp);
            }
 catch (            Exception e) {
              throw new WicketRuntimeException(e);
            }
          }
 else {
            try {
              page=s.adminPage.getComponentClass().getConstructor(s.adminPage.getServiceClass()).newInstance(s.model.getObject());
            }
 catch (            Exception e) {
              throw new WicketRuntimeException(e);
            }
          }
          ((BaseServiceAdminPage<?>)page).setReturnPage(WorkspaceEditPage.this);
          setResponsePage(page);
        }
      }
;
      link.setOutputMarkupId(true);
      link.setEnabled(service.enabled);
      AjaxCheckBox enabled=new AjaxCheckBox("enabled",new PropertyModel<Boolean>(service,"enabled")){
        private static final long serialVersionUID=6369730006169869310L;
        @Override protected void onUpdate(        AjaxRequestTarget target){
          link.setEnabled(getModelObject());
          target.add(link);
        }
      }
;
      item.add(enabled);
      ServiceMenuPageInfo info=service.adminPage;
      link.add(new AttributeModifier("title",new StringResourceModel(info.getDescriptionKey(),(Component)null,null)));
      link.add(new Label("link.label",new StringResourceModel(info.getTitleKey(),(Component)null,null)));
      Image image;
      if (info.getIcon() != null) {
        image=new Image("link.icon",new PackageResourceReference(info.getComponentClass(),info.getIcon()));
      }
 else {
        image=new Image("link.icon",new PackageResourceReference(GeoServerBasePage.class,"img/icons/silk/wrench.png"));
      }
      image.add(new AttributeModifier("alt",new ParamResourceModel(info.getTitleKey(),null)));
      link.add(image);
      item.add(link);
    }
  }
;
  add(serviceList);
}
