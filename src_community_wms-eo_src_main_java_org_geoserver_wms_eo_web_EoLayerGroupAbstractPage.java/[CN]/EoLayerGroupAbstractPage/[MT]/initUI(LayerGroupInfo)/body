{
  this.returnPageClass=EoLayerGroupPage.class;
  lgModel=new LayerGroupDetachableModel(layerGroup);
  layerGroupId=layerGroup.getId();
  add(popupWindow=new ModalWindow("popup"));
  add(dialog=new GeoServerDialog("dialog"));
  Form form=new Form("form",new CompoundPropertyModel(lgModel)){
    @Override public <C>IConverter<C> getConverter(    Class<C> type){
      if (LayerInfo.class.isAssignableFrom(type)) {
        return (IConverter<C>)new LayerInfoConverter();
      }
 else       if (StyleInfo.class.isAssignableFrom(type)) {
        return (IConverter<C>)new StyleInfoConverter();
      }
 else {
        return super.getConverter(type);
      }
    }
  }
;
  add(form);
  name=new TextField<String>("name");
  name.setRequired(true);
  groupName=layerGroup.getName();
  form.add(name);
  form.add(new TextField("title"));
  form.add(new TextArea("abstract"));
  final DropDownChoice<WorkspaceInfo> wsChoice=new DropDownChoice("workspace",new WorkspacesModel(),new WorkspaceChoiceRenderer());
  wsChoice.setNullValid(true);
  if (!isAuthenticatedAsAdmin()) {
    wsChoice.setNullValid(false);
    wsChoice.setRequired(true);
  }
  form.add(wsChoice);
  form.add(envelopePanel=new EnvelopePanel("bounds"));
  envelopePanel.setRequired(true);
  envelopePanel.setCRSFieldVisible(true);
  envelopePanel.setCrsRequired(true);
  envelopePanel.setOutputMarkupId(true);
  form.add(new GeoServerAjaxFormLink("generateBounds"){
    @Override public void onClick(    AjaxRequestTarget target,    Form form){
      LayerGroupInfo lg=getCatalog().getFactory().createLayerGroup();
      for (      EoLayerGroupEntry entry : lgEntryPanel.getEntries()) {
        lg.getLayers().add(entry.getLayer());
        lg.getStyles().add(entry.getStyle());
      }
      try {
        CoordinateReferenceSystem crs=envelopePanel.getCoordinateReferenceSystem();
        if (crs != null) {
          new CatalogBuilder(getCatalog()).calculateLayerGroupBounds(lg,crs);
        }
 else {
          new CatalogBuilder(getCatalog()).calculateLayerGroupBounds(lg);
        }
        envelopePanel.setModelObject(lg.getBounds());
        target.add(envelopePanel);
      }
 catch (      Exception e) {
        throw new WicketRuntimeException(e);
      }
    }
  }
);
  form.add(lgEntryPanel=new EoLayerGroupEntryPanel("layers",layerGroup,popupWindow));
  lgEntryPanel.setOutputMarkupId(true);
  EoLayerTypeRenderer eoLayerTypeRenderer=new EoLayerTypeRenderer();
  final DropDownChoice<EoLayerType> layerTypes=new DropDownChoice<EoLayerType>("layerType",EoLayerType.getRegularTypes(),eoLayerTypeRenderer);
  layerTypes.setModel(new Model<EoLayerType>(null));
  layerTypes.setOutputMarkupId(true);
  form.add(layerTypes);
  final GeoServerAjaxFormLink createStoreLink=new GeoServerAjaxFormLink("createStore"){
    @Override public void onClick(    AjaxRequestTarget target,    Form form){
      final String layerGroupName=getNonNullGroupName(target);
      if (layerGroupName != null) {
        CoverageStoreNewPage coverageStoreCreator=new CoverageStoreNewPage(new ImageMosaicFormat().getName()){
          protected void onSuccessfulSave(          org.geoserver.catalog.CoverageStoreInfo info,          org.geoserver.catalog.Catalog catalog,          org.geoserver.catalog.CoverageStoreInfo savedStore){
            EoCoverageSelectorPage page=new EoCoverageSelectorPage(EoLayerGroupAbstractPage.this,layerGroupName,savedStore.getId());
            setResponsePage(page);
          }
        }
;
        setResponsePage(coverageStoreCreator);
      }
 else {
        dialog.showInfo(target,null,new ParamResourceModel("layerInfoTitle",EoLayerGroupAbstractPage.this),new ParamResourceModel("provideGroupName",EoLayerGroupAbstractPage.this));
      }
    }
  }
;
  createStoreLink.setOutputMarkupId(true);
  form.add(createStoreLink);
  final GeoServerAjaxFormLink addFromStoreLink=new GeoServerAjaxFormLink("addFromStore"){
    @Override public void onClick(    AjaxRequestTarget target,    Form form){
      final String layerGroupName=getNonNullGroupName(target);
      if (layerGroupName != null) {
        EoCoverageSelectorPage page=new EoCoverageSelectorPage(EoLayerGroupAbstractPage.this,layerGroupName);
        setResponsePage(page);
      }
 else {
        dialog.showInfo(target,null,new ParamResourceModel("layerInfoTitle",EoLayerGroupAbstractPage.this),new ParamResourceModel("provideGroupName",EoLayerGroupAbstractPage.this));
      }
    }
  }
;
  addFromStoreLink.setOutputMarkupId(true);
  form.add(addFromStoreLink);
  final GeoServerAjaxFormLink addLayerLink=new GeoServerAjaxFormLink("addLayer"){
    @Override public void onClick(    AjaxRequestTarget target,    Form form){
      popupWindow.setInitialHeight(375);
      popupWindow.setInitialWidth(525);
      popupWindow.setTitle(new ParamResourceModel("chooseLayer",this));
      layerTypes.processInput();
      final EoLayerType layerType=layerTypes.getModelObject();
      popupWindow.setContent(new EoLayerListPanel(popupWindow.getContentId(),layerType,lgEntryPanel.entryProvider){
        @Override protected void handleLayer(        LayerInfo layer,        AjaxRequestTarget target){
          popupWindow.close(target);
          layer.getMetadata().put(EoLayerType.KEY,layerType);
          lgEntryPanel.entryProvider.getItems().add(new EoLayerGroupEntry(layer,layer.getDefaultStyle(),groupName));
          target.add(lgEntryPanel);
          layerTypes.setDefaultModelObject(layerTypes.getDefaultModelObject());
          target.add(layerTypes);
        }
      }
);
      popupWindow.show(target);
    }
  }
;
  addLayerLink.setEnabled(false);
  form.add(addLayerLink);
  final DropDownChoice<EoLayerGroupEntry> outlinesEntryChooser=new DropDownChoice<EoLayerGroupEntry>("sourceLayer",new OutlineSourceModel(lgEntryPanel.items),new LayerGroupEntryRenderer());
  outlinesEntryChooser.setModel(new Model<EoLayerGroupEntry>(null));
  outlinesEntryChooser.setOutputMarkupId(true);
  outlinesEntryChooser.setEnabled(!outlinesPresent(lgEntryPanel.items));
  form.add(outlinesEntryChooser);
  outlinesEntryChooser.add(new AjaxFormComponentUpdatingBehavior("change"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      wsChoice.processInput();
      WorkspaceInfo ws=(WorkspaceInfo)wsChoice.getDefaultModelObject();
      outlinesEntryChooser.processInput();
      EoLayerGroupEntry entry=outlinesEntryChooser.getModelObject();
      try {
        EoCatalogBuilder builder=new EoCatalogBuilder(getCatalog());
        CoverageInfo coverage=(CoverageInfo)((LayerInfo)entry.getLayer()).getResource();
        CoverageStoreInfo store=coverage.getStore();
        String url=store.getURL();
        StructuredGridCoverage2DReader reader=(StructuredGridCoverage2DReader)coverage.getGridCoverageReader(null,null);
        LayerInfo layer=builder.createEoOutlineLayer(url,ws,groupName,coverage.getNativeCoverageName(),reader);
        lgEntryPanel.items.add(new EoLayerGroupEntry(layer,layer.getDefaultStyle(),groupName));
      }
 catch (      Exception e) {
        LOGGER.log(Level.SEVERE,"Failed to create outlines layer",e);
        String layerName=entry.getLayer().prefixedName();
        error(new ParamResourceModel("outlinesCreationError",EoLayerGroupAbstractPage.this,layerName,e.getMessage()).getString());
      }
 finally {
        outlinesEntryChooser.setDefaultModelObject(null);
      }
      target.add(lgEntryPanel);
      target.add(getFeedbackPanel());
      target.add(outlinesEntryChooser);
    }
  }
);
  layerTypes.add(new AjaxFormComponentUpdatingBehavior("change"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      layerTypes.processInput();
      boolean input=layerTypes.getModelObject() != null;
      addLayerLink.setEnabled(input);
      target.add(addLayerLink);
    }
  }
);
  name.add(new AjaxFormComponentUpdatingBehavior("blur"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      groupName=name.getInput();
      boolean nameAvailable=groupName != null && !"".equals(groupName.trim());
      if (!nameAvailable) {
        info(new ParamResourceModel("provideGroupName",EoLayerGroupAbstractPage.this).getString());
      }
 else {
        if (isLayerRenameRequired(groupName)) {
          info(new ParamResourceModel("layerRenameWarning",EoLayerGroupAbstractPage.this,groupName).getString());
        }
      }
      target.add(createStoreLink);
      target.add(addFromStoreLink);
      target.add(getFeedbackPanel());
    }
  }
);
  if (name.getDefaultModelObject() == null || "".equals(name.getDefaultModelObject())) {
    info(new ParamResourceModel("provideGroupName",this).getString());
  }
  form.add(saveLink());
  form.add(cancelLink());
}
