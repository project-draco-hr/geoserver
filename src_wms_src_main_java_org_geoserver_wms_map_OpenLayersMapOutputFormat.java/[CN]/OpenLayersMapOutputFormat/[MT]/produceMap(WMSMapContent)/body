{
  try {
    String templateName;
    boolean useOpenLayers3=isOL3Enabled(mapContent) && browserSupportsOL3(mapContent);
    if (useOpenLayers3) {
      templateName="OpenLayers3MapTemplate.ftl";
    }
 else {
      templateName="OpenLayers2MapTemplate.ftl";
    }
    Template template=cfg.getTemplate(templateName);
    HashMap<String,Object> map=new HashMap<String,Object>();
    map.put("context",mapContent);
    map.put("pureCoverage",hasOnlyCoverages(mapContent));
    map.put("styles",styleNames(mapContent));
    GetMapRequest request=mapContent.getRequest();
    map.put("request",request);
    map.put("yx",String.valueOf(isWms13FlippedCRS(request.getCrs())));
    map.put("maxResolution",new Double(getMaxResolution(mapContent.getRenderingArea())));
    String baseUrl=ResponseUtils.buildURL(request.getBaseUrl(),"/",null,URLType.RESOURCE);
    map.put("baseUrl",canonicUrl(baseUrl));
    String servicePath="wms";
    if (LocalLayer.get() != null) {
      servicePath=LocalLayer.get().getName() + "/" + servicePath;
    }
    if (LocalWorkspace.get() != null) {
      servicePath=LocalWorkspace.get().getName() + "/" + servicePath;
    }
    map.put("servicePath",servicePath);
    map.put("parameters",getLayerParameter(request.getRawKvp()));
    map.put("units",useOpenLayers3 ? getOL3Units(request) : getOL2Units(request));
    if (mapContent.layers().size() == 1) {
      map.put("layerName",mapContent.layers().get(0).getTitle());
    }
 else {
      map.put("layerName","Geoserver layers");
    }
    template.setOutputEncoding("UTF-8");
    ByteArrayOutputStream buff=new ByteArrayOutputStream();
    template.process(map,new OutputStreamWriter(buff,Charset.forName("UTF-8")));
    RawMap result=new RawMap(mapContent,buff,MIME_TYPE);
    return result;
  }
 catch (  TemplateException e) {
    throw new ServiceException(e);
  }
}
