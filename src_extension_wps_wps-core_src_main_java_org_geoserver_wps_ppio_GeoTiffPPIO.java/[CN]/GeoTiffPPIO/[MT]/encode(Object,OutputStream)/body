{
  GridCoverage2D coverage=(GridCoverage2D)value;
  CoordinateReferenceSystem crs=coverage.getCoordinateReferenceSystem();
  boolean unreferenced=crs == null || crs instanceof EngineeringCRS;
  final Object fileSource=coverage.getProperty(AbstractGridCoverage2DReader.FILE_SOURCE_PROPERTY);
  if (fileSource != null && fileSource instanceof String) {
    File file=new File((String)fileSource);
    if (file.exists()) {
      GeoTiffReader reader=null;
      FileInputStream fis=null;
      try {
        if (unreferenced) {
          String name=file.getName().toLowerCase();
          if (!name.endsWith(".tiff") && !name.endsWith(".tif")) {
            throw new IOException("Not a tiff");
          }
        }
 else {
          reader=new GeoTiffReader(file);
          reader.read(null);
        }
        fis=new FileInputStream(file);
        IOUtils.copyLarge(fis,os);
        return;
      }
 catch (      Exception e) {
      }
 finally {
        if (reader != null) {
          reader.dispose();
        }
        if (fis != null) {
          fis.close();
        }
      }
    }
  }
  final RenderedImage renderedImage=coverage.getRenderedImage();
  final int tileWidth=renderedImage.getTileWidth();
  final int tileHeight=renderedImage.getTileHeight();
  final boolean tiled=tileWidth != renderedImage.getWidth() && tileHeight != renderedImage.getHeight();
  if (unreferenced) {
    if (tiled) {
      new ImageWorker(renderedImage).writeTIFF(os,null,0.75f,tileWidth,tileHeight);
    }
 else {
      final Dimension defaultTileSize=JAI.getDefaultTileSize();
      new ImageWorker(renderedImage).writeTIFF(os,null,0.75f,defaultTileSize.width,defaultTileSize.height);
    }
  }
 else {
    GeoTiffFormat format=new GeoTiffFormat();
    final GeoTiffWriteParams wp=new GeoTiffWriteParams();
    wp.setTilingMode(GeoToolsWriteParams.MODE_EXPLICIT);
    if (tiled) {
      wp.setTiling(tileWidth,tileHeight);
    }
 else {
      final Dimension defaultTileSize=JAI.getDefaultTileSize();
      wp.setTiling(defaultTileSize.width,defaultTileSize.height);
    }
    final ParameterValueGroup wparams=TIFF_FORMAT.getWriteParameters();
    wparams.parameter(AbstractGridFormat.GEOTOOLS_WRITE_PARAMS.getName().toString()).setValue(wp);
    final GeneralParameterValue[] wps=(GeneralParameterValue[])wparams.values().toArray(new GeneralParameterValue[1]);
    AbstractGridCoverageWriter writer=(AbstractGridCoverageWriter)format.getWriter(os);
    if (writer == null)     throw new WPSException("Could not find the GeoTIFF writer, please check it's in the classpath");
    try {
      writer.write(coverage,wps);
    }
 catch (    IOException e) {
      throw new ProcessException(e);
    }
 finally {
      try {
        writer.dispose();
      }
 catch (      Exception e) {
      }
    }
  }
}
