{
  final String gridSetName;
  final String templateName;
  if (parameters == null) {
    gridSetName=null;
    templateName=null;
  }
 else {
    gridSetName=parameters.get(GRIDSET_NAME).toOptionalString();
    templateName=parameters.get(GRIDSET_TEMPLATE_NAME).toOptionalString();
  }
  GridSetInfo gridsetInfo;
  if (templateName != null) {
    gridsetInfo=getInfo(templateName);
    gridsetInfo.setName("My_" + gridsetInfo.getName());
    gridsetInfo.setInternal(false);
  }
 else   if (gridSetName != null) {
    gridsetInfo=getInfo(gridSetName);
  }
 else {
    gridsetInfo=getInfo(null);
  }
  IModel<GridSetInfo> model=new Model<GridSetInfo>(gridsetInfo);
  form=new Form<GridSetInfo>("gridSetForm",model);
  FeedbackPanel feedback=new FeedbackPanel("feedback");
  feedback.setOutputMarkupId(true);
  form.add(feedback);
  form.add(name=name(model));
  form.add(description=new TextArea<String>("description",new PropertyModel<String>(model,"description")));
  form.add(crs=crs(model));
  form.add(bounds=bounds(model));
  form.add(computeBoundsLink=computeBoundsLink(form));
  form.add(tileWidth=tileWidth(model));
  form.add(tileHeight=tileHeight(model));
  form.add(tileMatrixSetEditor=new TileMatrixSetEditor("tileMatrixSetEditor",model));
  tileMatrixSetEditor.setOutputMarkupId(true);
  cancelLink=new BookmarkablePageLink("cancel",GridSetsPage.class);
  form.add(cancelLink);
  saveLink=saveLink(form);
  form.add(saveLink);
  add(form);
  tileWidth.getFormComponent().add(new AjaxFormComponentUpdatingBehavior("blur"){
    private static final long serialVersionUID=1L;
    @Override protected void onUpdate(    AjaxRequestTarget target){
      target.add(tileMatrixSetEditor);
    }
  }
);
  tileHeight.getFormComponent().add(new AjaxFormComponentUpdatingBehavior("blur"){
    private static final long serialVersionUID=1L;
    @Override protected void onUpdate(    AjaxRequestTarget target){
      target.add(tileMatrixSetEditor);
    }
  }
);
  addLevelLink=new GeoServerAjaxFormLink("addZoomLevel",form){
    private static final long serialVersionUID=1L;
    @Override protected void onClick(    AjaxRequestTarget target,    Form form){
      addZoomLevel(target);
      target.add(tileMatrixSetEditor);
    }
  }
;
  form.add(addLevelLink);
}
