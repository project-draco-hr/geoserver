{
  GetMapRequest req=map.getRequest();
  Map formatOpts=req.getFormatOptions();
  GridSetBroker gridSetBroker=gwc.getGridSetBroker();
  GridSet gridSet=null;
  if (formatOpts.containsKey("gridset")) {
    gridSet=gridSetBroker.get(formatOpts.get("gridset").toString());
  }
  if (gridSet == null) {
    gridSet=gridSetBroker.get(req.getSRS().toUpperCase());
  }
  if (gridSet != null) {
    return GridSubsetFactory.createGridSubSet(gridSet);
  }
  CoordinateReferenceSystem crs=getCoordinateReferenceSystem(map);
  Integer epsgCode=null;
  try {
    epsgCode=CRS.lookupEpsgCode(crs,false);
  }
 catch (  Exception e) {
    throw new ServiceException("Unable to determine epsg code for " + crs,e);
  }
  if (epsgCode == null) {
    throw new ServiceException("Unable to determine epsg code for " + crs);
  }
  SRS srs=SRS.getSRS(epsgCode);
  Set<GridSubset> gridSubsets=new LinkedHashSet<GridSubset>();
  for (  MapLayerInfo l : req.getLayers()) {
    TileLayer tl=gwc.getTileLayerByName(l.getName());
    if (tl == null) {
      throw new ServiceException("No tile layer for " + l.getName());
    }
    List<GridSubset> theseGridSubsets=tl.getGridSubsetsForSRS(srs);
    if (gridSubsets.isEmpty()) {
      gridSubsets.addAll(theseGridSubsets);
    }
 else {
      gridSubsets.retainAll(theseGridSubsets);
    }
    if (gridSubsets.isEmpty()) {
      throw new ServiceException("No suitable " + epsgCode + " grid subset for "+ req.getLayers());
    }
  }
  if (gridSubsets.size() > 1) {
    if (LOGGER.isLoggable(Level.WARNING)) {
      StringBuilder msg=new StringBuilder("Found multiple grid subsets: ");
      for (      GridSubset gs : gridSubsets) {
        msg.append(gs.getName()).append(", ");
      }
      msg.setLength(msg.length() - 2);
      msg.append(". Choosing first.");
      LOGGER.warning(msg.toString());
    }
  }
  return gridSubsets.iterator().next();
}
