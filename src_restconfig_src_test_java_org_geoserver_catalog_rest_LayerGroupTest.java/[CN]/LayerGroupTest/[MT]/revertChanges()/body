{
  removeLayerGroup(null,"sfLayerGroup");
  removeLayerGroup(null,"citeLayerGroup");
  removeLayerGroup("sf","foo");
  removeLayerGroup(null,"newLayerGroup");
  removeLayerGroup(null,"newLayerGroupWithTypeCONTAINER");
  removeLayerGroup(null,"newLayerGroupWithTypeEO");
  removeLayerGroup(null,"nestedLayerGroupTest");
  LayerGroupInfo lg=catalog.getFactory().createLayerGroup();
  lg.setName("sfLayerGroup");
  lg.getLayers().add(catalog.getLayerByName("sf:PrimitiveGeoFeature"));
  lg.getLayers().add(catalog.getLayerByName("sf:AggregateGeoFeature"));
  lg.getStyles().add(catalog.getStyleByName(StyleInfo.DEFAULT_POINT));
  lg.getStyles().add(catalog.getStyleByName(StyleInfo.DEFAULT_POINT));
  lg.setBounds(new ReferencedEnvelope(-180,-90,180,90,CRS.decode("EPSG:4326")));
  catalog.add(lg);
  LayerGroupInfo lg2=catalog.getFactory().createLayerGroup();
  lg2.setName("citeLayerGroup");
  List<PublishedInfo> layers=lg2.getLayers();
  layers.add(catalog.getLayerByName("cite:Bridges"));
  layers.add(catalog.getLayerByName("cite:Buildings"));
  layers.add(catalog.getLayerByName("cite:Forests"));
  layers.add(catalog.getLayerByName("cite:Lakes"));
  layers.add(catalog.getLayerByName("cite:Ponds"));
  layers.add(catalog.getLayerByName("cite:Streams"));
  List<StyleInfo> styles=lg2.getStyles();
  styles.add(null);
  styles.add(null);
  styles.add(null);
  styles.add(null);
  styles.add(null);
  styles.add(null);
  lg2.setBounds(new ReferencedEnvelope(-180,-90,180,90,CRS.decode("EPSG:4326")));
  catalog.add(lg2);
}
