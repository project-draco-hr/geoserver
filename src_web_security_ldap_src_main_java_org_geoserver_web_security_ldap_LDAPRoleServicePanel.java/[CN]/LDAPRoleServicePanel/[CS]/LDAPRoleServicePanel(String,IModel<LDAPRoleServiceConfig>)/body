{
  super(id,model);
  add(new TextField("serverURL").setRequired(true));
  add(new CheckBox("useTLS"));
  add(new TextField("groupSearchBase").setRequired(true));
  add(new TextField("groupSearchFilter"));
  add(new TextField("allGroupsSearchFilter"));
  add(new TextField("userFilter"));
  add(new AjaxCheckBox("bindBeforeGroupSearch"){
    @Override protected void onUpdate(    AjaxRequestTarget target){
      WebMarkupContainer c=(WebMarkupContainer)LDAPRoleServicePanel.this.get("authenticationPanelContainer");
      LDAPAuthenticationPanel ldapAuthenticationPanel=(LDAPAuthenticationPanel)c.get("authenticationPanel");
      ldapAuthenticationPanel.resetModel();
      ldapAuthenticationPanel.setVisible(getModelObject().booleanValue());
      target.addComponent(c);
    }
  }
);
  LDAPAuthenticationPanel authPanel=new LDAPAuthenticationPanel("authenticationPanel");
  authPanel.setVisible(model.getObject().isBindBeforeGroupSearch());
  add(new WebMarkupContainer("authenticationPanelContainer").add(authPanel).setOutputMarkupId(true));
}
