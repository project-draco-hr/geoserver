{
  super(sampleDim);
  this.name=info.getName();
  final InternationalString sampleDimDescription=sampleDim.getDescription();
  this.configuredDescription=(sampleDimDescription == null || !sampleDimDescription.toString().equalsIgnoreCase(name)) ? new SimpleInternationalString(name) : sampleDimDescription;
  this.sampleDim=sampleDim;
  final List<Category> categories=sampleDim.getCategories();
  this.configuredRange=info.getRange();
  this.customCategories=categories;
  final String uom=info.getUnit();
  Unit defaultUnit=sampleDim.getUnits();
  Unit unit=defaultUnit;
  try {
    if (uom != null) {
      unit=Unit.valueOf(uom);
    }
  }
 catch (  IllegalArgumentException iae) {
    if (LOGGER.isLoggable(Level.WARNING) && defaultUnit != null) {
      LOGGER.warning("Unable to parse the specified unit (" + uom + "). Using the previous one: "+ defaultUnit.toString());
    }
  }
  this.configuredUnit=unit;
  final List<Double> nullValues=info.getNullValues();
  if (nullValues != null && nullValues.size() > 0) {
    final int size=nullValues.size();
    configuredNoDataValues=new double[size];
    for (int i=0; i < size; i++) {
      configuredNoDataValues[i]=nullValues.get(i);
    }
  }
 else {
    this.configuredNoDataValues=sampleDim.getNoDataValues();
  }
  boolean nodataConfigured=configuredNoDataValues != null && configuredNoDataValues.length > 0;
  int numCategories=0;
  if (categories != null && (numCategories=categories.size()) > 0) {
    this.customCategories=new ArrayList<Category>(numCategories);
    Category wrapped=null;
    for (    Category category : categories) {
      wrapped=category;
      if (Category.NODATA.getName().equals(category.getName())) {
        if (category.isQuantitative()) {
          double minimum=nodataConfigured ? configuredNoDataValues[0] : category.getRange().getMinimum();
          double maximum=nodataConfigured ? configuredNoDataValues[0] : category.getRange().getMaximum();
          if (Double.isNaN(minimum) && Double.isNaN(maximum)) {
            wrapped=new Category(Category.NODATA.getName(),category.getColors()[0],minimum);
          }
 else {
            wrapped=new Category(Category.NODATA.getName(),category.getColors(),NumberRange.create(minimum,maximum));
          }
        }
      }
      customCategories.add(wrapped);
    }
  }
}
