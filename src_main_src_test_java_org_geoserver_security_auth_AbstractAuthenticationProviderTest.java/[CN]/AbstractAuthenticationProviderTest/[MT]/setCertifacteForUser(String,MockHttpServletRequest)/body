{
  X509Certificate x509=new X509Certificate(){
    @Override public Set<String> getCriticalExtensionOIDs(){
      return null;
    }
    @Override public byte[] getExtensionValue(    String arg0){
      return null;
    }
    @Override public Set<String> getNonCriticalExtensionOIDs(){
      return null;
    }
    @Override public boolean hasUnsupportedCriticalExtension(){
      return false;
    }
    @Override public void checkValidity() throws CertificateExpiredException, CertificateNotYetValidException {
    }
    @Override public void checkValidity(    Date arg0) throws CertificateExpiredException, CertificateNotYetValidException {
    }
    @Override public int getBasicConstraints(){
      return 0;
    }
    @Override public Principal getIssuerDN(){
      return null;
    }
    @Override public boolean[] getIssuerUniqueID(){
      return null;
    }
    @Override public boolean[] getKeyUsage(){
      return null;
    }
    @Override public Date getNotAfter(){
      return null;
    }
    @Override public Date getNotBefore(){
      return null;
    }
    @Override public BigInteger getSerialNumber(){
      return null;
    }
    @Override public String getSigAlgName(){
      return null;
    }
    @Override public String getSigAlgOID(){
      return null;
    }
    @Override public byte[] getSigAlgParams(){
      return null;
    }
    @Override public byte[] getSignature(){
      return null;
    }
    @Override public Principal getSubjectDN(){
      return new Principal(){
        @Override public String getName(){
          return "cn=" + userName + ",ou=ou1";
        }
      }
;
    }
    @Override public boolean[] getSubjectUniqueID(){
      return null;
    }
    @Override public byte[] getTBSCertificate() throws CertificateEncodingException {
      return null;
    }
    @Override public int getVersion(){
      return 0;
    }
    @Override public byte[] getEncoded() throws CertificateEncodingException {
      return null;
    }
    @Override public PublicKey getPublicKey(){
      return null;
    }
    @Override public String toString(){
      return null;
    }
    @Override public void verify(    PublicKey arg0) throws CertificateException, NoSuchAlgorithmException, InvalidKeyException, NoSuchProviderException, SignatureException {
    }
    @Override public void verify(    PublicKey arg0,    String arg1) throws CertificateException, NoSuchAlgorithmException, InvalidKeyException, NoSuchProviderException, SignatureException {
    }
  }
;
  request.setAttribute("javax.servlet.request.X509Certificate",new X509Certificate[]{x509});
}
