{
  GWC mediator=GWC.get();
  GeoServerTileLayer tileLayer=(GeoServerTileLayer)mediator.getTileLayerByName(tileLayerModel.getObject().getName());
  mediator.removeTileLayers(Arrays.asList(tileLayerModel.getObject().getName()));
  assertNull(mediator.getTileLayer(layerModel.getObject()));
  GWCConfig config=mediator.getConfig();
  boolean defaultCaching=config.isCacheLayersByDefault();
  config.setCacheLayersByDefault(true);
  mediator.saveConfig(config);
  GeoServerTileLayerInfo newInfo=TileLayerInfoUtil.loadOrCreate(layerModel.getObject(),mediator.getConfig());
  tileLayerModel=new GeoServerTileLayerInfoModel(newInfo,true);
  tester.startPage(new FormTestPage(new ComponentBuilder(){
    private static final long serialVersionUID=-6705646666953650890L;
    public Component buildComponent(    final String id){
      return new LayerCacheOptionsTabPanel(id,layerModel,tileLayerModel);
    }
  }
));
  tester.assertComponent("form:panel",LayerCacheOptionsTabPanel.class);
  FormTester formTester=tester.newFormTester("form");
  formTester.setValue("panel:tileLayerEditor:createTileLayer",false);
  formTester.submit();
  LayerCacheOptionsTabPanel panel=(LayerCacheOptionsTabPanel)tester.getComponentFromLastRenderedPage("form:panel");
  panel.save();
  assertNotNull(tileLayerModel.getEnabled());
  assertFalse(tileLayerModel.getEnabled().booleanValue());
  assertNull(mediator.getTileLayer(layerModel.getObject()));
  config.setCacheLayersByDefault(defaultCaching);
  mediator.saveConfig(config);
  mediator.add(tileLayer);
}
