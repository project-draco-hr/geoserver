{
  List<URL> urls;
  try {
    String defaultResource="org/geoserver/gwc/advertised_formats.properties";
    String testResource="org/geoserver/gwc/advertised_formats_unittesting.properties";
    ClassLoader classLoader=GWC.class.getClassLoader();
    urls=newArrayList(forEnumeration(classLoader.getResources(defaultResource)));
    urls.addAll(newArrayList(forEnumeration(classLoader.getResources(testResource))));
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
  Set<String> defaultFormats=ImmutableSet.of("image/png","image/png8","image/jpeg","image/gif");
  Set<String> expectedVector=union(defaultFormats,ImmutableSet.of("test/vector1","test/vector2","application/json;type=utfgrid"));
  Set<String> expectedRaster=union(defaultFormats,ImmutableSet.of("test/raster1","test/raster2;type=test"));
  Set<String> expectedGroup=union(defaultFormats,ImmutableSet.of("test/group1","test/group2","application/json;type=utfgrid"));
  assertEquals(expectedVector,GWC.getAdvertisedCachedFormats(PublishedType.VECTOR,urls));
  assertEquals(expectedVector,GWC.getAdvertisedCachedFormats(PublishedType.REMOTE,urls));
  assertEquals(expectedRaster,GWC.getAdvertisedCachedFormats(PublishedType.RASTER,urls));
  assertEquals(expectedRaster,GWC.getAdvertisedCachedFormats(PublishedType.WMS,urls));
  assertEquals(expectedGroup,GWC.getAdvertisedCachedFormats(PublishedType.GROUP,urls));
}
