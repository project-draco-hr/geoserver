{
  SecurityAuthProviderConfig config=createAuthConfig(GeoServerAuthenticationProvider.DEFAULT_NAME,UsernamePasswordAuthenticationProvider.class,"default2");
  SecurityConfigValidator validator=new SecurityConfigValidator(getSecurityManager());
  try {
    config.setName("default2");
    validator.validateAddAuthProvider(config);
    fail("user group service not found should fail");
  }
 catch (  SecurityConfigException ex) {
    assertEquals(USERGROUP_SERVICE_NOT_FOUND_$1,ex.getId());
    assertEquals("default2",ex.getArgs()[0]);
  }
  try {
    config.setName("other");
    validator.validateAddAuthProvider(config);
    fail("user group service not found should fail");
  }
 catch (  SecurityConfigException ex) {
    assertEquals(USERGROUP_SERVICE_NOT_FOUND_$1,ex.getId());
    assertEquals("default2",ex.getArgs()[0]);
  }
  try {
    config.setName("");
    validator.validateRemoveAuthProvider(config);
    fail("no name should fail");
  }
 catch (  SecurityConfigException ex) {
    assertEquals(NAME_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
  }
  try {
    config.setName(GeoServerAuthenticationProvider.DEFAULT_NAME);
    validator.validateRemoveAuthProvider(config);
    fail("active auth provieder should fail");
  }
 catch (  SecurityConfigException ex) {
    assertEquals(AUTH_PROVIDER_ACTIVE_$1,ex.getId());
    assertEquals(GeoServerAuthenticationProvider.DEFAULT_NAME,ex.getArgs()[0]);
  }
}
