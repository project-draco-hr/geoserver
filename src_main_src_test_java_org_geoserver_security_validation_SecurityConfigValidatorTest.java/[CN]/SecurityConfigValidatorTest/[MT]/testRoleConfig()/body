{
  SecurityRoleServiceConfig config=getRoleConfig(XMLRoleService.DEFAULT_NAME,MemoryRoleService.class,GeoServerRole.ADMIN_ROLE.getAuthority());
  boolean fail;
  fail=false;
  try {
    config.setName(null);
    getSecurityManager().removeRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(NAME_REQUIRED,ex.getId());
    assertEquals(0,ex.getArgs().length);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
  config.setName("abcd");
  for (  GeoServerRole role : GeoServerRole.SystemRoles) {
    fail=false;
    config.setAdminRoleName(role.getAuthority());
    try {
      getSecurityManager().saveRoleService(config);
    }
 catch (    SecurityConfigException ex) {
      assertEquals(RESERVED_ROLE_NAME,ex.getId());
      assertEquals(role.getAuthority(),ex.getArgs()[0]);
      LOGGER.info(ex.getMessage());
      fail=true;
    }
    assertTrue(fail);
  }
  for (  GeoServerRole role : GeoServerRole.SystemRoles) {
    fail=false;
    config.setGroupAdminRoleName(role.getAuthority());
    try {
      getSecurityManager().saveRoleService(config);
    }
 catch (    SecurityConfigException ex) {
      assertEquals(RESERVED_ROLE_NAME,ex.getId());
      assertEquals(role.getAuthority(),ex.getArgs()[0]);
      LOGGER.info(ex.getMessage());
      fail=true;
    }
    assertTrue(fail);
  }
  fail=false;
  try {
    config.setName(XMLRoleService.DEFAULT_NAME);
    getSecurityManager().removeRoleService(config);
  }
 catch (  SecurityConfigException ex) {
    assertEquals(ROLE_SERVICE_ACTIVE_$1,ex.getId());
    assertEquals(XMLRoleService.DEFAULT_NAME,ex.getArgs()[0]);
    LOGGER.info(ex.getMessage());
    fail=true;
  }
  assertTrue(fail);
}
