{
  start("Layer");
  Filter filter;
{
    Filter enabled=equal("enabled",Boolean.TRUE);
    Filter advertised=equal("advertised",Boolean.TRUE);
    filter=and(enabled,advertised);
  }
  if (request.getNamespace() != null) {
    final String nsPrefix=request.getNamespace();
    final String nsProp="resource.namespace.prefix";
    Filter equals=equal(nsProp,nsPrefix);
    filter=and(filter,equals);
  }
  final Catalog catalog=wmsConfig.getCatalog();
  WMSInfo serviceInfo=wmsConfig.getServiceInfo();
  element("Title",serviceInfo.getTitle());
  element("Abstract",serviceInfo.getAbstract());
  List<String> srsList=serviceInfo.getSRS();
  Set<String> srs=new HashSet<String>();
  if (srsList != null) {
    srs.addAll(srsList);
  }
  handleRootCrsList(srs);
  CloseableIterator<LayerInfo> layers;
  layers=catalog.list(LayerInfo.class,filter);
  try {
    handleRootBbox(layers);
  }
  finally {
    layers.close();
  }
  handleAuthorityURL(serviceInfo.getAuthorityURLs());
  handleLayerIdentifiers(serviceInfo.getIdentifiers());
  SortBy layerOrder=asc("name");
  layers=catalog.list(LayerInfo.class,filter,null,null,layerOrder);
  try {
    handleLayerTree(layers);
  }
  finally {
    layers.close();
  }
  CloseableIterator<LayerGroupInfo> layerGroups;
{
    final Filter lgFilter=Predicates.acceptAll();
    SortBy layerGroupOrder=asc("name");
    layerGroups=catalog.list(LayerGroupInfo.class,lgFilter,null,null,layerGroupOrder);
  }
  try {
    handleLayerGroups(layerGroups);
  }
 catch (  FactoryException e) {
    throw new RuntimeException("Can't obtain Envelope of Layer-Groups: " + e.getMessage(),e);
  }
catch (  TransformException e) {
    throw new RuntimeException("Can't obtain Envelope of Layer-Groups: " + e.getMessage(),e);
  }
 finally {
    layerGroups.close();
  }
  end("Layer");
}
