{
  String layerName=layerGroup.prefixedName();
  AttributesImpl qatts=new AttributesImpl();
  boolean queryable=wmsConfig.isQueryable(layerGroup);
  qatts.addAttribute("","queryable","queryable","",queryable ? "1" : "0");
  start("Layer",qatts);
  if (!LayerGroupInfo.Mode.CONTAINER.equals(layerGroup.getMode())) {
    element("Name",layerName);
  }
  if (StringUtils.isEmpty(layerGroup.getTitle())) {
    element("Title",layerName);
  }
 else {
    element("Title",layerGroup.getTitle());
  }
  if (StringUtils.isEmpty(layerGroup.getAbstract())) {
    element("Abstract","Layer-Group type layer: " + layerName);
  }
 else {
    element("Abstract",layerGroup.getAbstract());
  }
  final ReferencedEnvelope layerGroupBounds=layerGroup.getBounds();
  final ReferencedEnvelope latLonBounds=layerGroupBounds.transform(DefaultGeographicCRS.WGS84,true);
  String authority=layerGroupBounds.getCoordinateReferenceSystem().getIdentifiers().toArray()[0].toString();
  element("CRS",authority);
  handleGeographicBoundingBox(latLonBounds);
  handleBBox(layerGroupBounds,authority);
  if (LayerGroupInfo.Mode.EO.equals(layerGroup.getMode())) {
    LayerInfo rootLayer=layerGroup.getRootLayer();
    if (rootLayer.getType() == PublishedType.VECTOR) {
      dimensionHelper.handleVectorLayerDimensions(rootLayer);
    }
 else     if (rootLayer.getType() == PublishedType.RASTER) {
      dimensionHelper.handleRasterLayerDimensions(rootLayer);
    }
    layersAlreadyProcessed.add(layerGroup.getRootLayer());
  }
  handleAuthorityURL(layerGroup.getAuthorityURLs());
  handleLayerIdentifiers(layerGroup.getIdentifiers());
  Set<MetadataLinkInfo> aggregatedLinks=new HashSet<MetadataLinkInfo>();
  for (  LayerInfo layer : Iterables.filter(layerGroup.getLayers(),LayerInfo.class)) {
    List<MetadataLinkInfo> metadataLinks=layer.getResource().getMetadataLinks();
    if (metadataLinks != null) {
      aggregatedLinks.addAll(metadataLinks);
    }
  }
  handleMetadataList(aggregatedLinks);
  if (!LayerGroupInfo.Mode.SINGLE.equals(layerGroup.getMode())) {
    for (    PublishedInfo child : layerGroup.getLayers()) {
      if (child instanceof LayerInfo) {
        LayerInfo layer=(LayerInfo)child;
        if (isExposable(layer)) {
          handleLayer((LayerInfo)child);
          layersAlreadyProcessed.add((LayerInfo)child);
        }
      }
 else {
        handleLayerGroup((LayerGroupInfo)child,layersAlreadyProcessed);
      }
    }
  }
  end("Layer");
}
