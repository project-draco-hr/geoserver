{
  boolean queryable=wmsConfig.isQueryable(layer);
  AttributesImpl qatts=attributes("queryable",queryable ? "1" : "0");
  boolean opaque=wmsConfig.isOpaque(layer);
  qatts.addAttribute("","opaque","opaque","",opaque ? "1" : "0");
  Integer cascadedHopCount=wmsConfig.getCascadedHopCount(layer);
  if (cascadedHopCount != null) {
    qatts.addAttribute("","cascaded","cascaded","",String.valueOf(cascadedHopCount));
  }
  start("Layer",qatts);
  element("Name",layer.prefixedName());
  element("Title",layer.getResource().getTitle());
  element("Abstract",layer.getResource().getAbstract());
  handleKeywordList(layer.getResource().getKeywords());
  final String crs=layer.getResource().getSRS();
  element("CRS",crs);
  element("CRS","CRS:84");
  ReferencedEnvelope llbbox=layer.getResource().getLatLonBoundingBox();
  handleGeographicBoundingBox(llbbox);
  handleBBox(llbbox,"CRS:84");
  ReferencedEnvelope bbox;
  try {
    bbox=layer.getResource().boundingBox();
  }
 catch (  Exception e) {
    throw new RuntimeException("Unexpected error obtaining bounding box for layer " + layer.getName(),e);
  }
  if (bbox != null) {
    handleBBox(bbox,crs);
    handleAdditionalBBox(bbox,crs,layer);
  }
  if (layer.getType() == Type.VECTOR) {
    dimensionHelper.handleVectorLayerDimensions(layer);
  }
 else   if (layer.getType() == Type.RASTER) {
    dimensionHelper.handleRasterLayerDimensions(layer);
  }
  handleAttribution(layer);
  handleAuthorityURL(layer.getAuthorityURLs());
  handleLayerIdentifiers(layer.getIdentifiers());
  handleMetadataList(layer.getResource().getMetadataLinks());
  handleStyles(layer);
  handleScaleDenominator(layer);
  end("Layer");
}
