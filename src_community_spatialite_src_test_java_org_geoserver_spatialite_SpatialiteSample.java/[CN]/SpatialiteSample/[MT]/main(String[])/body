{
  try {
    Class.forName("org.sqlite.JDBC");
    Connection conn=null;
    String curr_dir="";
    try {
      SQLiteConfig config=new SQLiteConfig();
      config.enableLoadExtension(true);
      conn=DriverManager.getConnection("jdbc:sqlite:spatialiteSample.sqlite",config.toProperties());
      Statement stmt=conn.createStatement();
      stmt.setQueryTimeout(30);
      File dir1=new File(".");
      try {
        curr_dir=dir1.getCanonicalPath();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      stmt.execute("SELECT load_extension('" + curr_dir + "/lib/native/Windows/amd64/libspatialite-2-4.dll')");
      String sql="SELECT InitSpatialMetaData();";
      stmt.execute(sql);
      sql="CREATE TABLE test_pt (";
      sql+="id INTEGER NOT NULL PRIMARY KEY,";
      sql+="name TEXT NOT NULL)";
      stmt.execute(sql);
      sql="SELECT AddGeometryColumn('test_pt', ";
      sql+="'geom', 4326, 'POINT', 'XY')";
      stmt.execute(sql);
      sql="CREATE TABLE test_ln (";
      sql+="id INTEGER NOT NULL PRIMARY KEY,";
      sql+="name TEXT NOT NULL)";
      stmt.execute(sql);
      sql="SELECT AddGeometryColumn('test_ln', ";
      sql+="'geom', 4326, 'LINESTRING', 'XY')";
      stmt.execute(sql);
      sql="CREATE TABLE test_pg (";
      sql+="id INTEGER NOT NULL PRIMARY KEY,";
      sql+="name TEXT NOT NULL)";
      stmt.execute(sql);
      sql="SELECT AddGeometryColumn('test_pg', ";
      sql+="'geom', 4326, 'POLYGON', 'XY')";
      stmt.execute(sql);
      conn.setAutoCommit(false);
      int i;
      for (i=0; i < 100; i++) {
        sql="INSERT INTO test_pt (id, name, geom) VALUES (";
        sql+=i + 1;
        sql+=", 'test POINT #";
        sql+=i + 1;
        sql+="', GeomFromText('POINT(";
        sql+=i / 1000.0;
        sql+=" ";
        sql+=i / 1000.0;
        sql+=")', 4326))";
        stmt.executeUpdate(sql);
      }
      conn.commit();
      sql="SELECT DISTINCT Count(*), GeometryType(geom), ";
      sql+="Srid(geom) FROM test_pt";
      ResultSet rs=stmt.executeQuery(sql);
      while (rs.next()) {
        String msg="> Inserted ";
        msg+=rs.getInt(1);
        msg+=" entities of type ";
        msg+=rs.getString(2);
        msg+=" SRID=";
        msg+=rs.getInt(3);
        System.out.println(msg);
      }
      sql="INSERT INTO test_ln (id, name, geom) ";
      sql+="VALUES (?, ?, GeomFromText(?, 4326))";
      PreparedStatement ins_stmt=conn.prepareStatement(sql);
      conn.setAutoCommit(false);
      for (i=0; i < 100000; i++) {
        String name="test LINESTRING #";
        name+=i + 1;
        String geom="LINESTRING (";
        if ((i % 2) == 1) {
          geom+="-180.0 -90.0, ";
          geom+=-10.0 - (i / 1000.0);
          geom+=" ";
          geom+=-10.0 - (i / 1000.0);
          geom+=", ";
          geom+=-10.0 - (i / 1000.0);
          geom+=" ";
          geom+=10.0 + (i / 1000.0);
          geom+=", ";
          geom+=10.0 + (i / 1000.0);
          geom+=" ";
          geom+=10.0 + (i / 1000.0);
          geom+=", 180.0 90.0";
        }
 else {
          geom+=-10.0 - (i / 1000.0);
          geom+=" ";
          geom+=-10.0 - (i / 1000.0);
          geom+=", ";
          geom+=10.0 + (i / 1000.0);
          geom+=" ";
          geom+=10.0 + (i / 1000.0);
        }
        geom+=")";
        ins_stmt.setInt(1,i + 1);
        ins_stmt.setString(2,name);
        ins_stmt.setString(3,geom);
        ins_stmt.executeUpdate();
      }
      conn.commit();
      sql="SELECT DISTINCT Count(*), GeometryType(geom), ";
      sql+="Srid(geom) FROM test_ln";
      rs=stmt.executeQuery(sql);
      while (rs.next()) {
        String msg="> Inserted ";
        msg+=rs.getInt(1);
        msg+=" entities of type ";
        msg+=rs.getString(2);
        msg+=" SRID=";
        msg+=rs.getInt(3);
        System.out.println(msg);
      }
      sql="INSERT INTO test_pg (id, name, geom) ";
      sql+="VALUES (?, ?, GeomFromText(?, 4326))";
      ins_stmt=conn.prepareStatement(sql);
      conn.setAutoCommit(false);
      for (i=0; i < 100000; i++) {
        String name="test POLYGON #";
        name+=i + 1;
        ins_stmt.setInt(1,i + 1);
        ins_stmt.setString(2,name);
        String geom="POLYGON((";
        geom+=-10.0 - (i / 1000.0);
        geom+=" ";
        geom+=-10.0 - (i / 1000.0);
        geom+=", ";
        geom+=10.0 + (i / 1000.0);
        geom+=" ";
        geom+=-10.0 - (i / 1000.0);
        geom+=", ";
        geom+=10.0 + (i / 1000.0);
        geom+=" ";
        geom+=10.0 + (i / 1000.0);
        geom+=", ";
        geom+=-10.0 - (i / 1000.0);
        geom+=" ";
        geom+=10.0 + (i / 1000.0);
        geom+=", ";
        geom+=-10.0 - (i / 1000.0);
        geom+=" ";
        geom+=-10.0 - (i / 1000.0);
        geom+="))";
        ins_stmt.setInt(1,i + 1);
        ins_stmt.setString(2,name);
        ins_stmt.setString(3,geom);
        ins_stmt.executeUpdate();
      }
      conn.commit();
      sql="SELECT DISTINCT Count(*), GeometryType(geom), ";
      sql+="Srid(geom) FROM test_pg";
      rs=stmt.executeQuery(sql);
      while (rs.next()) {
        String msg="> Inserted ";
        msg+=rs.getInt(1);
        msg+=" entities of type ";
        msg+=rs.getString(2);
        msg+=" SRID=";
        msg+=rs.getInt(3);
        System.out.println(msg);
      }
    }
 catch (    SQLException e) {
      System.err.println(e.getMessage());
    }
 finally {
      try {
        if (conn != null)         conn.close();
      }
 catch (      SQLException e) {
        System.err.println(e);
      }
    }
  }
 catch (  RuntimeException e) {
    System.err.println(e.getMessage());
  }
}
